//CLARKEA JOB (JOL),'C.CLARKE',MSGCLASS=X,NOTIFY=CLARKE,
//             MSGLEVEL=(0,0)
//* FOR  COMPILER MODULES ONLY (CVC SEPT 1988)
//ASM    PROC  MEM=,RENT=,LDECK=NONE,LLIB='CLARKE.JOL40.LOAD',
//             TEST=NO
//GET    EXEC  PGM=JRRSCAN,PARM=&MEM
//IN       DD  DSN=CLARKE.JOL40B.ASM,DISP=SHR
//         DD  DSN=CLARKE.JOL40X8.ASM,DISP=SHR
//         DD  DSN=CLARKE.JOL40.ASM,DISP=SHR
//         DD  DSN=CLARKE.JOL40B.SOURCE,DISP=SHR
//         DD  DSN=CLARKE.JOL40X8.SOURCE,DISP=SHR
//         DD  DSN=CLARKE.JOL40.SOURCE,DISP=SHR
//         DD  DSN=CLARKE.JOL40X8.MACLIB,DISP=SHR
//         DD  DSN=CLARKE.JOL40.MACLIB,DISP=SHR
//OUT      DD  SPACE=(TRK,(20,20)),DISP=(,PASS),
//             UNIT=SYSDA,DCB=(LRECL=80,RECFM=FB,BLKSIZE=6160)
//ASM EXEC PGM=ASMBLR,
//             COND=(4,LT,GET),
//             PARM=(&RENT.RENT,MCALL,NODECK,OBJ,TERM,
//             'XREF(SHORT),TEST,SYSPARM(OS=F4)')
//*YSTERM  DD  SYSOUT=* FREE=CLOSE,HOLD=YES
//SYSTERM  DD  DSN=CLARKE.AS.LIST(&MEM),DISP=SHR,
//             DCB=CLARKE.A.LINKLIST
//SYSPRINT DD  SYSOUT=* FREE=CLOSE,HOLD=NO
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,DCB=BLKSIZE=19040
//         DD  DSN=CLARKE.JOL40B.MACLIB,DISP=SHR
//         DD  DSN=CLARKE.JOL40X8.MACLIB,DISP=SHR
//         DD  DSN=CLARKE.JOL40.MACLIB,DISP=SHR
//         DD  DSN=CLARKE.JOL40.TSOMAC1,DISP=SHR
//         DD  DSN=CLARKE.SYS1.FMODGEN,DISP=SHR
//*        DD  DSN=SYS1.FMODGEN,DISP=SHR
//         DD  DSN=SYS1.FMODGEN,DISP=SHR
//         DD  DSN=CLARKE.PRIVATE.MACLIB,DISP=SHR
//         DD  DSN=CLARKE.JOL40X8.SOURCE,DISP=SHR
//         DD  DSN=CLARKE.JOL40.SOURCE,DISP=SHR
//         DD  DSN=CLARKE.JOL40B.ASM,DISP=SHR
//         DD  DSN=CLARKE.JOL40X8.ASM,DISP=SHR
//         DD  DSN=CLARKE.JOL40.ASM,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(5,2)),UNIT=SYSDA
//SYSUT2   DD  SPACE=(CYL,(5,2)),UNIT=SYSDA
//SYSUT3   DD  SPACE=(CYL,(5,2)),UNIT=SYSDA
//SYSGO    DD  SPACE=(TRK,(20,20)),DISP=(,PASS),
//             UNIT=SYSDA,DCB=(LRECL=80,RECFM=FB,BLKSIZE=6160)
//SYSIN    DD  DSN=*.GET.OUT,DISP=(OLD,DELETE)
//COPY   EXEC  PGM=IEBGENER,COND=((4,LT,ASM),(0,LT,GET))
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=*.ASM.SYSGO,DISP=(OLD,DELETE)
//SYSUT2   DD  DSN=CLARKE.JOL40.OBJ(&MEM),DISP=OLD
//SYSIN    DD  DUMMY
//TELL   EXEC  PGM=KEQEFT01,COND=(1,GT,ASM),
//             PARM='SE ''&MEM IS BAD'' USER(CLARKE)'
//SYSTSPRT DD  DUMMY
//SYSTSIN  DD  DUMMY
//GETLK  EXEC  PGM=JRRSCAN,PARM=&LDECK,
//             COND=((4,LT,ASM),(0,LT,GET),(0,LT,COPY))
//IN       DD  DSN=CLARKE.CVC.LKED,DISP=SHR
//OUT      DD  SPACE=(TRK,(1,1)),DISP=(,PASS),
//             UNIT=SYSDA,DCB=(LRECL=80,RECFM=FB,BLKSIZE=0400)
//LK     EXEC  PGM=IEWL,
//             PARM=(LIST,LET,MAP,XREF,&TEST.TEST),
//             COND=((4,LT,ASM),(0,LT,GET),(0,LT,COPY),(0,LT,GETLK))
//SYSPRINT DD  DSN=CLARKE.A.LINKLIST(&LDECK),DISP=SHR
//OBJ      DD  DSN=CLARKE.JOL40.OBJ,DISP=SHR
//SYSLIB   DD  DSN=CLARKE.JOL40.OBJ,DISP=SHR
//SYSLIN   DD  DSN=*.GETLK.OUT,DISP=(OLD,DELETE)
//SYSLMOD  DD  DSN=&LLIB,DISP=SHR,SPACE=(CYL,(1,1,1))
//SYSUTI   DD  UNIT=SYSDA,SPACE=(4000,(1000,1000))
//       PEND
//PACK   PROC  DS=
//PACK   EXEC  PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&DS,DISP=SHR
//SYSUT2   DD  DSN=&DS,DISP=SHR
//SYSIN    DD  DUMMY
//       PEND  \\
//S055   EXEC  ASM,MEM=UJC00MN,LDECK=NO,TEST=
//FINALSAY EXEC  PGM=KEQEFT01, {}
//             PARM='SE ''IT''''S ALL DONE'' USER(CLARKE)'
//SYSTSPRT DD  DUMMY
//SYSTSIN  DD  DUMMY
//LINK   EXEC  PACK,DS='CLARKE.A.LINKLIST'
//LIST   EXEC  PACK,DS='CLARKE.AS.LIST'
//OBJ    EXEC  PACK,DS='CLARKE.JOL40.OBJ'
//
//S049   EXEC  ASM,MEM=ALLOCATE,LDECK=G00,TEST=
//S050   EXEC  ASM,MEM=UJG26ENQ,LDECK=NO,TEST=
//S051   EXEC  ASM,MEM=UJP27PNL,LDECK=UJP27PNL,TEST=
//S051   EXEC  ASM,MEM=UJP28SCR,LDECK=NO,TEST=
//S053   EXEC  ASM,MEM=UJP52CHR,LDECK=P00,TEST=
//S054   EXEC  ASM,MEM=UJC02PGM,LDECK=NO,TEST=
//S056   EXEC  ASM,MEM=UJI00MN,LDECK=NO,TEST=
//S057   EXEC  ASM,MEM=UJG00MN,LDECK=NO,TEST=
//S058   EXEC  ASM,MEM=UJG01JOB,LDECK=G01JOB,TEST=
//S059   EXEC  ASM,MEM=UJP28SCR,LDECK=NO,TEST=
//S060   EXEC  ASM,MEM=UJP56CAL,LDECK=NO,TEST=
//S061   EXEC  ASM,MEM=UJV00MN,LDECK=V00,TEST=
//S062   EXEC  ASM,MEM=PREPROC,LDECK=NO,TEST=
//S064   EXEC  ASM,MEM=UJO39GDG LDECK=V00
//S065   EXEC  ASM,MEM=PREPROC,LDECK=P00,TEST=
