* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1971,1972,1973,1974            00000100
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-E001.           00000200
           SPACE 3                                                      00000300
*                   J             000000            L                   00000400
*                   J            0      0           L                   00000500
*                   J           0        0          L                   00000600
*                   J          0          0         L                   00000700
*                   J         0            0        L                   00000800
*                   J         0            0        L                   00000900
*                   J         0            0        L                   00001000
*                   J         0            0        L                   00001100
*                   J         0            0        L                   00001200
*                   J         0            0        L                   00001300
*                   J         0            0        L                   00001400
*        J          J         0            0        L                   00001500
*         J        J           0          0         L                   00001600
*          J      J             0        0          L                   00001700
*           J    J               0      0           L                   00001800
*            JJJJ                 000000            LLLLLLLLLLL         00001900
           SPACE 3                                                      00002000
           SPACE 3                                                      00002100
           MACRO                                                        00002200
           EYEBALL &A                                                   00002300
           DS  0D                                                       00002400
           DC  8CL4'&A'                                           75311 00002500
           DS  0D                                                       00002600
           MEND                                                         00002700
           SPACE 3                                                      00002800
         MACRO                                                          00002900
 IEFJFCBN                                                               00003000
*********************************************************************** 00003100
*                                                                       00003200
*                  JFCB                                                 00003300
*                                                                       00003400
*********************************************************************** 00003500
INFMJFCB EQU   *                                                        00003600
JFCBDSNM DS    CL44                         DATA SET NAME               00003700
JFCBELNM DS    CL8                          ELEMENT NAME OR VERSION     00003800
JFCBTSDM DS    CL1                          TASK SCHEDULER - DATA       00003900
*                                           MANAGEMENT INTERFACE BYTE   00004000
JFCBSYSC DS    CL13                         SYSTEM CODE                 00004100
JFCBLTYP DS    CL1                          LABEL TYPE AND USER'S-LABEL 00004200
*                                           INDICATOR                   00004300
         DS    CL1                          NOT USED                    00004400
JFCBFLSQ DS    CL2                          FILE SEQUENCE NUMBER        00004500
JFCBVLSQ DS    CL2                          VOLUME SEQUENCE NUMBER      00004600
JFCBMASK DS    CL8                          DATA MANAGEMENT MASK        00004700
JFCBCRDT DS    CL3                          DATA SET CREATION DATE      00004800
JFCBXPDT DS    CL3                          DATA SET EXPIRATION DATE    00004900
JFCBIND1 DS    CL1                          INDICATOR BYTE 1            00005000
JFCBRLSE EQU   64                            BITS 0 AND 1 - EXTERNAL    00005100
*                                            STORAGE RELEASE INDICATOR  00005200
JFCBLOCT EQU   16                            BITS 2 AND 3 - DATA SET    00005300
*                                            HAS BEEN LOCATED           00005400
JFCBNEWV EQU   4                             BITS 4 AND 5 - NEW VOLUME  00005500
*                                            ADDED TO DATA SET          00005600
JFCBPMEM EQU   1                             BITS 6 AND 7 - DATA SET IS 00005700
*                                            A MEMBER OF A PODS OR GDG  00005800
JFCBIND2 DS    CL1                          INDICATOR BYTE 2            00005900
JFCBSTAT EQU   64                            BITS 0 AND 1 - DATA SET    00006000
*                                            STATUS (NEW, OLD, OR MOD)  00006100
JFCBSCTY EQU   16                            BITS 2 AND 3 - DATA SET    00006200
*                                            SECURITY INDICATOR         00006300
JFCBUFNO DS    0AL1                                                     00006400
JFCBUFRQ DS    AL1                                                      00006500
JFCBFTEK DS    0BL1                                                     00006600
JFCBFALN DS    BL1                                                      00006700
JFCBUFL  DS    AL2                                                      00006800
JFCEROPT DS    BL1                                                      00006900
JFCTRTCH DS    0BL1                                                     00007000
JFCKEYLE DS    0AL1                                                     00007100
JFCMODE  DS    0BL1                                                     00007200
JFCCODE  DS    0BL1                                                     00007300
JFCSTACK  DS   0BL1                                                     00007400
JFCPRTSP DS    BL1                                                      00007500
JFCDEN   DS    BL1                                                      00007600
JFCLIMCT DS    AL3                                                      00007700
JFCDSORG DS    BL2                                                      00007800
JFCRECFM DS    BL1                                                      00007900
JFCOPTCD DS    BL1                                                      00008000
JFCBLKSI DS    AL2                                                      00008100
JFCLRECL DS    AL2                                                      00008200
JFCNCP   DS    AL1                                                      00008300
JFCNTM   DS    AL1                                                      00008400
JFCRKP   DS    AL2                                                      00008500
JFCCYLOF DS    AL1                                                      00008600
JFCDBUFN DS    AL1                                                      00008700
JFCINTVL DS    AL1                                                      00008800
JFCCPRI  DS    BL1                                                      00008900
JFCSOWA  DS    AL2                                                      00009000
JFCBNTCS DS    CL1                          NUMBER OF OVERFLOW TRACKS   00009100
JFCBNVOL DS    CL1                          NUMBER OF VOLUME SERIAL     00009200
*                                           NUMBERS                     00009300
JFCBVOLS DS    CL30                         VOLUME SERIAL NUMBERS (THE  00009400
*                                           FIRST FIVE)                 00009500
JFCBEXTL DS    CL1                          LENGTH OF BLOCK OF EXTRA    00009600
*                                           VOLUME SERIAL NUMBERS       00009700
*                                           (BEYOND FIVE)               00009800
JFCBEXAD DS    CL3                          TRACK ADDRESS OF BLOCK OF   00009900
*                                           EXTRA VOLUME SERIAL NUMBERS 00010000
JFCBPQTY DS    CL3                          PRIMARY QUANTITY OF D.A.    00010100
*                                           STORAGE REQUIRED            00010200
JFCBCTRI DS    CL1                          INDICATES WHETHER CYLINDERS 00010300
*                                           TRACKS, OR RECORDS ARE      00010400
*                                           SPECIFIED IN JFCBPQTY AND   00010500
*                                           JFCBSQTY                    00010600
JFCBSQTY DS    CL3                          SECONDARY QUANTITY OF D.A.  00010700
*                                           STORAGE REQUIRED            00010800
JFCBIND3 DS    CL1                          INDICATOR BYTE 3            00010900
JFCBCNTG EQU   64                            BITS 0 AND 1 - CONTIGUOUS  00011000
*                                            STORAGE INDICATOR          00011100
JFCBMXIG EQU   16                           BITS 2 AND 3 - MAXIMUM      00011200
*                                            AVAILABLE EXTENT INDICATOR 00011300
JFCBALXI EQU   4                             BITS 4 AND 5 - ALL EXTENTS 00011400
*                                            INDICATOR                  00011500
JFCBRNDC EQU   1                             BITS 6 AND 7 - ROUND       00011600
*                                            CYLINDER INDICATOR         00011700
JFCBDQTY DS    CL3                          QUANTITY OF D.A. STORAGE    00011800
*                                           REQUIRED FOR A DIRECTORY    00011900
JFCBSPNM DS    CL3                          CORE ADDRESS OF THE JFCB    00012000
*                                           WITH WHICH CYLINDERS ARE    00012100
*                                           SPLIT                       00012200
JFCBABST DS    CL2                          RELATIVE ADDRESS OF FIRST   00012300
*                                           TRACK TO BE ALLOCATED       00012400
JFCBSBNM DS    CL3                          CORE ADDRESS OF THE JFCB    00012500
*                                           FROM WHICH SPACE IS TO BE   00012600
*                                           SUBALLOCATED                00012700
JFCBDRLH DS    CL3                          AVERAGE DATA RECORD LENGTH  00012800
JFCBVLCT DS    CL1                          VOLUME COUNT                00012900
JFCBSPTN DS    CL1                          NUMBER OF TRACKS PER        00013000
*                                           CYLINDER TO BE USED BY THIS 00013100
*                                           DATA SET WHEN SPLIT         00013200
*                                           CYLINDERS IS INDICATED      00013300
JFCBLGTH EQU 176                       LENGTH OF JFCB                   00013400
JFCBEND  EQU   *                                                        00013500
         MEND                                                           00013600
           SPACE 3                                                      00013700
           MACRO                                                        00013800
&NAME      JOLERR &STMT=STMT                                            00013900
.* THIS MACRO WILL PUT INTO A LOCATION A STRING OF CHARACTERS           00014000
.* THE STRING MAY BE IN A BUFFER OR JOL MAY ITSELF CONTROL              00014100
.*   THE WHERE-ABOUTS OF THE ERROR MESSAGE.                             00014200
.*                                                                      00014300
.* SYSLIST(1) IS TAKEN TO BE THE ERROR SEVERITY AND ALSO THE            00014400
.*   ERROR NUMBER.                                                      00014500
           LCLA &LITPOSN,&LITLEN                                        00014600
           LCLC &CSECT,&ERRNO                                           00014700
           LCLC &JOLERR,&CHAR1                                          00014800
           LCLA &LENGTH,&THIS,&NOVAR,&POSN,&L,&K,&STMTLEN               00014900
&STMTLEN   SETA 4                                                       00015000
&CSECT     SETC '&SYSECT'(3,3)                                          00015100
&ERRNO     SETC '&SYSLIST(1)'(2,2)                                      00015200
&CHAR1     SETC '&SYSLIST(1)'(1,1)                                      00015300
           AIF ('&STMT' EQ 'STMT').ORDSTMT                              00015400
           MVC S23STMT,&STMT MOVE NON-STANDARD STATEMENT NUMBER IN      00015500
.ORDSTMT   ANOP                                                         00015600
&NAME      BAL 14,UJS23EP&CHAR1 LINK TO APPROPRIATE ERROR POINT         00015700
&JOLERR    SETC '&CSECT-&ERRNO'                                         00015800
ER&CSECT&ERRNO MVC 0(7,1),=CL7'&JOLERR' ERROR CODE IN CROSS-REF LIST    00015900
&THIS      SETA  2                                                      00016000
.LUP4      ANOP                                                         00016100
           AIF (&THIS GT N'&SYSLIST).END                                00016200
           AIF ('&SYSLIST(&THIS)'(1,1) EQ '#').VAR2                     00016300
           AIF ('&SYSLIST(&THIS)'(1,1) EQ '''').LIT2                    00016400
.* HERE IT SHOULD BE A CHAR VARIABLE                                    00016500
&L         SETA L'&SYSLIST(&THIS)                                       00016600
           MVC 0(&L,1),&SYSLIST(&THIS)         FIXED CHAR STRING        00016700
           AGO .ADD3                                                    00016800
.LIT2      ANOP                                                         00016900
.* NOW LOOK FOR DOUBLE QUOTES IN STRING TO CALCULATE THE CORRECT        00017000
.*   LENGTH                                                             00017100
&LITPOSN   SETA 2                              START AFTER 1ST QOTE     00017200
&LITLEN    SETA K'&SYSLIST(&THIS)                                       00017300
&LITLEN    SETA &LITLEN-2                                               00017400
.TQUOTE2   AIF ('&SYSLIST(&THIS)'(&LITPOSN,2) NE '''''').NOTDBL2        00017500
&LITPOSN   SETA &LITPOSN+1                                              00017600
&LITLEN    SETA &LITLEN-1                                               00017700
.NOTDBL2   ANOP                                                         00017800
&LITPOSN   SETA &LITPOSN+1                                              00017900
           AIF (&LITPOSN LT K'&SYSLIST(&THIS)).TQUOTE2                  00018000
&K         SETA &LITLEN                                                 00018100
           MVC 0(&K,1),=C&SYSLIST(&THIS)       MOVE LITERAL STRING      00018200
&POSN      SETA  &POSN+&K                                               00018300
           AGO .ADD3                                                    00018400
.VAR2      ANOP                                                         00018500
           LA 15,&SYSLIST(&THIS)           LOAD ADDRESS VARYING STRING  00018600
.ADD3      ANOP                                                         00018700
&THIS      SETA &THIS+1                                                 00018800
           AGO .LUP4                                                    00018900
.END       DC  H'0'                            END LIST                 00019000
           MEND                                                         00019100
           SPACE 3                                                      00019200
           MACRO                                                        00019300
&NAME      JOLRETN &RC=0                                                00019400
&NAME      L   R13,4(R13)      RESET SAVE ADDRESS                       00019500
           AIF ('&SYSLIST(1)' EQ '').R1412                              00019600
           RETURN &SYSLIST(1),T,RC=&RC                                  00019700
           MEXIT                                                        00019800
.R1412     RETURN (14,12),T,RC=&RC                                      00019900
           MEND                                                         00020000
           SPACE 3                                                      00020100
           MACRO                                                        00020200
&NAME      JOLSAVE &AREA=,&CSECT=,&BASE=11                              00020300
           GBLA &REGEQU                                                 00020400
.* SEE IF EQUATES SET UP FOR THIS RUN YET OR NOT                        00020500
           AIF (&REGEQU NE 0).NOEQU                                     00020600
&CSECT     START 0                                                      00020700
R0         EQU 0                                                        00020800
R1         EQU 1                                                        00020900
R2         EQU 2                                                        00021000
R3         EQU 3                                                        00021100
R4         EQU 4                                                        00021200
R5         EQU 5                                                        00021300
R6         EQU 6                                                        00021400
R7         EQU 7                                                        00021500
R8         EQU 8                                                        00021600
R9         EQU 9                                                        00021700
R10        EQU 10                                                       00021800
R11        EQU 11                                                       00021900
R12        EQU 12                                                       00022000
R13        EQU 13                                                       00022100
R14        EQU 14                                                       00022200
R15        EQU 15                                                       00022300
&REGEQU    SETA 1                                                       00022400
           AGO .NOCSECT                                                 00022500
.NOEQU     ANOP                                                         00022600
           AIF ('&CSECT' EQ '').NOCSECT                                 00022700
           LTORG                                                        00022800
&CSECT     CSECT                                                        00022900
.NOCSECT   ANOP                                                         00023000
&NAME      SAVE (14,12),,*                                              00023100
           AIF (N'&BASE EQ 1).ONEBASE                                   00023200
           USING  &CSECT,&BASE(1),&BASE(2)                              00023300
           LR  &BASE(1),15                                              00023400
           LA  &BASE(2),2048(15)                                        00023500
           LA  &BASE(2),2048(&BASE(2))                                  00023600
           AGO .HOUSE                                                   00023700
.ONEBASE   ANOP                                                         00023800
           USING  &CSECT,&BASE                                          00023900
           LR  &BASE,15                                                 00024000
.HOUSE     AIF ('&AREA' EQ '').GENAREA                                  00024100
           MNOTE 12,'AREA NOW UNSUPPORTED'                              00024200
           AGO .HOUSE2                                                  00024300
.GENAREA   CNOP 0,4                                                     00024400
           BAL 15,*+76         BRANCH AROUND SAVE AREA                  00024500
           DC  18F'0'                                                   00024600
.HOUSE2    ST  15,8(,13)                                                00024700
           ST  13,4(,15)                                                00024800
           LR  13,15                                                    00024900
           MEND                                                         00025000
           SPACE 3                                                      00025100
JSHD   TITLE 'JOL TRANSIENT SCHEDULER AND INSTRUCTION HANDLER'          00025200
           SPACE 3                                                      00025300
* THESE NEXT TWO MACROS ARE USED FOR READING AND WRITING JOBQ.          00025400
*    IF THE SYSTEM IS VS,THE VS JOBQ ROUTINES ARE CALLED,OTHERWISE      00025500
*    A STRAIGHT READ OR WRITE OPERATION IS PERFORMED.                   00025600
           MACRO                                                        00025700
&NAME      GETJOBQ &DECB,&TTR                                           00025800
&NAME      LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS                 00025900
           L   R1,&TTR         LOAD ADDRESS OF AREA WITH TTR FOR POINT  00026000
           BAL R14,GETJOBQ     BRANCH AND LINK TO POINT,READ,CHECK RTN  00026100
           MEND                                                         00026200
           SPACE                                                        00026300
           MACRO                                                        00026400
&NAME      PUTJOBQ &DECB,&TTR                                           00026500
           LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS                 00026600
           AIF ('&TTR' EQ '').NOTTR                                     00026700
           L   R1,&TTR         LOAD R1 WITH TTR REQUIRED                00026800
           AGO .BAL                                                     00026900
.NOTTR     SR  R1,R1           NO TTR,CLEAR REGISTER 1                  00027000
.BAL       BAL R14,PUTJOBQ     BRANCH AND LINK TO POINT,WRITE CHECK RTN 00027100
           MEND                                                         00027200
         MACRO                                                          00027300
&NAME    SETLR &A,&B                                                    00027400
         L     R1,&A.(R10)     LOAD OFFSET                              00027500
         LA    R1,0(R1)       DROP HIGH ORDER BYTE                      00027600
         L     R14,16         CVT POINTER                               00027700
         L     R6,164(R14)    HIGHEST ADDRESS                           00027800
         LA    R6,0(R6)                                                 00027900
         CR    R1,R6                                                    00028000
         BNL   L&SYSNDX                                                 00028100
         ST    R1,&B+8        STORE START ADDRESS                       00028200
         L     R15,=A(&B.WKSP)                                          00028300
         MVC 0(256,R15),0(R1)      SHIFT TO WORK AREA                   00028400
         MVC 256(256,R15),256(R1)                                       00028500
         ST    R15,&B+16                                                00028600
         LA    R15,512(R15)                                             00028700
         ST    R15,&B+20                                                00028800
         LA    R1,512(R1)     SET STOP ADDRESS                          00028900
         ST    R1,&B+12       STORE IN LIST                             00029000
L&SYSNDX  EQU  *                                                        00029100
         MEND                                                           00029200
     TITLE 'TESTJOBQ :- SNAP REGS ON ENTRY :- READ/WRITE SYSTEM JOBQ'   00029300
           PRINT DATA                                             75311 00029400
           SPACE                                                        00029500
           JOLSAVE CSECT=UJE01TS,BASE=12                                00029600
           L  R3,=A(PARMAREA)                                           00029700
           USING PARMAREA,R3                                            00029800
           USING  TABLES,R5                                             00029900
           L  R5,=A(TABLES)                                             00030000
*HAVING SAVED THE REGISTERS, WE NOW WANT TO LIST 500 BYTES ONWARDS      00030100
* FROM THEIR CONTENTS ON ENTRY.                                         00030200
         OPEN  (SNAP,(OUTPUT))                                          00030300
         SNAP  DCB=SNAP,ID=10,PDATA=(ALL),SDATA=(SWA)                   00030400
*NOW FORM UP LIST FROM OLD REGISTERS                                    00030500
         L     R10,4(R13)     LOAD ADDRESS OF OLD SAVE AREA             00030600
         SETLR 20,REG0                                                  00030700
         SETLR 24,REG1                                                  00030800
         SETLR 28,REG2                                                  00030900
         SETLR 32,REG3                                                  00031000
         SETLR 34,REG4                                                  00031100
         SETLR 40,REG5                                                  00031200
         SETLR 44,REG6                                                  00031300
         SETLR 48,REG7                                                  00031400
         SETLR 52,REG8                                                  00031500
         SETLR 56,REG9                                                  00031600
         SETLR 60,REGA                                                  00031700
         SETLR 64,REGB                                                  00031800
         SETLR 68,REGC                                                  00031900
         MVI   REGC+16,X'80'   STOP LIST                                00032000
         SNAP  DCB=SNAP,ID=20,LIST=REG                                  00032100
         SPACE 3                                                        00032200
* ADDRESS FROM R4 IS IMPORTANT COS STANDARD ASSURE ME THAT IT POINTS    00032300
* TO THE ALL IMPORTANT LCT                                              00032400
         SPACE 3                                                        00032500
E00VSSTR   EQU  *                                                 74365 00032600
         CALL UJE98INI         INITIALISE ROUTINES                      00032700
E00FINDS  EQU *                                                         00032800
           MVI SCTASCT+3,0     ***** SET Z=0 (OK,ONLY READ)             00032900
           CLC SCTASCT,=A(0)   LAST STEP IN JOB ? (THE NEXT ONE*****)   00033000
            BNE E00PNT         NOT EOF ON JOBQ                          00033100
         B     ENDSCT                                                   00033200
           SPACE 3                                                      00033300
E00PNT     EQU *                                                        00033400
           GETJOBQ SCTDECB,SCTASCT READ THE SCT,AFTER POINTING          00033500
         SNAP  DCB=SNAP,ID=60,STORAGE=(SCT-32,SCT+256)                  00033600
           PUTJOBQ SCTDECB                                              00033700
           B E00FINDS                                                   00033800
           SPACE 3                                                      00033900
ENDSCT   SNAP  DCB=SNAP,ID=10,PDATA=(ALL)                               00034000
         PUTJOBQ   JCTDECB                                              00034100
           JOLRETN RC=0        UJEMON WILL LOOK AT 'VS' TOO.      75311 00034200
*                                                                       00034300
* THE FOLLOWING LOCATIONS ARE USED FOR READING AND WRITING              00034400
*  THE SYSTEM JOBQ                                                      00034500
*                                                                       00034600
* LOCN 1 CONTAINS THE TTR OF THE RECORD WRITTEN                         00034700
* LOCN 2 CONTAINS THE ADDRESS (IN DISPACEMENT FORM) OF THE AREA         00034800
*  TO BE USED AS THE READ/WRITE AREA                                    00034900
*                                                                       00035000
JCTDECB  DC    F'0'                                                     00035100
         LA    R1,JCT         EXECUTED ***                              00035200
         SPACE                                                          00035300
SCTDECB  DC    F'0'                                                     00035400
         LA    R1,SCT                                                   00035500
         SPACE                                                          00035600
PDQDECB2 DC    F'0'                                                     00035700
         LA    R1,PDQ                                                   00035800
         SPACE                                                          00035900
SIOTDECB DC    F'0'                                                     00036000
         LA    R1,SIOT                                                  00036100
         SPACE                                                          00036200
JFCBDECB DC    F'0'                                                     00036300
         LA    R1,INFMJFCB                                              00036400
         SPACE                                                          00036500
PDQDECB  DC    F'0'                                                     00036600
         LA    R1,PDQBLK                                                00036700
           SPACE 3                                                      00036800
* GET/PUT JOBQ ROUTINES CALLED BY GETJOBQ/PUTJOBQ MACROS                00036900
* ON ENTRY R0-> CONTROL AREA CONTAINING TTR SAVE SPACE, AND A(AREA)5128 00037000
*          R1-> TTR REQUIRED                                      74365 00037100
*                                                                       00037200
* A SEPERATELY ASSEMBLED CSECT CALLED UJEJOBQ IS RESPONIBLE             00037300
*  FOR ACTUALLY CALLING THE IBM MODULE 'IEFQMRAW' TO DO THE             00037400
*  JOBQ TRANSFERS                                                       00037500
*                                                                       00037600
*  THE PARAMETERS 'UJEJOBQ' WANTS ARE :-                                00037700
*  R1-> :-                                                              00037800
*     1. A(RECEIVE/WRITE AREA)                                          00037900
*     2. A(TTR POINTER)                                                 00038000
*     3. TRANSFR TYPE 4=READ ETC                                        00038100
*     4. A(IEFQMRAW)               IBM ROUTINE                          00038200
*                                                                       00038300
GETJOBQ    MVI CALLAREA+11,4   READ INDICATOR TO PUT IN IEFQMRAW        00038400
           B   E00JOBQ                                                  00038500
PUTJOBQ  MVI   CALLAREA+11,X'03'  WRITE INDICATOR FOR QM          75128 00038600
         LR  R15,R0        GET CONTROL AREA ADDRESS                     00038700
         L   R1,0(R15)     GET TTR FROM SAVED AREA                      00038800
E00JOBQ  LR    R15,R0         LOAD R15 A(CONTROL BLOCK)           75128 00038900
         ST    R1,0(R15)      STORE TTR REQD IN CONTROL BLOCK     75128 00039000
         ST    R1,CALLAREA+4  AND IN PARM FOR UJEJOBQ             75128 00039100
         EX    R0,4(R15)      EXECUTE LA INSTRUCTION TO FIND      75128 00039200
*                             ADDRESS OF AREA TO READ/WRITE       75128 00039300
         ST    R1,CALLAREA    SET PARM(1)                         75128 00039400
         MVC   CALLAREA+12(4),AQMRAW SHIFT A(IEFQMRAW)            75128 00039500
           B  *+4    ******************************************         00039600
           B  *+4    ******************************************         00039700
           ST  R14,IEFQRETN    SAVE RETURN ADDRESS                      00039800
         LA    R1,CALLAREA    SET R1 UP PROPERLY                  75128 00039900
         L     R15,=V(UJEJOBQ) LOAD JOL'S INTERFACE TO IEFQMRAW   75128 00040000
         BALR  R14,R15         AND BRANCH TO IT                   75128 00040100
         LTR   R2,R15         DID WE MANAGE FUNCTION ?            75128 00040200
           BZ E00RMODE                                                  00040300
           SPACE                                                        00040400
E00RMODE EQU   *                                                  75128 00040500
*        UNSUP      LA R1,X'24' SVC 107                           75128 00040600
         L     R1,CALLAREA+4  RELOAD TTR FOR CALLER IN CASE HE WANT5128 00040700
           L   R14,IEFQRETN    LOAD RETURN ADDRESS                      00040800
           BR  R14             AND GO BACK                              00040900
UJ00ANS    DS 3F                                                        00041000
UJE00DDM    DC CL8'$$PRNT'                                              00041100
JSCBA    DC    A(JSCBHDR,JSCBHDR+128,0,0,0,0)                           00041200
REG      DC    A(REG0,RG0C)                                             00041300
REG0     DC    A(RG0C,RG0C+128,0,0,0,0)                                 00041400
REG1     DC    A(RG1C,RG1C+128,0,0,0,0)                                 00041500
REG2     DC    A(RG2C,RG2C+128,0,0,0,0)                                 00041600
REG3     DC    A(RG3C,RG3C+128,0,0,0,0)                                 00041700
REG4     DC    A(RG4C,RG4C+128,0,0,0,0)                                 00041800
REG5     DC    A(RG5C,RG5C+128,0,0,0,0)                                 00041900
REG6     DC    A(RG6C,RG6C+128,0,0,0,0)                                 00042000
REG7     DC    A(RG7C,RG7C+128,0,0,0,0)                                 00042100
REG8     DC    A(RG8C,RG8C+128,0,0,0,0)                                 00042200
REG9     DC    A(RG9C,RG9C+128,0,0,0,0)                                 00042300
REGA     DC    A(RGAC,RGAC+128,0,0,0,0)                                 00042400
REGB     DC    A(RGBC,RGBC+128,0,0,0,0)                                 00042500
REGC     DC    A(RGCC,RGCC+128,0,0,0,0)                                 00042600
         CNOP 0,8                                                       00042700
RG0C     DC    CL128'                CONTENTS OF 0R% L(256)'            00042800
RG1C     DC    CL128'                CONTENTS OF 1R% L(256)'            00042900
RG2C     DC    CL128'                CONTENTS OF 2R% L(256)'            00043000
RG3C     DC    CL128'                CONTENTS OF 3R% L(256)'            00043100
RG4C     DC    CL128'                CONTENTS OF 4R% L(256)'            00043200
RG5C     DC    CL128'                CONTENTS OF 5R% L(256)'            00043300
RG6C     DC    CL128'                CONTENTS OF 6R% L(256)'            00043400
RG7C     DC    CL128'                CONTENTS OF 7R% L(256)'            00043500
RG8C     DC    CL128'                CONTENTS OF 8R% L(256)'            00043600
RG9C     DC    CL128'                CONTENTS OF 9R% L(256)'            00043700
RGAC     DC    CL128'                CONTENTS OF 10R% L(256)'           00043800
RGBC     DC    CL128'                CONTENTS OF 11R% L(256)'           00043900
RGCC     DC    CL128'                CONTENTS OF 12R% L(256)'           00044000
JSCBHDR  DC    CL128'                CONTENTS OF JSCB'                  00044100
           PRINT NOGEN                                                  00044200
ATIOT      DS  A                                                        00044300
ATCB       DS  A               ADDRESS OF TCB                           00044400
AQMRAW   DS    A(0)           IEFQMRAW JOB Q RTN ADDRESS          75128 00044500
           SPACE 3                                                      00044600
           PRINT GEN                                                    00044700
           SPACE 3                                                      00044800
           DC S(*),S(*),S(*),S(*)                                       00044900
           DC S(*),S(*),S(*),S(*)                                       00045000
           DC S(*),S(*),S(*),S(*)                                       00045100
           DC S(*),S(*),S(*),S(*)                                       00045200
           DC S(*),S(*),S(*),S(*)                                       00045300
           DC S(*),S(*),S(*),S(*)                                       00045400
           DC S(*),S(*),S(*),S(*)                                       00045500
           DC S(*),S(*),S(*),S(*)                                       00045600
           DC S(*),S(*),S(*),S(*)                                       00045700
           DC S(*),S(*),S(*),S(*)                                       00045800
           DC S(*),S(*),S(*),S(*)                                       00045900
           DC S(*),S(*),S(*),S(*)                                       00046000
           DC S(*),S(*),S(*),S(*)                                       00046100
           DC S(*),S(*),S(*),S(*)                                       00046200
           DC S(*),S(*),S(*),S(*)                                       00046300
           DC S(*),S(*),S(*),S(*)                                       00046400
           DC S(*),S(*),S(*),S(*)                                       00046500
           DC S(*),S(*),S(*),S(*)                                       00046600
           DC S(*),S(*),S(*),S(*)                                       00046700
           LTORG                                                        00046800
WORKXXX  CSECT                                                          00046900
REG0WKSP DS CL512                                                       00047000
REG1WKSP DS CL512                                                       00047100
REG2WKSP DS CL512                                                       00047200
REG3WKSP DS CL512                                                       00047300
REG4WKSP DS CL512                                                       00047400
REG5WKSP DS CL512                                                       00047500
REG6WKSP DS CL512                                                       00047600
REG7WKSP DS CL512                                                       00047700
REG8WKSP DS CL512                                                       00047800
REG9WKSP DS CL512                                                       00047900
REGAWKSP DS CL512                                                       00048000
REGBWKSP DS CL512                                                       00048100
REGCWKSP DS CL512                                                       00048200
JSWK      DS CL512                                                      00048300
           SPACE 3                                                      00048400
TABLES CSECT                                                            00048500
           LTORG                                                        00048600
           EYEBALL JCT                                                  00048700
           DS  0D                                                       00048800
JCT        DS  CL176                                                    00048900
           ORG JCT+8                                                    00049000
JCTJOBNM   DS  CL8             JOB-NAME                                 00049100
           ORG JCT+24                                                   00049200
JCTAPDQ    DS  A               QUEUE ADDRESS OF THE PDQ                 00049300
JCTAGDG    DS  A               QUEUE ADDRESS OF THE GDG BIAS TABLE      00049400
JCTASCT1   DS  A               QUEUE ADDRESS OF THE FIRST SCT           00049500
JCTASMB1   DS  A               QUEUE ADDRESS OF THE FIRST SMB           00049600
JCTAPCT    DS  A               QUEUE ADDRESS OF THE JOB ACCT            00049700
JCTASCD1   DS  A               QUEUE ADDRESS OF THE FIRST SCD           00049800
JCTADSB    DS  A               QUEUE ADDRESS OF THE LAST DSB            00049900
           ORG JCT+88                                                   00050000
JCTADSN    DS  A               QUEUE ADDRESS OF DSENQ TABLE.            00050100
JCTREGN    DS  AL2                                                      00050200
JCTQID     DS  AL1                                                      00050300
JCTCSTEP   DS 0AL1                                                      00050400
JCT#STPS   DS  AL1             NO OF STEPS                              00050500
           ORG JCT#STPS                                                 00050600
JCTSTEP    DS  AL1                                                      00050700
           ORG JCT+107                                                  00050800
JCT#TRKS   DS  AL1             NUMBER TRKS OF JOBQ USED THIS JOB        00050900
           ORG JCT+112                                                  00051000
JCTCSCT    DS  A               QUEUE ADDRESS OF CURRENT (I.E NOW        00051100
*                              EXECUTING) SCT                           00051200
           DS CL60                                                      00051300
           EYEBALL SCT                                                  00051400
           DS  0D                                                       00051500
SCT        DS  CL176                                                    00051600
           ORG SCT+12                                                   00051700
SCTASIOT   DS  CL3             QUEUE ADDRESS OF NEXT SIOT               00051800
           ORG SCT+20                                                   00051900
SCTASCT    DS  AL3             TTR OF NEXT SCT                          00052000
           ORG SCT+36                                                   00052100
SCTAVOLT   DS  AL3             TTR OF VOLT                              00052200
           ORG SCT+44                                                   00052300
SCTPROC    DS CL8                                                       00052400
SCTSTEP    DS CL8                                                       00052500
           ORG SCT+64                                                   00052600
SCT#SIOT   DS  AL1             NO OF SIOTS IN THIS STEP                 00052700
           ORG SCT+108                                                  00052800
SCTPROG    DS CL8              PROGRAM NAME                             00052900
           ORG SCT+121                                                  00053000
SCTCOND1   DS  AL2             COND 1                                   00053100
SCTOP1     DS  AL1             OPERATOR 1                               00053200
SCTACON1   DS  AL3             ADDRESS OF SCT REFERRED TO BY COND       00053300
           ORG SCT+160                                                  00053400
SCTCOND8   DS  AL2             ABEND (OR EIGHTH) COND CODE              00053500
SCTOP8     DS  AL1                                                      00053600
SCTACON8   DS  AL3                                                      00053700
           EYEBALL SIOT                                                 00053800
SIOT       DS  CL176                                                    00053900
           ORG SIOT+4                                                   00054000
SIOTDDNM   DS  CL8             DDNAME IN SIOT                           00054100
           ORG SIOT+28                                                  00054200
SIOTASIO   DS  A               ADDRESS OF NEXT SIOT                     00054300
SIOTAJFC   DS  A               ADDRESS OF CORRESPONDING JFCB TO THIS    00054400
*                              SIOT                                     00054500
           ORG SIOT+49                                                  00054600
SIOT#VOT   DS  AL1             NUMBER OF VOLS IN THIS STEPS VOLT        00054700
SIOTRELV   DS  AL2             RELATIVE POINTER TO VOL TBL ENTRY        00054800
SIOTDDNO   DS  AL1             INTERNAL DD NUMBER                       00054900
SIOT#UNI   DS  AL1             #OF UNITS FOR THIS DATA SET              00055000
SIOT#VOL   DS  AL1             #OF VOLS                                 00055100
SIOTDISP   DS  AL1             BIT 0-RESERVED                           00055200
*                              BIT 1 RETAIN VOLUME                      00055300
*                              BIT 2 PRIVATE VOLUME                     00055400
*                              BIT 3 PASS DATA SET                      00055500
*                              BIT 4 KEEP DATA SET                      00055600
*                              BIT 5 DELETE DATA SET                    00055700
*                              BIT 6 CATALOG DATA SET                   00055800
*                              BIT 7 UNCATLG DATA SET                   00055900
           ORG SIOT+58                                                  00056000
SIOTIND3   DS  AL1                                                      00056100
*                              BIT 0 VREF TO DSNAME                     00056200
*                              BIT 3 VREF IN STEP                       00056300
*                              BIT 4 SYSOUT SPECIFIED                   00056400
*                              BIT 5 NEW DATA SET                       00056500
*                              BIT 6 MOD DATA SET                       00056600
*                              BIT 7 OLD OR SHR DATA SET                00056700
           ORG SIOT+59                                                  00056800
SIOTIND4   DS  AL1                                                      00056900
*                              BIT 2 NO PDQ PROCESSING                  00057000
*                              BIT 6 DSN IS IN PDQ                      00057100
*                              BIT 7 OLD OR MOD DATA SET =0             00057200
*                              BIT 7 NEW DATA SET = 1                   00057300
           ORG SIOT+60                                                  00057400
SIOTUNIT   DS CL8                                                       00057500
           ORG SIOT+84                                                  00057600
SIOTADSB   DS  AL3,CL1         QUEUE ADDRESS OF DSB IF SYSOUT SPECIFIED 00057700
SIOTNDSB   DS  AL4             QUEUE ADDRESS OF NEXT DSB                00057800
           ORG SIOT+92                                                  00057900
SIOTCDSP   DS  AL1             CONDITIONAL DISPOSITIONS                 00058000
*                              BIT 3 DD IS NOT PRIVATE                  00058100
*                              BIT 4 KEEP                               00058200
*                              BIT 5 DELETE                             00058300
*                              BIT 6 CATLG                              00058400
*                              BIT 7 UNCATLG                            00058500
SIOTLPDQ   DS  AL3             ADDRESS OF LAST SIOT TO PASS DATA SET    00058600
           ORG                                                          00058700
           EYEBALL PDQ                                                  00058800
           DS  0D                                                       00058900
PDQ        DS CL176                                                     00059000
           ORG PDQ                                                      00059100
PDQDSN1    DS  CL44            DSNAME 1 IN PASSED DATA SET QUEUE        00059200
PDQDSN2    DS  CL44            DSNAME 2 IN PASSED DATA SET QUEUE        00059300
PDQDSN3    DS  CL44            DSNAME 3 IN PASSED DATA SET QUEUE        00059400
PDQENTRY   DS  CL1             NUMBER OF ENTRIES IN THIS PDQ            00059500
PDQRESD    DS  CL35            JUNK OR SOMETHING                        00059600
PDQABLK    DS  CL3,CL1         ADDRESS OF ASSOCIATED PDQ BLOCK          00059700
PDQNPDQ    DS  CL3,CL1         ADDRESS OF NEXT PDQ DIRECTORY            00059800
           ORG                                                          00059900
           EYEBALL PDQBLOCK                                             00060000
           DS  0D                                                       00060100
PDQBLK     DS   CL176          PASSED DATA SET QUEUE BLOCK              00060200
           ORG PDQBLK                                                   00060300
PDQCSTEP   DS  CL1             CURRENT STEP NUMBER (OR LAST USE         00060400
*                              OF THIS DATA SET)                        00060500
PDQDDNO    DS  CL1             CURRENT DD NUMBER                        00060600
PDQTERM    DS  CL1             PDQ TERMINATION WORK AREA                00060700
*    IF PDQTERM=B'0010' DD-CARD SAID NEW,PASS                           00060800
*    IF PDQTERM=B'0100' DD-CARD SAID OLD,KEEP (IE NOT PASSED NOW)       00060900
*    IF PDQTERM=B'1110' DD-CARD SAID OLD,PASS (OLD,CURRENT STATUS=OLD)  00061000
*    IF PDQTERM=B'1010' DD-CARD SAID OLD,DELETE (OLD,NOT PASSED)        00061100
* IT APPEARS THAT ONCE THE CURRENT STATUS BIT IS 0,ANY REFERENCE        00061200
*    TO THE DATA SET NAME IS IGNORED (I.E AS THOUGH NEVER ON PDQ).      00061300
*                                                                       00061400
*                                                                       00061500
PDQ#UCB    DS  CL1             NUMBER OF UCB'S                          00061600
PDQAJFCB   DS  CL3,CL1         QUEUE ADDRESS OF THIS JFCB               00061700
PDQASIOT   DS  CL3             QUEUE ADDRESS OF THIS SIOT               00061800
PDQSSTEP   DS  CL1             CURRENT STEP NUMBER (WHICH APPEARS       00061900
*                              TO BE ALWAYS THE SAME AS PDQCSTEP ABOVE) 00062000
PDQUCBS    DS  CL40                                                     00062100
PDQUACBO   DS  CL3,CL1         ADDRESS OF PDQ OVERFLOW BLOCK            00062200
PDQBLKLN   EQU *-PDQBLK                                                 00062300
* THE ABOVE FIELDS ARE REPEATED TWICE (IE 3 DATA SET DETAILS ALLOWED)   00062400
           ORG                                                          00062500
           SPACE 3                                                      00062600
           EYEBALL JFCB                                                 00062700
           IEFJFCBN                                                     00062800
QMPA       DS  0D              USED FOR VS CURRENTLY                    00062900
QMPAJOB    DS  CL8             JOB NAME OR NO-WORK-CHAIN ELEMENT        00063000
QMPAFUNC   DS  CL1             FUNCTION CODE                            00063100
QMPAFLTR   DS  CL2             NN OF 1ST LOGL TRACK ASSIGNED TO ENTRY   00063200
QMPANOTR   DS  CL1             NUMBER OF RECORDS ASSIGNED IN THIS TRACK 00063300
QMPANXTL   DS  CL2             NN OF NEXT LOGICAL TRACK                 00063400
QMPANOLT   DS  CL1             NUMBER OF LOGICAL TRACKS ASSIGNED        00063500
QMPAJBCD   DS  CL1             JOB TYPE CODE                            00063600
QMPAJBST   DS  CL1             JOB STATUS CODE                          00063700
QMPAPRTY   DS  CL1             JOB PRIORITY                             00063800
QMPANXTQ   DS  CL2             NN OF NEXT QUEUE ENTRY                   00063900
QMPAQID    DS  CL2             QUEUE ENTRY IDENTIFICATION               00064000
QMPAORCL   DS  CL1             ORIGIN CLASS ID                          00064100
QMPARES1   DS  CL1             RESERVED                                 00064200
QMPATRKS   DS  A               ADDRESS TRACK STACKING PARM LIST         00064300
QMPAIND    DS  CL1                                                      00064400
           ORG QMPAIND                                                  00064500
QMPAAECB   DS  A               ADDRESS OF USERS ECB/IOB                 00064600
QMPANORC   DS  CL1             1ST 4 BITS=NO OF RECORDS TO ASSIGN       00064700
*                              2ND 4 BITS=NO OF RECORDS TO READ/WRITE   00064800
QMPAAEXT   DS  AL3             ADDRESS OF EXTERNAL PARAMETER AREA       00064900
IEFQATCB   DS  A               ADDRESS OF TCB                           00065000
IEFQAREC   DS  A               ADDRESS OF RECORD BUFFER                 00065100
IEFQAQMP   DC  A(QMPA)         ADDRESS OF QMPA                          00065200
IEFQTTR    DS  A               TTR OF REQUESTED RECORD                  00065300
IEFQRCLN   DC AL2(176)                                                  00065400
IEFQFUNC   DC AL2(0)                                                    00065500
IEFQDECB   DS  A               WORK AREA(NOT REQUIRED BY IEFQMMAC)      00065600
IEFQRETN   DS  A               RETURN ADDRESS                           00065700
           DS 0D                                                        00065800
PARMAREA    CSECT                                                       00065900
TASKLABL   DC  CL8' '          STEP-NAME (I.E LABEL IN JOL TERMINOLOGY) 00066000
TASKNAME   DC  CL8' '          NAME OF PROGRAM BEING EXECUTED AS A      00066100
*                              SUBTASK                                  00066200
APARM      DS A                                                         00066300
ATASKPRM   DS  A               ADDRESS OF GOTTEN STORAGE FOR PARAMETERS 00066400
TASKSSI    DC  CL4' '          SSI OF THE SUB-TASK                      00066500
TASKRETN   DC  F'0'            RETURN CODE FROM TASK                    00066600
TASKECB    DC  F'0'            EVENT CONTROL BLOCK FOR TASK             00066700
TASKIND    DC  C' '            SET TO 1 AFTER SCHEDULER CALLED          00066800
*                              THE FIRST TIME.                          00066900
GOBACK     DC  C' '            NOT BLANK MEANS RETURN TO OS NOW         00067000
*                                                           ***         00067100
INSTREOF   DC  C' '            SET TO 1 ON EOF WHEN READING             00067200
*                              INSTRUCTIONS.                            00067300
VS         DC  CL1' '          ^='' IF VS SYSTEM                  75311 00067400
DBL        DS  D               WORK AREA ONLY                           00067500
CALLAREA   DS  10F             WORK AREA ONLY FOR PARAMETERS BASICALLY  00067600
SNAP DCB DDNAME=SNAP,DSORG=PS,RECFM=VBA,MACRF=W,BLKSIZE=882,LRECL=125   00067700
PRINT DCB DDNAME=XYZ,DSORG=PS,RECFM=VBA,MACRF=W,BLKSIZE=882,LRECL=125   00067800
RETN  DCB DDNAME=$$RETN,DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=80,MACRF=W   00067900
INSTRUCT  DCB DDNAME=$$RETN,DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=80,     *00068000
               MACRF=W                                                  00068100
JOBQ DCB DDNAME=$$JOBQ,DSORG=PS,DEVD=DA,MACRF=(RP,WP)                   00068200
               ENTRY SNAP,PRINT,RETN,INSTRUCT,JOBQ                      00068300
IBMRTN     DC  CL8' '                                                   00068400
JCTTTR     DC  A(0)                                                     00068500
           TITLE 'UJE98INI:INITIALISATION ROUTINES'                     00068600
           JOLSAVE CSECT=UJE98INI                                       00068700
* BETTER SET UP THE JOBNAME ETC                                         00068800
           LA  R4,CALLAREA                                              00068900
           EXTRACT (4),'S',FIELDS=(TIOT)                                00069000
           L   R1,CALLAREA                                              00069100
           ST  R1,ATIOT        SAVE ADDRESS OF TIOT                     00069200
* NOW READ IN JCT AND SCT                                               00069300
*    FIRST WE MUST DO A LITTLE WANDERING AROUND STORAGE TO FIND         00069400
*    THE TTR ADDRESSES WE REQUIRE.                                      00069500
           SPACE                                                        00069600
*    THE CVT POINTS TO THE TCB                                          00069700
*    THE TCB POINTS TO THE JSCB                                         00069800
*    THE JSCB POINTS TO THE TTR OF THE JCT                              00069900
*    AND SO ON                                                          00070000
*                                                                       00070100
CVT    EQU   16                                                         00070200
JSCBOFFS EQU  180                                                       00070300
           L   R15,CVT         CVT POINTER                              00070400
           L   R15,0(R15)      TCB POINTER                              00070500
           L   R15,4(R15)      MY TCB                                   00070600
           ST  R15,ATCB                                                 00070700
           L   R15,JSCBOFFS(R15) ->JSCB                                 00070800
         LR    R14,R15                                                  00070900
         ST    R14,JSCBA+8                                              00071000
         LA    R14,512(R14)                                             00071100
         ST    R14,JSCBA+12                                             00071200
         L     R14,=A(JSWK)                                             00071300
         MVC   0(256,R14),0(R15)                                        00071400
         MVC   256(256,R14),256(R15)                                    00071500
         ST    R14,JSCBA+16                                             00071600
         LA    R14,512(R14)                                             00071700
         ST    R14,JSCBA+20                                             00071800
         MVI   JSCBA+16,X'80'                                           00071900
         SNAP  DCB=SNAP,ID=80,LIST=JSCBA                                00072000
           CALL UJE70OPN,(AQMRAW,IBMRTN,INSTRUCT,PRINT,RETN,JOBQ,      *00072100
               JCTTTR,VS,ATCB)                                          00072200
           SPACE 1                                                      00072300
E98NOVS    EQU  *                                                 74365 00072400
           GETJOBQ JCTDECB,JCTTTR                                       00072500
         SNAP  DCB=SNAP,ID=40,STORAGE=(JCT-32,JCT+256)                  00072600
           MVC CALLAREA(3),JCTCSCT  POINT TO CURRENT SCT                00072700
E80RDSCT   MVI CALLAREA+3,0                                             00072800
           GETJOBQ SCTDECB,CALLAREA                                     00072900
           ST R1,CALLAREA                                               00073000
           MVC  JCTCSCT(3),CALLAREA                                     00073100
         SNAP  DCB=SNAP,ID=40,STORAGE=(SCT-32,SCT+256)                  00073200
*****************************************************************       00073300
* NOW BECAUSE RUDDY OS DOES NOT UPDATE THE RUDDY JCT CURRENT            00073400
*     SCT POINTER AFTER A STEP HAS BEEN BYPASSED,I MUST                 00073500
*     CHECK THAT THE SCT I'VE JUST READ IN IS THE RIGHT ONE             00073600
*     FOR THIS OS STEP.                                                 00073700
*     IF ITS NOT,I STEP ON TO THE CORRECT ONE.                          00073800
* ALSO THE CURRENT OS STEP COUNTER MUST BE UPDATED COS I USE            00073900
*     IT IN THE SCRATCH ROUTINE                                         00074000
******************************************************************      00074100
* WE'LL USE THE TIOT STEP NUMBER,COS THAT MUST BE RIGHT ?????           00074200
           SPACE                                                        00074300
* NOW CHECK THAT THE STEPS ARE RIGHT                                    00074400
           L R1,ATIOT          GET TIOT ADDTRESS                        00074500
           CLC SCTSTEP,8(R1)   RIGHT STEP ?                             00074600
           BE E98T1ST          TEST IF 1ST TIME IN THIS OS STEP         00074700
* OK THEN,STEP ON TO READ NEXT SCT,AND ADD 1 TO CURRENT                 00074800
*     JCT STEP COUNTER                                                  00074900
           SR R1,R1                                                     00075000
           IC R1,JCTCSTEP                                               00075100
           LA R1,1(R1)                                                  00075200
           STC R1,JCTCSTEP                                              00075300
           MVC CALLAREA(4),SCTASCT  NEXT SCT ADDRESS                    00075400
           B  E80RDSCT                                                  00075500
E98T1ST    EQU  *                                                       00075600
         JOLRETN              RC=0                                      00075700
           SPACE 3                                                      00075800
           SPACE 3                                                      00075900
           DC   S(*),S(*),S(*),S(*)                                     00076000
           DC   S(*),S(*),S(*),S(*)                                     00076100
           DC   S(*),S(*),S(*),S(*)                                     00076200
           DC   S(*),S(*),S(*),S(*)                                     00076300
           DC   S(*),S(*),S(*),S(*)                                     00076400
           DC   S(*),S(*),S(*),S(*)                                     00076500
           DC   S(*),S(*),S(*),S(*)                                     00076600
           DC   S(*),S(*),S(*),S(*)                                     00076700
           DC   S(*),S(*),S(*),S(*)                                     00076800
           DC   S(*),S(*),S(*),S(*)                                     00076900
           DC   S(*),S(*),S(*),S(*)                                     00077000
           DC   S(*),S(*),S(*),S(*)                                     00077100
           DC   S(*),S(*),S(*),S(*)                                     00077200
           DC   S(*),S(*),S(*),S(*)                                     00077300
           DC   S(*),S(*),S(*),S(*)                                     00077400
           DC   S(*),S(*),S(*),S(*)                                     00077500
           DC   S(*),S(*),S(*),S(*)                                     00077600
           DC   S(*),S(*),S(*),S(*)                                     00077700
           DC   S(*),S(*),S(*),S(*)                                     00077800
           DC   S(*),S(*),S(*),S(*)                                     00077900
           LTORG                                                        00078000
         AGO .SKIPX                                                     00078100
           TITLE 'UJS23ER:WTP,WTO ERROR MESSAGES'                       00078200
UJS23ER    CSECT                                                        00078300
           USING *,R15                                                  00078400
           STM R14,R12,12(R13)                                          00078500
           LA  R0,SAVEAREA                                              00078600
           ST  R0,8(R13)                                                00078700
           ST  R13,SAVEAREA+4                                           00078800
           BAL R13,STARTERR                                             00078900
SAVEAREA   DS  18F                                                      00079000
STARTERR   EQU *                                                        00079100
           DROP R15                                                     00079200
           USING SAVEAREA,R13                                           00079300
* R14 IS THE RETURN ADDRESS BUT IT ALSO POINTS TO A LIST OF INSTRUCTION 00079400
*    S WHICH ARE TO BE EXECUTED                                         00079500
* THEY CAN BE :-                                                        00079600
*    MVC   CONSTANT                                                     00079700
*    LA    VARYING STRING                                               00079800
           CLEAR S23MSSG       CLEAR MESSAGE AREA                       00079900
* NEW, END DEC 1974. IF AN ERROR MESSAGE IS BEING ISSUED, THEN OFFSET   00080000
*    THE MESSAGE AND PUT '***' IN IT.                                   00080100
           LA  R1,S23MSSG                                         74365 00080200
           CLI S23SEV,2        TEST SEVERITY LESS THAN 2          74365 00080300
           BL S23START         NO '***'                           74365 00080400
           CLC =C'TYPE ',ICOMMAND IS IT A 'TYPE' COMMAND?         74365 00080500
           BE S23START         YES,SO NO '***' PLEASE             74365 00080600
           MVC 0(3,R1),=C'***' SHIFT IN '***'                     74365 00080700
           LA  R1,4(R1)        SKIP '*** '                        74365 00080800
S23START   MVC 0(3,R1),=C'JOL' SHIFT IN 'JOL'                     74365 00080900
           LA  R1,3(R1)        SKIP OVER IT SO WE WON'T OVER-WRITE IT   00081000
S23LUP1    EQU *                                                        00081100
           CLI 0(R14),X'D2'    MOVE ?                                   00081200
           BE  S23MUV1                                                  00081300
           CLI 0(R14),X'41'    LA ?                                     00081400
           BE  S23LA1                                                   00081500
           B   S23END1         SHOULD BE '00'                           00081600
           SPACE                                                        00081700
S23MUV1    EX  0,0(R14)        EXECUTE THE MOVE                         00081800
           SR  0,0                                                      00081900
           IC  R0,1(R14)       LENGTH MOVED                             00082000
           AR  R1,R0           ADD TO OUTPUT POSN                       00082100
           LA  R1,1(R1)        COS ASSMBLR REMOVED 1                    00082200
           LA  R14,6(R14)      SKIP MVC                                 00082300
           B   S23LUP1                                                  00082400
           SPACE                                                        00082500
S23LA1     EQU *                                                        00082600
           EX  0,0(R14)        EXECUTE THE LA R15,VARYING STRING        00082700
           ST  R14,0(R13)      SAVE REGISTER 14 IN SAVE AREA            00082800
           LH  R14,0(R15)      LOAD LENGTH OF THE STRING                00082900
           LTR  R14,R14        SEE IF STRING LENGTH = 0                 00083000
           BZ  RESET14         NO DATA TO MOVE                          00083100
           BCTR R14,0                                                   00083200
           EX  R14,ERRMUV                                               00083300
           LA  R1,1(R14,R1)    STEP 1 SO NEXT MOVE GOES ONTO RIGHT      00083400
*                              SPOT IN BUFFER                           00083500
RESET14    EQU  *                                                       00083600
           L   R14,0(R13)      RELOAD R14                               00083700
           LA  R14,4(R14)      STEP OVER THE LA                         00083800
           B   S23LUP1                                                  00083900
OOPS       WTO 'JOLE00-99 CANNOT ALLOCATE ERROR AREA'                   00084000
           ABEND 16,DUMP,STEP                                           00084100
ERRMUV     MVC 0(*-*,R1),2(R15) **** EXECUTED                           00084200
           SPACE                                                        00084300
S23END1    EQU *                                                        00084400
           LA  R14,2(R14)      BRANCH AROUND '0' AT END OF LIST         00084500
           L  R15,4(R13)       LOAD OLD SAVE ADDRESS                    00084600
           ST  R14,12(R15)     RESET OLD RETURN ADDRESS                 00084700
           MVC 0(3,R1),=C' AT'  SHIFT IN 'AT'                           00084800
           MVC 4(4,R1),S23STMT                                    75003 00084900
           CLI S23STMT,X'00'                                            00085000
           BNE S23SETL                                                  00085100
           MVC 4(4,R1),STMT                                       75003 00085200
S23SETL    LA  R14,S23MSSG-12 THE -8 IS FOR THE 'AT STMT'         75128 00085300
S23TEST0   CLI 4(R1),C'0'     LEADING ZERO?                      75003  00085400
           BNE S23SR          -> NO                              75003  00085500
           MVC 4(4,R1),5(R1)  DROP ZERO                          75003  00085600
           BCT R1,S23TEST0                                       75003  00085700
S23SR      EQU *                                                 75003  00085800
           SR  R1,R14                                                   00085900
           STH R1,#S23LREC                                              00086000
           LA  R1,4(R1)                                                 00086100
           STH R1,#S23BLKS                                              00086200
           XC S23STMT,S23STMT                                           00086300
* GREAT,NOW WHERE ARE WE GOING TO PUT THIS FANTASTIC PIECE OF           00086400
*    INFORMATION ?                                                      00086500
           TM  PRINT+48,X'10'                                           00086600
           BZ  S23WTO                                                   00086700
           WRITE S23DECB,SF,PRINT,#S23BLKS                              00086800
           CHECK S23DECB                                                00086900
S23WTO     EQU *                                                        00087000
* NOW IF THE SEVERITY IS >=12 THE MESSAGE IS TYPED ON THE CONSOLE,      00087100
*    OTHERWISE A WTO WITH ROUTCDE=11 IS QUITE SATISFACTORY,UNLESS       00087200
*    WE HAVE A PRINT DD CARD,IF WHICH CASE WE CAN RETURN NOW            00087300
           CLI S23SEV,3                                                 00087400
           BL  S23TPRNT                                                 00087500
* HERE A REAL WTO IS REQUIRED,SO SET UP ROUTE-CODES 2 & 11              00087600
           MVC #S23MSSG,=XL2'8000'                                      00087700
           LH  R15,#S23LREC                                             00087800
           LA  R15,#S23LREC(R15)                                        00087900
           MVC 0(4,R15),=X'04004020' DESC 6 RTE 11,2              75311 00088000
           LA  R1,#S23LREC                                              00088100
           SVC SVC35                                                    00088200
           B  S23GOBAK                                                  00088300
           SPACE 3                                                      00088400
S23TPRNT   EQU *                                                  75311 00088500
* SET UP A WTO WITH ROUTCDE=11                                          00088600
           MVC #S23MSSG,=XL2'8000'                                      00088700
           LH  R15,#S23LREC                                             00088800
           LA  R15,#S23LREC(R15)                                        00088900
           MVC 0(4,R15),=X'00000020' ROUTCODE   11                75128 00089000
           LA  R1,#S23LREC                                              00089100
           SVC SVC35                                                    00089200
S23GOBAK    EQU  *                                                      00089300
           CLI S23SEV,5           JOL TERMINAL ERROR ?                  00089400
           BNE  S23LMRET                                                00089500
           ABEND 1,DUMP,STEP                                            00089600
           XC  S23STMT,S23STMT                                          00089700
S23LMRET   EQU  *                                                       00089800
           JOLRETN                                                      00089900
           LTORG                                                        00090000
           DC   S(*),S(*),S(*),S(*)                                     00090100
           DC   S(*),S(*),S(*),S(*)                                     00090200
           DC   S(*),S(*),S(*),S(*)                                     00090300
           DC   S(*),S(*),S(*),S(*)                                     00090400
           DC   S(*),S(*),S(*),S(*)                                     00090500
           DC   S(*),S(*),S(*),S(*)                                     00090600
           DC   S(*),S(*),S(*),S(*)                                     00090700
           DC   S(*),S(*),S(*),S(*)                                     00090800
           DC   S(*),S(*),S(*),S(*)                                     00090900
           DC   S(*),S(*),S(*),S(*)                                     00091000
           DC   S(*),S(*),S(*),S(*)                                     00091100
           DC   S(*),S(*),S(*),S(*)                                     00091200
           DC   S(*),S(*),S(*),S(*)                                     00091300
           DC   S(*),S(*),S(*),S(*)                                     00091400
           DC   S(*),S(*),S(*),S(*)                                     00091500
           DC   S(*),S(*),S(*),S(*)                                     00091600
           DC   S(*),S(*),S(*),S(*)                                     00091700
           DC   S(*),S(*),S(*),S(*)                                     00091800
           DC   S(*),S(*),S(*),S(*)                                     00091900
           DC   S(*),S(*),S(*),S(*)                                     00092000
.SKIPX   ANOP                                                           00092100
           END                                                          00092200
