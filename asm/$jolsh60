$JOLSH60   TITLE 'JOL TRANSIENT SCHEDULER AND INSTRUCTION HANDLER 6.0'  00001005
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1971,1972,1973,1974,1975,1976  00010005
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1980.                          00020000
* JOL COPYRIGHT CLEM CLARKE  1980,1981,1982,1983.                       00030000
* JOL COPYRIGHT CCS-JOL PTY LTD, 1984.                                  00040000
* JOL COPYRIGHT CCS-JOL PTY LTD, 1985.                                  00050000
* JOL COPYRIGHT CCS-JOL PTY LTD, 1986.                                  00051000
* JOL COPYRIGHT CCS-JOL PTY LTD, 1987.                                  00052005
* JOL COPYRIGHT Clem Clarke      2001.                                  00052105
* JOL COPYRIGHT Clem Clarke      2008.                                  00052205
* JOL COPYRIGHT Clem Clarke      2010.                                  00052309
           SPACE 3                                                      00052409
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-E001.           00060000
           SPACE 3                                                      00070000
*                   J             000000            L                   00080000
*                   J            0      0           L                   00090000
*                   J           0        0          L                   00100000
*                   J          0          0         L                   00110000
*                   J         0            0        L                   00120000
*                   J         0            0        L                   00130000
*                   J         0            0        L                   00140000
*                   J         0            0        L                   00150000
*                   J         0            0        L                   00160000
*                   J         0            0        L                   00170000
*                   J         0            0        L                   00180000
*        J          J         0            0        L                   00190000
*         J        J           0          0         L                   00200000
*          J      J             0        0          L                   00210000
*           J    J               0      0           L                   00220000
*            JJJJ                 000000            LLLLLLLLLLL         00230000
           SPACE 3                                                      00240000
* LAST SOURCE UPDATE 28/7/1986   BY C.CLARKE                            00250000
*   CHANGES:-                                                           00260000
*     1. ALTER INITIAL MESSAGE TO 4.0A.                                 00270000
*     2. FIX CATLG OF GREATER THAN 5 VOLUMES.                           00280000
*     3. SET LASTCC,MAXCC IF CATLG, DELETE FAILS.                       00290000
*                                                                       00300000
* LAST SOURCE UPDATE 16/7/1985   BY CVC.                                00301000
*   CHANGES:-                                                           00302000
*     1. APPLY ZAPS TO SOURCE FOR CATLG AND PDQ PROBLEMS.               00303000
*     2. FIX CATLG MOD DATA SET ON DISK.                                00304000
*     3. STOP (0) BEING ADDED TO DELETE MESSAGE.                        00305000
*                                                                       00306000
* LAST SOURCE UPDATE 21/12/1983   BY CVC.                               00310000
*   CHANGES:-                                                           00320000
*     1. SUPPORT IBM MXS/XA OPERATING SYSTEM.                           00330000
*                                                                       00340000
* LAST SOURCE UPDATE 9/3/1983   BY CVC.                                 00350000
*   CHANGES:-                                                           00360000
*     1. PRINT SSI CORRECTLY.                                           00370000
*     2. DELETE GDG ALL CORRECTLY.                                      00380000
*                                                                       00390000
* LAST SOURCE UPDATE 26/8/1981   BY CVC.                                00400000
*   CHANGES:-                                                           00410000
*     1. FIX 800 BPI TAPE PROBLEM                                       00420000
*     2. ALLOW JOL TO USE PROGRAMS IN LPALIB                            00430000
* FOLLOWING FIXES CODED, SEPT 7,1976                                    00440000
*                                                                       00450000
*CHG26028      PROVIDE SUPPORT FOR 'IF ERROR'                           00460000
*CHG30002      AS ABOVE                                                 00470000
*CHG30062      HIGHLIGHT ERROR MESSAGES ETC MORE                        00480000
*JOL30112      PROVIDE SUPPORT FOR DELETE GDGALL                        00490000
*JOL30114      ALLOW UP TO 5 LEVELS OF MACROS                           00500000
*JOL30115      CLOSE FILES BEFORE ABENDING                              00510000
*JOL30116      FIX DELETE TEMPORARY DATA-SETS                           00520000
* ALSO UPDATE CAMLIST,SCRATCH ETC MACROS FOR VS RETURN CODES            00530000
********************************************************************    00540000
*                                                                       00550000
*            JOL EXECUTE 'INITIATOR/SCHEDULER'                          00560000
*                                                                       00570000
*                                                                       00580000
*                                                                       00590000
*                                                                       00600000
*                                                                       00610000
*                                                                       00620000
* NOTE: MANY MACRO NAMES ARE THE SAME AS THOSE USED IN THE JOL          00630000
*     COMPILER,BUT THEIR GENERATED CODE DIFFERS VERY SLIGHTLY           00640000
*     FROM THE OTHER MODULES,EVEN THOUGH THE FUNCTION IS THE SAME       00650000
********************************************************************    00660000
           SPACE 1                                                      00670000
*********************************************************************** 00680000
*                                                                       00690000
*                                                                       00700000
* DUE TO THE FAILURE OF IBM JOBQ MANAGEMENT ROUTINES (EITHER TO MY      00710000
*    UNDERSTANGING OR IBM'S DOCUMENTATION) SOME 'EMERGENCY' TYPE        00720000
*    CODE ALTERATION IS GOING ON TO GET JOL TO FUNCTION UNDER           00730000
*    VS1. NOTE THAT MVS USES THE STANDARD IBM CODE.                     00740000
*                                                                       00750000
* CODE MARCH 7,1976: ALL MARKED '*****' IN COLS 67-71                   00760000
*    SEE ALSO  'UJEJOB' CSECT FOR CHANGES                               00770000
*                                                                       00780000
*********************************************************************** 00790000
           SPACE 3                                                      00800000
           MACRO                                                        00810000
           EYEBALL &A                                                   00820000
           DS  0D                                                       00830000
           DC  8CL4'&A'                                           75311 00840000
           DS  0D                                                       00850000
           MEND                                                         00860000
           SPACE 3                                                      00870000
           SPACE 3                                                      00880000
           MACRO                                                        00890000
&NAME      JOLERR &STMT=STMT                                            00900000
.* THIS MACRO WILL PUT INTO A LOCATION A STRING OF CHARACTERS           00910000
.* THE STRING MAY BE IN A BUFFER OR JOL MAY ITSELF CONTROL              00920000
.*   THE WHERE-ABOUTS OF THE ERROR MESSAGE.                             00930000
.*                                                                      00940000
.* SYSLIST(1) IS TAKEN TO BE THE ERROR SEVERITY AND ALSO THE            00950000
.*   ERROR NUMBER.                                                      00960000
           LCLA &LITPOSN,&LITLEN                                        00970000
           LCLC &CSECT,&ERRNO                                           00980000
           LCLC &JOLERR,&CHAR1                                          00990000
           LCLA &LENGTH,&THIS,&NOVAR,&POSN,&L,&K,&STMTLEN               01000000
&STMTLEN   SETA 4                                                       01010000
&CSECT     SETC '&SYSECT'(3,3)                                          01020000
&ERRNO     SETC '&SYSLIST(1)'(2,2)                                      01030000
&CHAR1     SETC '&SYSLIST(1)'(1,1)                                      01040000
           AIF ('&STMT' EQ 'STMT').ORDSTMT                              01050000
           MVC S23STMT,&STMT MOVE NON-STANDARD STATEMENT NUMBER IN      01060000
.ORDSTMT   ANOP                                                         01070000
*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-*   01080000
&NAME      BAL 14,UJS23EP&CHAR1 LINK TO APPROPRIATE ERROR POINT         01090000
&JOLERR    SETC '&CSECT-&ERRNO'                                         01100000
ER&CSECT&ERRNO MVC 0(7,1),=CL7'&JOLERR' ERROR CODE IN CROSS-REF LIST    01110000
E&SYSNDX   EQU   ER&CSECT&ERRNO                                         01120000
&THIS      SETA  2                                                      01130000
.LUP4      ANOP                                                         01140000
           AIF (&THIS GT N'&SYSLIST).END                                01150000
           AIF ('&SYSLIST(&THIS)'(1,1) EQ '#').VAR2                     01160000
           AIF ('&SYSLIST(&THIS)'(1,1) EQ '''').LIT2                    01170000
.* HERE IT SHOULD BE A CHAR VARIABLE                                    01180000
&L         SETA L'&SYSLIST(&THIS)                                       01190000
           MVC 0(&L,1),&SYSLIST(&THIS)         FIXED CHAR STRING        01200000
           AGO .ADD3                                                    01210000
.LIT2      ANOP                                                         01220000
.* NOW LOOK FOR DOUBLE QUOTES IN STRING TO CALCULATE THE CORRECT        01230000
.*   LENGTH                                                             01240000
&LITPOSN   SETA 2                              START AFTER 1ST QOTE     01250000
&LITLEN    SETA K'&SYSLIST(&THIS)                                       01260000
&LITLEN    SETA &LITLEN-2                                               01270000
.TQUOTE2   AIF ('&SYSLIST(&THIS)'(&LITPOSN,2) NE '''''').NOTDBL2        01280000
&LITPOSN   SETA &LITPOSN+1                                              01290000
&LITLEN    SETA &LITLEN-1                                               01300000
.NOTDBL2   ANOP                                                         01310000
&LITPOSN   SETA &LITPOSN+1                                              01320000
           AIF (&LITPOSN LT K'&SYSLIST(&THIS)).TQUOTE2                  01330000
&K         SETA &LITLEN                                                 01340000
           MVC 0(&K,1),=C&SYSLIST(&THIS)       MOVE LITERAL STRING      01350000
&POSN      SETA  &POSN+&K                                               01360000
           AGO .ADD3                                                    01370000
.VAR2      ANOP                                                         01380000
           LA 15,&SYSLIST(&THIS)           LOAD ADDRESS VARYING STRING  01390000
.ADD3      ANOP                                                         01400000
&THIS      SETA &THIS+1                                                 01410000
           AGO .LUP4                                                    01420000
.END       DC  H'0'                            END LIST                 01430000
*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-*   01440000
           MEND                                                         01450000
         SPACE 3                                                        01460005
         MACRO                                                          01470005
&NAME    JOLRETN &RC=0                                                  01480005
&NAME    L     R13,4(R13)      RESET SAVE ADDRESS                       01490005
         AIF ('&SYSLIST(1)' EQ '').R1412                                01500005
         RETURN &SYSLIST(1),T,RC=&RC                                    01510005
         MEXIT                                                          01520005
.R1412   RETURN (14,12),T,RC=&RC                                        01530005
         MEND                                                           01540005
         SPACE 3                                                        01550005
         MACRO                                                          01560005
&NAME    JOLSAVE &AREA=,&CSECT=,&BASE=R11                               01570005
         GBLA &REGEQU                                                   01580005
         LCLC  &T,&T1,&SA                                         J50   01581005
&T       SETC  'KCP'.'&SYSNDX'.'A'                                J50   01582005
&T1      SETC  'KCP'.'&SYSNDX'.'B'                                J50   01583005
&SA      SETC  'KCP'.'&SYSNDX'.'C'                                J50   01584005
.* SEE IF EQUATES SET UP FOR THIS RUN YET OR NOT                        01590000
         AIF (&REGEQU NE 0).NOEQU                                       01600005
&CSECT   START 0                                                        01610005
R0       EQU 0                                                          01620005
R1       EQU 1                                                          01630005
R2       EQU 2                                                          01640005
R3       EQU 3                                                          01650005
R4       EQU 4                                                          01660005
R5       EQU 5                                                          01670005
R6       EQU 6                                                          01680005
R7       EQU 7                                                          01690005
R8       EQU 8                                                          01700005
R9       EQU 9                                                          01710005
R10      EQU 10                                                         01720005
R11      EQU 11                                                         01730005
R12      EQU 12                                                         01740005
R13      EQU 13                                                         01750005
R14      EQU 14                                                         01760005
R15      EQU 15                                                         01770005
&REGEQU  SETA 1                                                         01780005
         AGO .NOCSECT                                                   01790005
.NOEQU   ANOP                                                           01800005
         AIF ('&CSECT' EQ '').NOCSECT                                   01810005
         LTORG                                                          01820005
&CSECT   CSECT                                                          01830005
.NOCSECT ANOP                                                           01840005
.*AME    SAVE (14,12),,*                                                01850005
         B     &T-*(,R15)                                         J50   01851005
         DC    AL1(&T1-*-1),C'&CSECT &SYSTIME &SYSDATE'           J50   01852005
&T1      DS    0C                                                 J50   01853005
&SA      DS    18F                                                J50   01853105
&T       DS    0H                                                 J50   01854005
         STM   R14,R12,12(R13)                                    J50   01855005
         AIF   (N'&BASE EQ 1).ONEBASE                                   01860005
         USING  &CSECT,&BASE(1),&BASE(2)                                01870005
         LR    &BASE(1),15                                              01880005
         LA    &BASE(2),2048(15)                                        01890005
         LA    &BASE(2),2048(&BASE(2))                                  01900005
         AGO   .HOUSE                                                   01910005
.ONEBASE ANOP                                                           01920005
         USING  &CSECT,&BASE                                            01930005
         LR    &BASE,15                                                 01940005
.HOUSE   AIF   ('&AREA' EQ '').GENAREA                                  01950005
         MNOTE 12,'AREA NOW UNSUPPORTED'                                01960005
.GENAREA ANOP                                                           01980005
         LA    R15,&SA          BRANCH AROUND SAVE AREA                 01990005
.HOUSE2  ST    R15,8(,R13)                                              02010005
         ST    R13,4(,R15)                                              02020005
         LR    R13,R15                                                  02030005
         MEND                                                           02040005
         SPACE 3                                                        02050005
* THESE NEXT TWO MACROS ARE USED FOR READING AND WRITING JOBQ.          02080000
*    IF THE SYSTEM IS VS,THE VS JOBQ ROUTINES ARE CALLED,OTHERWISE      02090000
*    A STRAIGHT READ OR WRITE OPERATION IS PERFORMED.                   02100000
           MACRO                                                        02110000
&NAME      GETJOBQ &DECB,&TTR                                           02120000
&NAME      LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS                 02130000
           L   R1,&TTR         LOAD ADDRESS OF AREA WITH TTR FOR POINT  02140000
           BAL R14,GETJOBQ     BRANCH AND LINK TO POINT,READ,CHECK RTN  02150000
           MEND                                                         02160000
           SPACE                                                        02170000
           MACRO                                                        02180000
&NAME      PUTJOBQ &DECB,&TTR                                           02190000
           LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS                 02200000
           AIF ('&TTR' EQ '').NOTTR                                     02210000
           L   R1,&TTR         LOAD R1 WITH TTR REQUIRED                02220000
           AGO .BAL                                                     02230000
.NOTTR     SR  R1,R1           NO TTR,CLEAR REGISTER 1                  02240000
.BAL       BAL R14,PUTJOBQ     BRANCH AND LINK TO POINT,WRITE CHECK RTN 02250000
           MEND                                                         02260000
           MACRO                                                        02270000
&NAME      CLEAR                                                        02280000
.* THIS MACRO WILL CLEAR (SET TO ' ' OR 0) A NUMBER OF LOCATIONS        02290000
.* IF THE AREAS BEING CLEARED ARE CHARACTER,THE MACRO WILL MOVE         02300000
.* THE FIELD 'BLANKS' TO THE AREA.                                      02310000
.* IF THE AREA IS A HALF WORD,FULL WORD THEN RO WILL BE SET TO          02320000
.*   0 AND STORED                                                       02330000
.* IF A DOUBLE WORK IF FOUND,OR A BIT FIELD,THEN AN XC TO ITSELF        02340000
.*   WILL BE GENERATED.                                                 02350000
           LCLA &THISP,&ORIGL,&OFFSET,&L                                02360000
           LCLC &IND,&INST,&LABEL                                       02370000
&LABEL     SETC '&NAME'                                                 02380000
&THISP     SETA 1              START AT FIRST PARAMETER                 02390000
&IND       SETC ' '            SET INDICATOR TO ' '                     02400000
.LUP       AIF (&THISP LE N'&SYSLIST).CLEAR                             02410000
           MEXIT                                                        02420000
.CLEAR     ANOP                                                         02430000
           AIF (T'&SYSLIST(&THISP) EQ 'C').CHAR                         02440000
           AIF (T'&SYSLIST(&THISP) EQ 'B').BIT                          02450000
           AIF (T'&SYSLIST(&THISP) EQ 'D').DBL                          02460000
           AIF ('&IND' NE ' ').ST                                       02470000
&LABEL     SR  0,0             CLEAR 0                                  02480000
&IND       SETC '1'                                                     02490000
.ST        AIF (T'&SYSLIST(&THISP) EQ 'H').HALF                         02500000
           AIF (T'&SYSLIST(&THISP) EQ 'F').FULL                         02510000
           AGO .DBL            DO AN XC THEN                            02520000
           USING TKNX,R3                                                02530000
           AGO .ADD1                                                    02540000
.HALF      ANOP                                                         02550000
           STH 0,&SYSLIST(&THISP)  SET &SYSLIST(&THIS) TO 0             02560000
           AGO .ADD1                                                    02570000
.FULL      ANOP                                                         02580000
           ST  0,&SYSLIST(&THISP)  SET &SYSLIST(&THIS) TO 0             02590000
           AGO .ADD1                                                    02600000
.DBL       ANOP                                                         02610000
.BIT       ANOP                                                         02620000
&LABEL     XC  &SYSLIST(&THISP),&SYSLIST(&THISP) SET TO 0               02630000
           AGO .ADD1                                                    02640000
.CHAR      ANOP                                                         02650000
           AIF (L'&SYSLIST(&THISP) GT 20).LONG                          02660000
           AIF (L'&SYSLIST(&THISP) NE 1).MUVBLNK                        02670000
&LABEL     MVI &SYSLIST(&THISP),C' ' MOVE 1 BLANK                       02680000
           AGO .ADD1                                                    02690000
.MUVBLNK   ANOP                                                         02700000
&LABEL     MVC &SYSLIST(&THISP),BLANKS SHIFT BLANKS IN                  02710000
           AGO .ADD1                                                    02720000
.LONG      ANOP                                                         02730000
&LABEL     MVI &SYSLIST(&THISP),C' ' SET FIRST BYTE TO ' '              02740000
.* NOW WE MUST MOVE +0 TO +1 ETC TILL ENTIRE STRING IS CLEARED          02750000
&ORIGL     SETA L'&SYSLIST(&THISP)                                      02760000
&L         SETA L'&SYSLIST(&THISP)-1                                    02770000
&OFFSET    SETA 1                                                       02780000
.CLRLUP2   AIF (&L LE 256).ONEMVC                                       02790000
           MVC &SYSLIST(&THISP)+&OFFSET.(256),&SYSLIST(&THISP)-1+&OFFSE*02800000
               T PROPOGATE                                              02810000
&OFFSET    SETA &OFFSET+256                                             02820000
&L         SETA &L-256                                                  02830000
           AGO .CLRLUP2                                                 02840000
.ONEMVC    MVC &SYSLIST(&THISP)+&OFFSET.(&ORIGL-&OFFSET),&SYSLIST(&THIS*02850000
               P)-1+&OFFSET                                             02860000
.ADD1      ANOP                                                         02870000
&THISP     SETA &THISP+1                                                02880000
&LABEL     SETC ' '                                                     02890000
         AGO .LUP                                                       02900005
         MEND                                                           02910005
         TITLE 'JOL SCHEDULER MAIN-LINE'                                02920005
         COPY  JOLGLOBL                                           J50   02921005
*        GBLC  &TYPE                                                    02930005
&TYPE    SETC    'SCHED'                                                02940005
         $UJEPARM                                                       02941005
         PRINT DATA                                               75311 02950005
*********************************************************************** 02960000
*                                                                     * 02970000
* CODE FOR IF ERROR IS INCORPORATED IN THIS DESCRIPTION OF THE MAIN-  * 02980000
*  LINE ROUTINE                                                       * 02990000
*                                                                     * 03000000
*        CALL  UJE98INI;      /* IF ANY ERRORS (NO DD'S FOR SCHEDULER,* 03010000
*                                  ETC),                              * 03020000
*                             OR IF PROBLEM PROGRAM RETURNED A VALUE  * 03030000
*                             THAT CAUSES JOB TO BE FLUSHED,          * 03040000
*                             A NON-ZERO RETURN CODE IS GIVEN, AND    * 03050000
*                             THE JOB WILL BE FLUSHED.                * 03060000
*                        NOTE:- ABENDS DO NOT CAUSE AN ERROR HERE.    * 03070000
*                             */                                      * 03080000
*        IF R15,=0 THEN                                               * 03090000
*        DO;                                                          * 03100000
*           SET GOBACK /* TO OS */ ON;                                * 03110000
*           RETURN 4000;                                              * 03120000
*        END;                                                         * 03130000
*                                                                     * 03140000
*        CALL  UJE50RD;       /* READ A STMT FROM 'INSTRUCT' FILE */  * 03150000
*        IF R15>=0 GO TO EOF; /* GO TO END OF JOB */                  * 03160000
*                                                                     * 03170000
*        SET  R4=COND(LEVEL*8 + NEST);                                * 03180000
*                                                                     * 03190000
*        IS INSTRUCT='IF' ?                                           * 03200000
*        YES, DO;                                                     * 03210000
*                                                                     * 03220000
*              SET 0(R4)='T';                                         * 03230000
* E00CLIF:     CALL IF;                                               * 03240000
*              IF TRUE        /* CHECKS FOR ABEND, AND IF 'ERROR' */  * 03250000
* NEW          THEN DO;                                               * 03260000
* NEW               CALL UJE50RD;                                     * 03270000
* NEW               IF R15>=0,                                        * 03280000
* NEW               GO TO EOF;                                        * 03290000
* NEW               IF 'IF' GO TO E00CLIF; /* TEST NEXT IF IN CHAIN*/ * 03300000
* NEW               ELSE GO TO E00EXECI;(EXECUTE INSTRUCTION) ;       * 03310000
*              END;                                                   * 03320000
* SKIP:        ELSE SKIP TILL MATCHING END ETC;                       * 03330000
*                                                                     * 03340000
*        END;                                                         * 03350000
*                                                                     * 03360000
* NEW    IF ABEND OCCURED                                             * 03370000
* NEW      AND CURRENT LEVEL,NEST                                     * 03380000
* NEW      <=  ERROR LEVEL,NEST (LEVEL,NEST ABEND OCCURED AT)         * 03390000
* NEW      THEN DO;           /* IE, SKIP INSTRUCTION BECAUSE ABEND*/ * 03400000
* NEW          CLEAR INERROR  /* CLEAR ERROR LOOP INDICATOR*/         * 03410000
* NEW          GO TO SKIP;    /* ALLOWS FOR IF ERROR, DO; */          * 03420000
* NEW      END;               /* ETC */                               * 03430000
*    /* NO ABEND */                                                   * 03440000
* EXECUTE-INSTRUCTION:        /* BRANCHED TO BY 'IF TRUE'             * 03450000
*                             ROUTINE ABOVE, THEREBY SKIPPING         * 03460000
* NEW                         THE 'IF ABEND AND LEVELS' ABOVE.        * 03470000
* NEW                                                                 * 03480000
* NEW                         HENCE, IF ERROR WILL FUNCTION */        * 03490000
*                                                                     * 03500000
*                                                                     * 03510000
*        IF A 'DO'                                                    * 03520000
*        THEN DO;                                                     * 03530000
*              NEST=NEST+1; GO TO READ;                               * 03540000
*        END;                                                         * 03550000
*                                                                     * 03560000
*        IF AN 'END'                                                  * 03570000
*        THEN  DO;                                                    * 03580000
*              NEST=NEST-1;                                           * 03590000
*              IF NEST=0                                              * 03600000
*              THEN LEVEL=LEVEL-1;                                    * 03610000
*              GO TO READ;                                            * 03620000
*        END;                                                         * 03630000
*        IS IT AN 'ELSE' ?                                            * 03640000
*        YES, DO;                                                     * 03650000
*              IS 0(R4)='T'                                           * 03660000
*              YES, ELSE MUST BE FALSE, GO TO SKIPLOOP;               * 03670000
*              NO,GO TO READ;                                         * 03680000
*        END;                                                         * 03690000
*                                                                     * 03700000
*  /* OTHER */                                                        * 03710000
*                                                                     * 03720000
*        BRANCH TO PROCESSING ROUTINE                                 * 03730000
*                                                                     * 03740000
*                                                                     * 03750000
*                                                                     * 03760000
*********************************************************************** 03770000
         SPACE                                                          03780005
         JOLSAVE CSECT=UJE00SH,BASE=R12                                 03790005
         L    R3,0(R1)                                                  03840005
         ESTAE DMPEXT                                             J50   03841005
         USING PARMAREA,R3                                              03850005
         USING    TABLES,R5                                             03860005
         L    R5,=A(TABLES)                                             03870005
*        L     R15,=A(CHKFLG)                                     J50   03871005
         XI    CHKFLG,X'80'                                       J50   03872005
E00VSSTR EQU   *                                                  74365 03880005
         CALL  UJE98INI         INITIALISE ROUTINES                     03890005
         LTR   R15,R15           INIT FAIL OR USER ABEND ?              03900005
         BZ    E00FIRST                                                 03910005
BADRETN  EQU *                                                          03920005
         MVI GOBACK,C'1'                                                03930005
         BAL   R11,UJEFILES   GO CLOSE ALL FILES                        03940005
         JOLRETN RC=4000       CANCEL JOB NOW                           03950005
E00FIRST EQU     *                                                      03960005
E00READ  EQU *                                                          03970005
E00MAINL EQU *                 THIS IS THE MAIN-LINE.                   03980005
         CALL UJE50RD          READ NEXT STATEMENT                      03990005
         LTR R15,R15           READ OK (EOF MAYBEE)                     04000005
         BNZ E00EOF            EOF,RETURN AFTER SETTING END JOB         04010005
*                              INDICATORS.                              04020000
           LH  R4,LEVEL        LEVEL INDICATOR                          04030000
           SLL R4,3            *8 (WE ALLOW 8 NESTS PER LEVEL)          04040000
           LH R0,NEST                                                   04050000
           AR R4,R0                                                     04060000
           LA  R4,COND(R4)     THERE,NOW WE CAN LOOK AT 'CONDS'         04070000
           CLI LABEL,C' '                                               04080000
           BNE E00LABOK                                                 04090000
           MVC LABEL(2),=C'$$'                                          04100000
           MVC LABEL+2(4),STMT                                          04110000
E00LABOK   EQU  *                                                       04120000
           CLC =C'IF ',ICOMMAND  IF?                                    04130000
           BNE E00TDO          NO,GO TEST FOR A DO                      04140000
* OK,CALL THE IF PROCESSOR AND TEST FOR TRUE OR FALSE                   04150000
           MVI 0(R4),C'T'      SET COND INITIALLY 'TRUE'                04160000
           CALL UJE04IF                                                 04170000
           LTR R15,R15         IF 0,IT WAS A TRUE 'IF'                  04180000
         BNZ   E00IFRD0       FALSE, SKIP INSTRUCTION(S) CHG26028 76200 04190000
* IF IS TRUE HERE                                        CHG26028 76200 04200000
         CALL  UJE50RD        READ NEXT INSTRUCTION      CHG26028 76200 04210000
         LTR   R15,R15        GET IT ?                   CHG26028 76200 04220000
         BNZ   E00EOF         NO, GO TO EOF ROUTINE      CHG26028 76200 04230000
         B     E00EXECI       YES, GO AND PERFORM IT     CHG26028 76200 04240000
           SPACE 3                                                      04250000
* NOW THE 'IF' IS FALSE                                                 04260000
E00IFRD0   MVI 0(R4),C'F'      SET COND TO 'FALSE'                      04270000
E00IFRD1   CALL UJE50RD        READ THE NEXT INSTRUCTION                04280000
           LTR R15,R15                                                  04290000
           BNZ E00EOF                                                   04300000
           SPACE                                                        04310000
E00SKIP  EQU   *                                         CHG26028 76200 04320000
           CLC =C'IF ',ICOMMAND  IF THEN...IF THEN SITUATION?           04330000
           BE  E00IFRD1        YES,SO SKIP THIS ONE NOW                 04340000
           CLC =C'MACRO ',ICOMMAND   IS IT A MACRO HEADER ?             04350000
           BE E00IFLUP         START SKIPPING UNTIL MATCHING 'END'      04360000
           CLC =C'DO ',ICOMMAND IS IT A 'DO;                            04370000
           BE E00IFLUP         START SKIPPING UNTIL MATCHING 'END'      04380000
* HERE IT IS AN ORDINARY INSTRUCTION,AND WE HAVE 'SKIPPED ' IF          04390000
*     WE GO AND READ A NEW ONE NOW                                      04400000
           B  E00READ                                                   04410000
           SPACE 3                                                      04420000
E00IFLUP   EQU  *                                                       04430000
* NOW WE HAVE FOUND A MACRO OR A DO                                     04440000
           LA R4,1             SET NUMBER OF OUTSTANDING ENDS TO 1      04450000
E00IFRD    EQU  *                                                       04460000
           CALL UJE50RD        GET THE NEXT INSTRUCTION                 04470000
           LTR R15,R15                                                  04480000
           BNZ E00EOF          END OF INPUT FILE                        04490000
           CLC =C'END ',ICOMMAND                                        04500000
           BNE E00TIFMC        GO TEST IF INNER MACRO OR DO             04510000
           SH R4,=H'1'         -1 FROM END COUNTER                      04520000
           BZ  E00READ         GOOD OH,REACHED END OF FALSE LOOP        04530000
           B  E00IFRD                                                   04540000
           SPACE 3                                                      04550000
E00TIFMC   EQU  *                                                       04560000
           CLC =C'MACRO ',ICOMMAND                                      04570000
           BE  E00ADD1                                                  04580000
           CLC =C'DO ',ICOMMAND                                         04590000
           BNE E00IFRD                                                  04600000
E00ADD1    LA R4,1(R4)         UP THE NUMBER OF OUTSTANDING 'ENDS'      04610000
           B  E00IFRD          AND READ A NEW INSTRUCTION               04620000
*  END IF PROCESSING                                                    04630000
           SPACE 3                                                      04640000
E00TDO     EQU  *                                                       04650000
E00TERR  CLI   ERRORIND,0     HAS AN ABEND OCCURED ?     CHG26028 76200 04660000
         BE    E00TDO2        NO, NOT YET                CHG26028 76200 04670000
* AN ABEND HAS BEEN DETECTED SOMEWHERE.                  CHG26028 76200 04680000
*******************************************************************DASD 04690000
*  IF ERROR SWITCH SETTINGS USING FIELD "INERRORL"                *DASD 04700000
*                                                                 *DASD 04710000
*  BYTES 0-3 ON = IF ERROR LOGIC IN PROCRESS                      *DASD 04720000
*           OFF = NO IF ERROR LOGIC REACHED AS YET OR             *DASD 04730000
*                 CURRENTLY RUNNING IF ERROR AT ABEND LEVEL       *DASD 04740000
*  BYTES 4-7 ON = IF ERROR LOGIC REACHED AND ABEND OCCURED        *DASD 04750000
*           OFF = NO ABEND OCCURED WITHIN IF ERROR LOGIC          *DASD 04760000
*******************************************************************DASD 04770000
         TM     INERRORL,X'0F' IF ERROR ON WITH AND ABEND ?        DASD 04780000
         BZ     E00SKIP      NOPE   LETS SKIP ANY RUNNING AFTER ABEDASD 04790000
         CLC   LEVEL(L'LEVEL+L'NEST),ERRLEVEL            CHG26028 76200 04800000
         BH    E00TDO2        OK, IF ERROR THEN DO LOOP  CHG26028 76200 04810000
         MVI   INERRORL,X'0F' TURN OFF 'IN ERROR LOOP'   CHG26028  DASD 04820000
         B     E00SKIP        SKIP INSTRUCTION(S)        CHG26028 76200 04830000
E00TDO2  EQU   *                                         CHG26028 76200 04840000
E00EXECI EQU   *                                         CHG26028 76200 04850000
         SPACE 2                                         CHG26028 76200 04860000
           CLC =C'DO ',ICOMMAND IS IT A 'DO'                            04870000
           BNE E00TMAC         NO,TEST IF 'MACRO'                       04880000
           LH  R1,NEST         ADD                                      04890000
           LA  R1,1(R1)            1 TO                                 04900000
           CH  R1,=H'8'                NEST                             04910000
           BH  E00DOERR            IF NOT                               04920000
           STH R1,NEST         T00 BIG                                  04930000
           B   E00READ         AND READ A NEW RECORD                    04940000
E00DOERR   JOLERR 505,'TOO MANY DOS'   (THIS ABENDS,U0001)              04950000
           SPACE 3                                                      04960000
E00TMAC    CLC =C'MACRO ',ICOMMAND                                      04970000
           BNE E00TEND                                                  04980000
           LH  R1,LEVEL                                                 04990000
           LA  R1,1(R1)                                                 05000000
         CH    R1,=H'7'                                  JOL30114 76200 05010000
           BL  E00MACOK                                                 05020000
           JOLERR 508,'TOO MANY LEVELS'  (ABENDS TOO)                   05030000
E00MACOK   STH R1,LEVEL                                                 05040000
           LA R1,SAVENEST(R1)                                           05050000
           MVC 0(1,R1),NEST+1 SAVE THE NEST SO WE CAN RESET AT MACRO    05060000
*                              END SO AS NOT TO LOSE OURSELVES          05070000
           XC  NEST,NEST                                                05080000
           B   SETMACRO        TRUE 'LOOP',SET UP MACRO START           05090000
           SPACE 3                                                      05100000
E00TEND    CLC =C'END ',ICOMMAND WELL,PERHAPS IT IS AN 'END'            05110000
           BNE E00TELSE        NOPE,GO TEST IF IT IS AN'ELSE' THEN      05120000
           SPACE                                                        05130000
           LH  R1,NEST         NOW REDUCE 'NEST'                        05140000
           SH  R1,=H'1'                                                 05150000
           BM  E00ENDMC        IF <0 IF IS A 'MACRO' END                05160000
           STH R1,NEST                                                  05170000
           B   E00READ        *********************** MARCH 12 76       05180000
           BCTR R4,0           -1 FROM R4                         75311 05190000
           MVI 0(R4),C' '      CLEAR COND                         75311 05200000
           B   E00READ                                                  05210000
           SPACE 3                                                      05220000
E00ENDMC   EQU *                                                        05230000
* NOW THE'MACRO END' REQUIRES SPECIAL ATTENTION BECAUSE WE MUST         05240000
*     STORE THE HIGHEST RETURN CODE FROM THE PROGRAMS EXECUTED          05250000
*     BY THE MACROS.                                                    05260000
           LH R1,LEVEL                                                  05270000
           LA R15,SAVENEST(R1)                                          05280000
           SH R1,=H'1'                                                  05290000
           BNM E00MACEN                                                 05300000
           JOLERR 506,'TOO MANY ENDS'  (ABENDS)                         05310000
           SPACE 3                                                      05320000
E00MACEN   EQU  *                                                       05330000
           STH R1,LEVEL                                                 05340000
           MVC NEST+1(1),0(R15)                                         05350000
           SPACE 3                                                      05360000
** STORE THE HIGHEST RETURN CODE FROM THE MACRO                         05370000
           LA R7,IDSTART                                                05380000
           LH R1,NOIDS                                                  05390000
           MH R1,=H'18'                                                 05400000
           LR R15,R7                                                    05410000
           AR R7,R1                                                     05420000
           LH R14,=H'-18'                                               05430000
           LR R1,R7                                                     05440000
           USING IDOVLY,R1                                              05450000
           MVC DBL,IDRETN                                               05460000
           L R7,DBL                                                     05470000
**** CHECK FOR A DEAD MARCO HEADER WITH A -1 RETURN CODE AND BYPASSDASD 05480000
           CLC  DBL(4),=F'-1'                                      DASD 05490000
           BNE E00LUP10                                                 05500000
           SR R7,R7                                                     05510000
E00LUP10   CLC IDNAME,=CL8'MACRO'                                       05520000
           BE  E00GMAC                                                  05530000
           MVC DBL,IDRETN                                               05540000
**** CHECK FOR A DEAD MARCO HEADER WITH A -1 RETURN CODE AND BYPASSDASD 05550000
           CLC  DBL(4),=F'-1'                                      DASD 05560000
           BE   E00BXH1                                            DASD 05570000
           C R7,DBL                                                     05580000
           BH  E00BXH1                                             DASD 05590000
*          BL  E00BXH1                                             DASD 05600000
           L   R7,DBL                                                   05610000
E00BXH1    BXH R1,R14,E00LUP10                                          05620000
           JOLERR 507,'NO MACRO START'                                  05630000
E00GMAC    ST R7,CALLAREA                                               05640000
           MVC IDRETN,CALLAREA                                          05650000
           MVC IDNAME,=CL8' '  TO GET RIGHT EFFECT FOR NESTED MACROS    05660000
           B   E00READ                                                  05670000
           SPACE 3                                                      05680000
E00TELSE   EQU *                                                        05690000
* NOW THE 'ELSE' MUST BE TESTED                                         05700000
           CLC =C'ELSE ',ICOMMAND                                       05710000
           BNE E00TFALS       NOT ELSE,TEST IF FALSE 'LOOP'             05720000
           CLI 0(R4),C' ' WAS AN 'IF' JUST PROCESSED ?                  05730000
           BNE E00ELSOK                                                 05740000
           JOLERR 402,'ELSE IGNORED'                                    05750000
           SPACE 3                                                      05760000
E00ELSOK   EQU *                                                        05770000
           CLI 0(R4),C'F'      LAST FALS ?                              05780000
           BNE E00TLTRU                                                 05790000
           MVC 0(2,R4),=C'  '      TURN OFF COND CODE ALTOGETHER        05800000
           B  E00READ                                                   05810000
E00TLTRU   B  E00IFRD1    GO JOIN 'IF' FALSE PROCESSOR                  05820000
           SPACE 3                                                      05830000
E00TFALS   EQU *                                                        05840000
E00ORD     EQU *                                                        05850000
           CLEAR ISRUN                                                  05860000
           L   R1,=A(JE00TBL1) LOAD ADDRESS OF TABLE WITH THE           05870000
*                              INSTRUCTION NAMES AND THE ADDRESSES      05880000
*                              OF THE ROUTINES TO HANDLE THEM.          05890000
           LM  R7,R9,0(R1)     LOAD BXLE ADDRESS CONSTANTS FOR          05900000
*                              THE ABOVE TABLE.                         05910000
E00FINDR   EQU  *                                                       05920000
           CLC ICOMMAND,0(R7)   COMPARE INSTRUCTION TO THAT IN TABLE    05930000
           BE  E00GOTRT        GOT THE ROUTINE TO HANDLE IT.            05940000
           BXLE  R7,R8,E00FINDR                                         05950000
E00ERROR   EQU  *                                                       05960000
           JOLERR 503,'INVALID INSTRUCTION ''',ICOMMAND,               *05970000
               ''' IN SCHED'                                            05980000
           SPACE 3                                                      05990000
E00GOTRT   L   R15,8(R7)       LOAD ROUTINE ADDRESS                     06000000
           BALR R14,R15                                                 06010000
           CLI ISRUN,C'1'      WAS A RUN JUST PROCESSED ?               06020000
           BE  E00FNDRN        YES,TWAS A RUN                           06030000
           LTR R15,R15         DID PROCESSOR HANDLE NORMAL INSTRUCTION  06040000
*                              (EG TYPE,DELETE ETC??)                   06050000
           BZ  E00MAINL        YES,SO TRY NEXT INSTRUCTION.             06060000
* HERE AN INSTRUCTION WAS EXECUTED,BUT RETURNED A NON-ZERO              06070000
*     CODE.                                                             06080000
           CH  R15,=H'4'       RETURN TO OS AFTER SKIPPING TO           06090000
*                              THE RIGHT JOB STEP ?                     06100000
           BE E00STPON         STEP ON TO A NEW OS STEP.                06110000
           CH R15,=H'4000'     STOP ETC EXECUTED ?                      06120000
           BE BADRETN                                                   06130000
E00CLRC    MVC 0(2,R4),=CL2' '                                          06140000
           B  E00MAINL                                                  06150000
           B  *+4                                                       06160000
           B  *+4                                                       06170000
           B  *+4                                                       06180000
           B  *+4                                                       06190000
*     SET THE INDICATOR WHICH TELLS OUR CALLER (THE MONITOR)            06200000
*     TO  RETURN TO OS SO IT CAN SKIP STEPS (OR CANCEL THE JOB)         06210000
           SPACE 3                                                      06220000
           SPACE 3                                                      06230000
RETURN     EQU  *                                                 74365 06240000
E00EOF         EQU  *                                                   06250000
* WE HAVE READ AN EOF ON THE INSTRUCTION FILE,SO WE WANT TO             06260000
*     GET TO THE END OF THE JOB                                         06270000
*                                                        CHG26028 76200 06280000
* IF AN ABEND HAS OCCURED, WE SHOULD SET A RETURN OF     CHG26028 76200 06290000
*  4000 SO THAT THE JOB WILL TERMINATE AS QUICKLY AS     CHG26028 76200 06300000
*  POSSIBLE (LETS NOT WASTE TOO MUCH TIME...)            CHG26028 76200 06310000
         SPACE 1                                         CHG26028 76200 06320000
         CLI   ERRORIND,0     DID AN ERROR OCCUR ?       CHG26028 76200 06330000
         BE    E00EOF2        NO, SO TERMINATE NICELY    CHG26028 76200 06340000
*                             (IF SLOWLY...)             CHG26028 76200 06350000
         MVC   LASTCC+2(2),=H'4000' SET RC=4000          CHG26028 76200 06360000
         B     RETNNOW        CLOSE FILES, RETURN.       CHG26028 76200 06370000
E00EOF2     LA R11,1            SET EOF INDICATOR ON                    06380000
           MVC GOTOLAB,=XL8'FFFFFFFFFFFFFFFF' SET IMPOSSABLY HIGH LABEL 06390000
*                              NUMBER IN GOTOLAB,SO WE WILL MARK ALL    06400000
*                              THE STEPS UNTIL EOJ WITH COND=ONLY       06410000
           B  E00FINDS         FIND THE NEXT OS STEP                    06420000
           SPACE 3                                                      06430000
E00STPON   EQU *                                                        06440000
           SR  R11,R11         SET EOF INDICATOR OFF                    06450000
* NOW WE HAVE TO ORGANISE FOR OS TO STEP ON TO ANOTHER                  06460000
*     STEP FOR US.                                                      06470000
* WE CAN BE NASTY (SET NEXT STEP SCT TO ANOTHER STEP WAY DOWN           06480000
*     THE QUEUE)                                                        06490000
* OR WE CAN BE KIND,IE SET UP A FEW COND=ONLY'S AND LET OS              06500000
*     GET THERE ITSELF.                                                 06510000
* WE COULD BE LUCKY,I SUPPOSE,AND THE NEXT STEP WE WANT                 06520000
* COULD REALLY BE THE NEXT OS STEP.                                     06530000
          SPACE                                                         06540000
* NOW IF IT WAS A RUN STATEMENT WE WERE TOLD TO STEP ON FOR,            06550000
* THE STEP WE WANT MUST BE THERE.                                       06560000
*     IF IT WAS A CATLG ETC THAT WE HAD TO STEP ON FOR,                 06570000
* WE COULD FIND THAT THE ACTUAL STEP WON'T BE THERE BECAUSE             06580000
* THE GENERATOR MAY HAVE CONBINED SEVERAL STEPS TO CUT DOWN             06590000
* THE NUMBER OF OS STEPS PRODUCED. IN THAT CASE,WE MERELY               06600000
* FIND A STEP THAT IS LESS THAN OR EQUAL,AND BRANCH TO IT               06610000
          SPACE                                                         06620000
E00FINDS  EQU *                                                         06630000
*          MVI SCTANSCT+3,0     ***** SET Z=0 (OK,ONLY READ)            06640000
           CLC SCTANSCT,=A(0)   LAST STEP IN JOB ? (THE NEXT ONE*****)  06650000
            BNE E00PNT         NOT EOF ON JOBQ                          06660000
           LTR R11,R11         EOF ON MY Q?                             06670000
           BNZ E00TEST         YES,SO MERELY RETURN TO OS               06680000
E00NOSTP   JOLERR 504,'CANNOT FIND STEP ',GOTOLAB                       06690000
           SPACE 3                                                      06700000
E00PNT     EQU *                                                        06710000
           GETJOBQ SCTDECB,SCTANSCT READ THE SCT,AFTER POINTING         06720000
* NOW IS IT THE STEP WE WANT ?                                          06730000
           CLC SCTSNAME,GOTOLAB                                         06740000
           BE  E00GOTRS        GOT RIGHT STEP                           06750000
* NOW AS MENTIONED EARLIER,WE MAY HAVE GONE TOO FAR IT WE WERE          06760000
*     DOING A SCRATCH FOR US.                                           06770000
* HOWEVER (3.0) WE MAY HAVE A REAL STEP NAME ON THE GENERATED JCL 75311 06780000
*  AND IF SO WE MUST CONTINUE EXAMINING THE JOBQ                  75311 06790000
           CLC =C'$$',GOTOLAB  REAL STEP [ JOL STEP NAME ?        75311 06800000
           BNE E00REWR         REAL, SO TOSS THIS SCT BACK WITH   75311 06810000
*                              COND=ONLY, AND CONTINUE            75311 06820000
           SPACE 1                                                75311 06830000
           BH E00GOTRS         WELL IT WILL DO ANYWAY EVEN IF IT        06840000
*                              IS A LITTLE HIGH                         06850000
           SPACE                                                        06860000
* NOW THE SCT IN CORE MUST BE REWRITTEN WITH COND=ONLY UNLESS           06870000
*     IT IS THE CURRENT OS STEP                                         06880000
E00REWR    EQU *                                                  75311 06890000
           CLC JCTSSTR(3),SCT  CURRENT OS STEP ?                        06900000
           BE E00TEST          YES,SO DON'T UPDATE AND OUTPUT           06910000
* SET COND=ONLY SO NEXT STEP (THIS SCT IN CORE) WON'T RUN               06920000
           MVC SCTABCND(3),=X'010000'                                   06930000
           PUTJOBQ SCTDECB     OUTPUT SCT AGAIN                         06940000
           B E00FINDS                                                   06950000
           SPACE 3                                                      06960000
E00GOTRS   EQU *                                                        06970000
E00TEST   EQU  *                                                        06980000
           POINT RETN,TTR$RETN                                          06990000
           WRITE E00RET2,SF,RETN,READAREA,'S'                           07000000
           CHECK E00RET2                                                07010000
           SPACE 3                                                      07020000
RETNNOW    EQU *                                                        07030000
           MVI GOBACK,C'1'                                              07040000
           CLI IBMRTN,C' '     ARE WE USING AN IBM ROUTINE TO     ***** 07050000
*                              ACCESS JOBQ ?                      ***** 07060000
           BE  E00NDEL1        NO, SO DON'T TRY TO DELETE IT      ***** 07070000
           DELETE EPLOC=IBMRTN YES, DELETE WHICH EVER ROUTINE     ***** 07080000
E00NDEL1   EQU *                                                  ***** 07090000
*          CLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ)                    *DASD 07100000
           BAL   R11,UJEFILES   GO CLOSE ALL FILES                 DASD 07110000
           L   R15,LASTCC                                         75311 07120000
           JOLRETN RC=(15)                                        75311 07130000
E00FNDRN   EQU  *                                                       07140000
           LTR R15,R15         DO WE HAVE TO SKIP TO A NEW              07150000
           BNZ E00STPON        OS STEP FOR THIS RUN ?                   07160000
           SPACE 3                                                      07170000
SETMACRO   EQU  *                                                       07180000
* RUN IT NOW                                                            07190000
           LH  R1,NOIDS                                                 07200000
           LA  R1,1(R1)                                                 07210000
           CH  R1,MAXIDS                                                07220000
           BL  MUVNAME                                                  07230000
           LH  R1,MAXIDS                                                07240000
           CVD R1,DBL                                                   07250000
           UNPK DDPRIM,DBL                                              07260000
           OI  DDPRIM+L'DDPRIM-1,X'F0'                                  07270000
*******************************************************            DASD 07280000
* NOW BEFORE ABENDING WE WILL TAKE A LOOK AT THE RETN *            DASD 07290000
* TABLE FOR A USED MACRO HEADER AND OVERLAY IT MAKING *            DASD 07300000
* ROOM FOR 1 NEW GUY                                  *            DASD 07310000
*******************************************************            DASD 07320000
         LH    R15,NOIDS      LOOK THIS MANY TIMES                 DASD 07330000
         LA    R1,18                                               DASD 07340000
         LA    R1,IDSTART(R1) START LOOKING HERE                   DASD 07350000
         USING IDOVLY,R1                                           DASD 07360000
SLIDELOP CLC   IDNAME,=CL8'MACRO' IS THIS GUY USED ?               DASD 07370000
         BNE   SLIDEUP        YEA MOVE IT UP                       DASD 07380000
         LA    R1,18(R1)      UP TO NEXT GUY                       DASD 07390000
         BCT   R15,SLIDELOP                                        DASD 07400000
* WELL GUY WHAT NOW ???????                                        DASD 07410000
           JOLERR 501,'MAX ',DDPRIM,' STEPS EXCEEDED'                   07420000
SLIDEUP  MVC   0(18,R1),18(R1) SLIDE THE REST UP 1                 DASD 07430000
         LA    R1,18(R1)      INCR TO NEXT SLOT                    DASD 07440000
         BCT   R15,SLIDEUP    LETS DO EM ALL                       DASD 07450000
         LH    R1,NOIDS       NOW LOAD NO OF IDS AGAIN             DASD 07460000
MUVNAME    STH R1,NOIDS                                                 07470000
           MH  R1,=H'18'                                                07480000
           LA R1,IDSTART(R1)                                            07490000
           USING IDOVLY,R1                                              07500000
           MVC IDSTMT,STMT                                              07510000
           OC IDSTMT,=C'0000'                                           07520000
           MVC IDNAME,TASKLABL                                          07530000
           MVC IDNEST,NEST                                              07540000
           MVC IDLEVEL,LEVEL                                            07550000
           MVC IDRETN,=F'-1'                                            07560000
           CLC =CL8'MACRO',ICOMMAND                                     07570000
           BNE NOTMACH                                                  07580000
           MVC IDNAME,=CL8'MACRO'                                       07590000
           B  E00MAINL                                                  07600000
NOTMACH    EQU  *                                                       07610000
* WE MUST NOW WRITE THE PROGRAM NAME IN THE PGM FIELD OF THE SCT        07620000
*    SO THAT SMF WILL BE OK                                             07630000
           GETJOBQ SCTDECB,JCTSSTR GET SCT,AFTER POINT                  07640000
           CLC =C'$JOLMN',SCTPGMNM    FIRST PROGRAM GETS SMF RECORD 3.1 07650000
           BNE E00SMF1                                                  07660000
           MVC SCTPGMNM,RUNNAME                                         07670000
E00SMF1    EQU   *                                                      07680000
           PUTJOBQ SCTDECB     RE-WRITE SCT                             07690000
* OK LET'S XCTL                                                         07700000
           POINT  RETN,TTR$RETN                                         07710000
           WRITE DECBRET1,SF,RETN,READAREA,'S'                          07720000
           CHECK  DECBRET1                                              07730000
           SPACE 1                                                74365 07740000
           CLI VS,C' '         ARE WE RUNNING UNDER VS ?          74365 07750000
* IF WE ARE,WE WILL ATTACH NOW RATHER THAN XCTLING AND CLOSING    74365 07760000
*          AS THIS IS FASTER AND VS CAN ROLL US OUT QUICKLIY      74365 07770000
           BNE E00ISVS         IS VS,DO THINGS DIFFERENTLY        74365 07780000
           CLI IBMRTN,C' '     ARE WE USING AN IBM ROUTINE TO     ***** 07790000
*                              ACCESS JOBQ ?                      ***** 07800000
           BE  E00NDEL2                                           ***** 07810000
           DELETE EPLOC=IBMRTN YES, DELETE IT                     ***** 07820000
E00NDEL2   EQU *                                                  ***** 07830000
*          CLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ)                    *DASD 07840000
           BAL   R11,UJEFILES   GO CLOSE ALL FILES                 DASD 07850000
           MVC DBL(4),STMT    SAVE STATEMENT NUMBER WHILE         75128 07860000
*                              PROBLEM PROGRAM IS EXECUTING             07870000
           L   R1,ATASKPRM                     LOAD ADDR OF PARAMETER   07880000
           ST R1,CALLAREA                                               07890000
           MVI CALLAREA,X'80'                                           07900000
           L   R13,4(R13)                      RESET SAVE ADDR          07910000
           L   R14,12(R13)                     RESET RETURN ADDR        07920000
           XCTL (2,12),DE=RUNNAME,DCB=0,MF=(E,CALLAREA)                 07930000
           SPACE 3                                                75311 07940000
E00ISVS    MVC DBL,STMT        SHIFT STATEMENT NUMBER             75311 07950000
* 3.0 - MVS CODE                                                  75311 07960000
*                                                                 75311 07970000
* FOR 3.0 WE WILL ATTACH THE PROBLEM PROGRAM UNDER THE MONITOR,   75311 07980000
* THAT IS, WE SHALL RETURN AS USUAL.                              75311 07990000
*                                                                 75311 08000000
* LATER, WHEN THIS CODE IS RE-ENTRANT, IT WILL BE MORE            75311 08010000
* EFFICENT TO ATTACH IT HERE, BUT VS1 IS A BIT OF A PROBLEM       75311 08020000
* BECAUSE IT DOESN'T HAVE 16MEGABYTES TO PLAY WITH.               75311 08030000
           BAL   R11,UJEFILES   GO CLOSE ALL FILES                 DASD 08040000
           JOLRETN RC=0        UJEMON WILL LOOK AT 'VS' TOO.      75311 08050000
*  D  *    MVC CALLAREA(4),ATASKPRM                                DASD 08060000
*  E  *    MVI CALLAREA,X'80'                                      DASD 08070000
*  A  *    XC TASK2ECB,TASK2ECB                                    DASD 08080000
*  D  *    LA R1,CALLAREA                                          DASD 08090000
*     *    ATTACH DE=RUNNAME,ECB=TASK2ECB          74365           DASD 08100000
*  M  *    LR  R11,R1          SAVE TCB ADDRESS                    DASD 08110000
*  V  *    WAIT 1,ECB=TASK2ECB                                     DASD 08120000
*  S  *    MVC TASKRETN(1),X'1D'(R11) SHIFT IN ABEND CODE          DASD 08130000
*     *    MVC TASKRETN+1(3),TASK2ECB+1 AND RETURN CODE            DASD 08140000
*  C  *    ST R11,CALLAREA                                         DASD 08150000
*  O  *    DETACH CALLAREA                                         DASD 08160000
*  D  *    B E00VSSTR          BACK TO MAINLINE                    DASD 08170000
*  E  *    B *+4                                                   DASD 08180000
*     *    B *+4                                                   DASD 08190000
*     *    B *+4                                                   DASD 08200000
*************************************************************      DASD 08210000
*  CLOSE ANY OPEN FILES BEFORE RETURNING TO THE MONITOR     *      DASD 08220000
*        MVS  WILL ABEND-C03                                *      DASD 08230000
*************************************************************      DASD 08240000
UJEFILES EQU   *                                                   DASD 08250000
         ST    R11,UJEFILSV                                        DASD 08260000
         LA    R14,INSTRUCT                                        DASD 08270000
         BAL   R11,UJEFCLSE                                        DASD 08280000
         LA    R14,PRINT                                           DASD 08290000
         BAL   R11,UJEFCLSE                                        DASD 08300000
         LA    R14,RETN                                            DASD 08310000
         BAL   R11,UJEFCLSE                                        DASD 08320000
         LA    R14,JOBQ                                            DASD 08330000
         BAL   R11,UJEFCLSE                                        DASD 08340000
         L     R11,UJEFILSV                                        DASD 08350000
         BR    R11                                                 DASD 08360000
UJEFCLSE EQU   *                                                   DASD 08370000
         TM    48(R14),X'10'  IS FILE OPEN ??                      DASD 08380000
         BZ    0(R11)         NOPE  RETURN                         DASD 08390000
         CLOSE ((14))         CLOSE THIS GUY                       DASD 08400000
         BR    R11            RETURN                               DASD 08410000
UJEFILSV DS    F              SAVE AREA FOR RETURN LOCATION        DASD 08420000
*                                                                       08430000
* THE FOLLOWING LOCATIONS ARE USED FOR READING AND WRITING              08440000
*  THE SYSTEM JOBQ                                                      08450000
*                                                                       08460000
* LOCN 1 CONTAINS THE TTR OF THE RECORD WRITTEN                         08470000
* LOCN 2 CONTAINS THE ADDRESS (IN DISPACEMENT FORM) OF THE AREA         08480000
*  TO BE USED AS THE READ/WRITE AREA                                    08490000
*                                                                       08500000
JCTDECB  DC    F'0'                                                     08510000
         LA    R1,JCT         EXECUTED ***                              08520000
         SPACE                                                          08530000
SCTDECB  DC    F'0'                                                     08540000
         LA    R1,SCT                                                   08550000
         SPACE                                                          08560000
PDQDECB2 DC    F'0'                                                     08570000
         LA    R1,PDQ                                                   08580000
         SPACE                                                          08590000
SIOTDECB DC    F'0'                                                     08600000
         LA    R1,SIOT                                                  08610000
         SPACE                                                          08620000
JFCBDECB DC    F'0'                                                     08630000
         LA    R1,INFMJFCB                                              08640000
         SPACE                                                          08650000
PDQDECB  DC    F'0'                                                     08660000
         LA    R1,PDQBLK                                                08670000
           SPACE 3                                                      08680000
ISINPDQ    DS CL1                                                       08690000
ISRUN      DC C' '                                                      08700000
RETNBLKS   DS  H                                                        08710000
PDQDSNNO   DS  H                                                        08720000
GOTOLAB    DS  CL8                                                      08730000
APDQDIR    DS  A                                                        08740000
SVC35      EQU 35                                                       08750000
           SPACE 3                                                      08760000
STMT       DC  CL4'  10'                                                08770000
LABEL      DS  CL8                                                      08780000
COMMAND    DS  CL8                                                      08790000
GETATKN   LA R1,TKNX                                                    08800000
          L  R15,=V(UJCGETKN)                                           08810000
          BR R15                                                  75128 08820000
          SPACE 3                                                       08830000
           SPACE 3                                                      08840000
* GET/PUT JOBQ ROUTINES CALLED BY GETJOBQ/PUTJOBQ MACROS                08850000
* ON ENTRY R0-> CONTROL AREA CONTAINING TTR SAVE SPACE, AND A(AREA)5128 08860000
*          R1-> TTR REQUIRED                                      74365 08870000
*                                                                       08880000
* A SEPERATELY ASSEMBLED CSECT CALLED UJEJOBQ IS RESPONIBLE             08890000
*  FOR ACTUALLY CALLING THE IBM MODULE 'IEFQMRAW' TO DO THE             08900000
*  JOBQ TRANSFERS                                                       08910000
*                                                                       08920000
*  THE PARAMETERS 'UJEJOBQ' WANTS ARE :-                                08930000
*  R1-> :-                                                              08940000
*     1. A(RECEIVE/WRITE AREA)                                          08950000
*     2. A(TTR POINTER)                                                 08960000
*     3. TRANSFR TYPE 4=READ ETC                                        08970000
*     4. A(IEFQMRAW)               IBM ROUTINE                          08980000
*                                                                       08990000
GETJOBQ  MVI   CALLAREA+11,4   READ INDICATOR TO PUT IN IEFQMRAW        09000005
         B     E00JOBQ                                                  09010005
PUTJOBQ  MVI   CALLAREA+11,X'03'  WRITE INDICATOR FOR QM          75128 09020000
         LR  R15,R0        GET CONTROL AREA ADDRESS                     09030000
         L   R1,0(R15)     GET TTR FROM SAVED AREA                      09040000
E00JOBQ  LR    R15,R0         LOAD R15 A(CONTROL BLOCK)           75128 09050000
         IC    R1,=AL1(0)     SET BOTTOM BYTE TO 0                 3.1  09060000
         ST    R1,0(R15)      STORE TTR REQD IN CONTROL BLOCK     75128 09070000
         ST    R1,CALLAREA+4  AND IN PARM FOR UJEJOBQ             75128 09080000
         EX    R0,4(R15)      EXECUTE LA INSTRUCTION TO FIND      75128 09090000
*                             ADDRESS OF AREA TO READ/WRITE       75128 09100000
         ST    R1,CALLAREA    SET PARM(1)                         75128 09110000
         MVC   CALLAREA+12(4),AQMRAW SHIFT A(IEFQMRAW)            75128 09120000
         B    *+4    ******************************************         09130005
         B    *+4    ******************************************         09140005
         ST    R14,IEFQRETN    SAVE RETURN ADDRESS                      09150005
         LA    R1,CALLAREA    SET R1 UP PROPERLY                  75128 09160000
         L     R15,=V(UJEJOBQ) LOAD JOL'S INTERFACE TO IEFQMRAW   75128 09170000
         BALR  R14,R15         AND BRANCH TO IT                   75128 09180000
         LTR   R2,R15         DID WE MANAGE FUNCTION ?            75128 09190000
         BZ E00RMODE                                                    09200005
         JOLERR 509,'UNABLE TO READ/WRITE JOBQ'                   75128 09210000
         SPACE                                                          09220005
E00RMODE EQU   *                                                  75128 09230000
*        UNSUP      LA R1,X'24' SVC 107                           75128 09240000
         L     R1,CALLAREA+4  RELOAD TTR FOR CALLER IN CASE HE WANT5128 09250000
         L     R14,IEFQRETN    LOAD RETURN ADDRESS                      09260005
         BR    R14             AND GO BACK                              09270005
         SPACE 3                                                        09280005
E00FXVOL MVI     VOL,C' '  CLEAR TO BLANKS                         DASD 09290005
         MVC     VOL+1(L'VOL-1),VOL                                DASD 09300005
         LA R1,VOL-1                                              74365 09310005
         LA R15,DDVOLUME                                          74365 09320005
E00SHFTC MVI 0(R1),C','       SHIFT IN COMMA TO SEPERATE VOLS    74365  09330005
         MVC 1(6,R1),0(R15)    SHIFT IN A VOLUME                  74365 09340005
           LA  R1,6(R1)        STEP OVER ',VOLUME'                 DASD 09350000
           LA R15,6(R15)       STEP OVER VOLUME                   74365 09360000
         CLI   0(R1),C' '      DROP EXTRA BLANKS (IF L'VOL<6)     74365 09370005
           BNE *+8             NOT BLANK                          74365 09380000
         BCT   R1,*-8          IS BLANK,DROP R1 BY 1              74365 09390005
           LA  R1,1(R1)        SKIP TO NEXT POSITION              75311 09400000
           CLI 0(R15),C' '     LAST VOL ?                         74365 09410000
           BE E00SETVL         YEP, OUT WE GO (NEARLY)            74365 09420000
           C R15,=A(DDVOLUME+30)   END LIST                       74365 09430000
           BNH E00SHFTC                                                 09440000
E00SETVL   S  R1,=A(VOL-1)                                       75003  09450000
           STH  R1,#VOL                                                 09460000
           BR R14                                                 74365 09470000
UJS23EP5   LA  R1,5                                                     09480000
           B   UJS23SET                                                 09490000
UJS23EP4   LA  R1,4                                                     09500000
           B   UJS23SET                                                 09510000
UJS23EP3   LA  R1,3                                                     09520000
           B   UJS23SET                                                 09530000
UJS23EP2   LA  R1,2                                                     09540000
           B   UJS23SET                                                 09550000
UJS23EP1   LA  R1,1                                                     09560000
           B   UJS23SET                                                 09570000
UJS23EP0   SR  R1,R1                                                    09580000
UJS23SET   EQU *                                                        09590000
           STC R1,S23SEV                                                09600000
           L   R15,=V(UJS23ER)                                          09610000
           BR  R15                                                      09620000
AMSGS    DC    A(MSGSECT)                                         J50   09621005
* WILL EVENTUALLY RETURN TO R14 ADDRESS                                 09630000
#S23MAX  DC    H'110'              MAX WTO OR LREC SIZE           76200 09640000
#S23LNE2 DS    H                   LINE 2 LENGTH                  76200 09650000
S23LNE2  DS    CL100               LINE 2 WORK AREA               76200 09660000
S23SEV   DS    CL1                                                      09670000
S23STMT  DC    XL4'00000000'                                            09680000
#S23BLKS DS    H                                                        09690000
         DS    H                                                        09700000
#S23LREC DS    H                                                        09710000
#S23MSSG DS    H                                                        09720000
S23MSSG  DS    CL150                                              74365 09730000
         DS    F                                                  75003 09740000
#VOL     DC    H'0'                                               75311 09750000
VOL      DC    CL50' '                                            75311 09760000
TASK2ECB DC    F'0'                                               74365 09770000
         DS    F               SPARE                                    09780000
RUNBLDL  DS    0D                                                       09790000
         DC    H'1'                                                     09800000
         DC    H'68'                                                    09810000
RUNNAME  DS    CL8                                                      09820000
RUNTTRK  DS    CL4                                                      09830000
RUNZ1    DS    CL1                                                      09840000
RUNC1      DS  CL1                                                      09850000
RUNUSDTA   DS  CL68                                                     09860000
UJ00ANS    DS 3F                                                        09870000
UJE00DDM    DC CL8'$$PRNT'                                              09880000
           ENTRY RETN,INSTRUCT,PRINT  ******FOR LINK MAP ******   75128 09890000
           PRINT NOGEN                                                  09900000
RETN       DCB DDNAME=$$INST,DSORG=PO,MACRF=W,                  80290  *09910000
               DEVD=DA,RECFM=FB,LRECL=80,                              *09920000
               BLKSIZE=2560                                        DASD 09930000
INSTRUCT   DCB DDNAME=$$INST,DSORG=PO,MACRF=(R,W),DEVD=DA               09940000
PRINT      DCB DDNAME=$$PRNT,DSORG=PS,DEVD=DA,RECFM=VB,LRECL=126,      *09950000
               BLKSIZE=136,MACRF=W                                      09960000
JOBQ       DCB DDNAME=$$JOBQ,DSORG=PS,MACRF=(WP,RP),DEVD=DA       ***** 09970000
           ENTRY JOBQ                                             ***** 09980000
TEMPDCB  DCB   DDNAME=$$INST,DSORG=PO,MACRF=R,           JOL30116 76200*09990000
               DEVD=DA,EXLST=TEMPEXIT                    JOL30116 76200 10000000
TEMPEXIT DS    0A                                        JOL30116 76200 10010000
         DC    X'87',AL3(JFCBDSNM)                       JOL30116 76200 10020000
ATIOT      DS  A                                                        10030000
ATCB       DS  A               ADDRESS OF TCB                           10040000
AQMRAW   DS    A(0)           IEFQMRAW JOB Q RTN ADDRESS          75128 10050000
IBMRTN     DC  CL8' '          NAME OF LOADED IBM ROUTINE TO ACCES***** 10060000
*                              THE SYSTEM JOB QUEUE               ***** 10070000
JCTTTR     DC  A(0)            ADDRESS [ TTR OF THE JCT (EACH     ***** 10080000
*                              SYSTEM IS A LITTLE DIFFERENT)      ***** 10090000
           SPACE 3                                                      10100000
           PRINT GEN                                                    10110000
#DSNAME    DS 0H                                                        10120000
#DSN       DC  H'10'         INITED ONLY FOR TESTS                      10130000
DSN        DS   0CL44                                                   10140000
DSNAME     DC  CL44'NOT INIT'                                           10150000
           SPACE 3                                                      10160000
* THIS TABLE IS USED BY THE SCRATCH AND CATLG ROUTINES                  10170000
*     ALTHOUGH THE JOL PROCESSOR KNOWS WHAT TYPE OF UNIT A 'DD' CARD    10180000
*     IS FOR,TO SAVE SPACE IN THE PROCESSOR IT IS NOT CONVERTED         10190000
*     TO A FULL IBM UNIT (AND OF COURSE THE USER MAY SPECIFY HIS        10200000
*     OWN GENERIC UNIT)                                                 10210000
* THIS TABLE IS USED ONLY WHEN A SCRATCH OR CATALOG WAS GIVEN           10220000
*     AND THE USER DID NOT CREATE THE DATA-SET IN THIS JOB,AND          10230000
*     THERE-FORE OS MAY NOT HAVE CONVERTED IT INTO A NICE LOOKING       10240000
*     UMIT FOR US.                                                      10250000
HEXUNITS   DC A(*+12)                                                   10260000
           DC A(5)                                                      10270000
           DC A(HEXUNITE-5)                                             10280000
         COPY  UNITABLE                                            DASD 10290000
HEXUNITE   EQU *                                                        10300000
         PUSH  USING                                              J50   10300105
DMPEXT   DS    0F                                                 J50   10301005
         STM   R14,R12,12(R13)                                    J50   10303005
         LR    R12,R15                                            J50   10303105
         USING  DMPEXT,R12                                        J50   10303305
         LA    R3,REGS                                            J50   10303405
         ST    R13,4(,R3)                                         J50   10303505
         ST    R3,8(,R13)                                         J50   10303605
         LR    R13,R3                                             J50   10303705
         OPEN  (JOLDUMP,OUTPUT)                                   J50   10303805
         LTR   R15,R15                                            J50   10303905
         BNZ   DMP010                                             J50   10304005
         SNAP  DCB=JOLDUMP,                                       J50  .10304105
               SDATA=(SWA,TRT,LSQA,CB,Q),                         J50  .10304205
               PDATA=(SA,ALLPA,PSW,SPLS)                          J50  .10304305
                                                                  J50   10304405
         CLOSE JOLDUMP                                            J50   10304505
DMP010   DS    0H                                                 J50   10304605
         L     R13,4(,R13)                                        J50   10304705
         L     R1,24(,R13)                                        J50   10304805
         SETRP RC=0,DUMP=YES,REGS=(14,12)                         J50   10304905
REGS     DS    18F                                                J50   10305305
JOLDUMP  DCB   DDNAME=JOLDUMP,LRECL=125,DSORG=PS,MACRF=W,         J50  .10306005
               BLKSIZE=882,RECFM=VAB                              J50   10307005
         POP   USING                                              J50   10308005
           DC S(*),S(*),S(*),S(*)                                       10310000
           DC S(*),S(*),S(*),S(*)                                       10320000
           DC S(*),S(*),S(*),S(*)                                       10330000
           DC S(*),S(*),S(*),S(*)                                       10340000
           DC S(*),S(*),S(*),S(*)                                       10350000
           DC S(*),S(*),S(*),S(*)                                       10360000
           DC S(*),S(*),S(*),S(*)                                       10370000
           DC S(*),S(*),S(*),S(*)                                       10380000
           DC S(*),S(*),S(*),S(*)                                       10390000
           DC S(*),S(*),S(*),S(*)                                       10400000
           DC S(*),S(*),S(*),S(*)                                       10410000
           DC S(*),S(*),S(*),S(*)                                       10420000
           DC S(*),S(*),S(*),S(*)                                       10430000
           DC S(*),S(*),S(*),S(*)                                       10440000
           DC S(*),S(*),S(*),S(*)                                       10450000
           DC S(*),S(*),S(*),S(*)                                       10460000
           DC S(*),S(*),S(*),S(*)                                       10470000
           DC S(*),S(*),S(*),S(*)                                       10480000
           DC S(*),S(*),S(*),S(*)                                       10490000
           LTORG                                                        10500000
           DS  0D                                                       10510000
RETNAREA   EQU *                                                        10520000
READAREA   DS CL2560                                               DASD 10530000
         ORG   READAREA                                                 10540005
TTR$RETN   DS  F               CONSTRUCTED BY BLDL IN SCHEDULER         10550005
TTR$INST   DS  F               CONSTRUCTED BY BLDL IN SCHEDULER         10560005
NOIDS      DS  H          CURRENT NO OF IDS                             10570000
LEVEL      DC H'0'                                                      10580000
NEST       DC H'0'                                                      10590000
COND       DC  CL50' '                                                  10600000
ERRORIND DC    X'00'          SET ON IF ABEND            CHG26028 76200 10610000
INERRORL DC    X'00'          ON IF CURRENTLY DOING ERRORCHG26028 76200 10620000
* NOTE:- DO NOT SEPERATE NEXT TWO LOCATIONS              CHG26028 76200 10630000
ERRLEVEL DC    H'0'           SET BY 'UJE04IF' WHEN -    CHG26028 76200 10640000
ERRNEST  DC    H'0'           'IF ERROR' FOUND           CHG26028 76200 10650000
SAVENEST   DC  XL6'00'                                                  10660000
MAXCC      DC  F'0'                                                     10670000
LASTCC     DC  F'0'                                                     10680000
JOLSVC     DC  X'0A0D'         SVC FROM 'OPTION' INSTRUCTION      75311 10690005
IDSTART    EQU *                                                        10700000
         ORG                                                            10710000
           SPACE 3                                                      10720000
*        IHASDWA  LIST=YES  (was KAA)                             J50   10721005
         IHASDWA                                                  J50   10722005
TABLES CSECT                                                            10730000
         COPY DDDSNDET                                            75128 10740000
         ORG   DDDSNDET                                           75128 10750000
         COPY PGMDETS                                             75128 10760000
         SPACE 3                                                  75128 10770000
           ORG                                                          10780000
           DS  0H                                                       10790000
MAXIDS     DC  AL2((READAREA+L'READAREA-IDSTART)/18)                    10800000
           DC  AL2(0)                                                   10810000
BLANKS     DC CL20' '                                                   10820000
           LTORG                                                        10830000
           EYEBALL JCT                                                  10840000
JCT        DS  0D                                                       10850000
         IEFAJCTB                                                       10860000
         AGO .MVSJCT1                                                   10870000
JCT        DS  CL176                                                    10880000
           ORG JCT+8                                                    10890000
JCTJOBMN   DS  CL8             JOB-NAME                                 10900000
           ORG JCT+24                                                   10910000
JCTPDIP    DS  A               QUEUE ADDRESS OF THE PDQ                 10920000
JCTAGDG    DS  A               QUEUE ADDRESS OF THE GDG BIAS TABLE      10930000
JCTASCT1   DS  A               QUEUE ADDRESS OF THE FIRST SCT           10940000
JCTASMB1   DS  A               QUEUE ADDRESS OF THE FIRST SMB           10950000
JCTAPCT    DS  A               QUEUE ADDRESS OF THE JOB ACCT            10960000
JCTASCD1   DS  A               QUEUE ADDRESS OF THE FIRST SCD           10970000
JCTADSB    DS  A               QUEUE ADDRESS OF THE LAST DSB            10980000
           ORG JCT+88                                                   10990000
JCTADSN    DS  A               QUEUE ADDRESS OF DSENQ TABLE.            11000000
JCTREGN    DS  AL2                                                      11010000
JCTQID     DS  AL1                                                      11020000
JCTSNUMB   DS 0AL1                                                      11030000
JCT#STPS   DS  AL1             NO OF STEPS                              11040000
           ORG JCT#STPS                                                 11050000
JCTSTEP    DS  AL1                                                      11060000
           ORG JCT+107                                                  11070000
JCT#TRKS   DS  AL1             NUMBER TRKS OF JOBQ USED THIS JOB        11080000
           ORG JCT+112                                                  11090000
JCTSSTR    DS  A               QUEUE ADDRESS OF CURRENT (I.E NOW        11100000
*                              EXECUTING) SCT                           11110000
           DS CL60                                                      11120000
.MVSJCT1     ANOP                                                       11130000
           EYEBALL SCT                                                  11140000
SCT        DS  0D                                                       11150000
         IEFASCTB                                                       11160000
         AGO .MVSSCT1                                                   11170000
SCT        DS  CL176                                                    11180000
           ORG SCT+12                                                   11190000
SCTASIOT   DS  CL3             QUEUE ADDRESS OF NEXT SIOT               11200000
           ORG SCT+20                                                   11210000
SCTANSCT    DS  AL3             TTR OF NEXT SCT                         11220000
           ORG SCT+36                                                   11230000
SCTAVOLT   DS  AL3             TTR OF VOLT                              11240000
           ORG SCT+44                                                   11250000
SCTPROC    DS CL8                                                       11260000
SCTSNAME    DS CL8                                                      11270000
           ORG SCT+64                                                   11280000
SCT#SIOT   DS  AL1             NO OF SIOTS IN THIS STEP                 11290000
           ORG SCT+108                                                  11300000
SCTPGMNM    DS CL8              PROGRAM NAME                            11310000
           ORG SCT+121                                                  11320000
SCTCOND1   DS  AL2             COND 1                                   11330000
SCTOP1     DS  AL1             OPERATOR 1                               11340000
SCTACON1   DS  AL3             ADDRESS OF SCT REFERRED TO BY COND       11350000
           ORG SCT+160                                                  11360000
SCTABCND   DS  AL2             ABEND (OR EIGHTH) COND CODE              11370000
SCTOP8     DS  AL1                                                      11380000
SCTACON8   DS  AL3                                                      11390000
.MVSSCT1       ANOP                                                     11400000
           EYEBALL SIOT                                                 11410000
SIOT     DS    0D                                                       11420000
         IEFASIOT                                                       11430000
         AGO .MVSSIOT                                                   11440000
SIOT       DS  CL176                                                    11450000
           ORG SIOT+4                                                   11460000
SIOTDDNM   DS  CL8             DDNAME IN SIOT                           11470000
           ORG SIOT+28                                                  11480000
SIOTASIO   DS  A               ADDRESS OF NEXT SIOT                     11490000
SCTPJFCB   DS  A               ADDRESS OF CORRESPONDING JFCB TO THIS    11500000
*                              SIOT                                     11510000
           ORG SIOT+49                                                  11520000
SIOT#VOT   DS  AL1             NUMBER OF VOLS IN THIS STEPS VOLT        11530000
SIOTRELV   DS  AL2             RELATIVE POINTER TO VOL TBL ENTRY        11540000
SIOTDDNO   DS  AL1             INTERNAL DD NUMBER                       11550000
SIOT#UNI   DS  AL1             #OF UNITS FOR THIS DATA SET              11560000
SIOT#VOL   DS  AL1             #OF VOLS                                 11570000
SCTSDISP   DS  AL1             BIT 0-RESERVED                           11580000
*                              BIT 1 RETAIN VOLUME                      11590000
*                              BIT 2 PRIVATE VOLUME                     11600000
*                              BIT 3 PASS DATA SET                      11610000
*                              BIT 4 KEEP DATA SET                      11620000
*                              BIT 5 DELETE DATA SET                    11630000
*                              BIT 6 CATALOG DATA SET                   11640000
*                              BIT 7 UNCATLG DATA SET                   11650000
           ORG SIOT+58                                                  11660000
SIOTIND3   DS  AL1                                                      11670000
*                              BIT 0 VREF TO DSNAME                     11680000
*                              BIT 3 VREF IN STEP                       11690000
*                              BIT 4 SYSOUT SPECIFIED                   11700000
*                              BIT 5 NEW DATA SET                       11710000
*                              BIT 6 MOD DATA SET                       11720000
*                              BIT 7 OLD OR SHR DATA SET                11730000
           ORG SIOT+59                                                  11740000
SIOTIND4   DS  AL1                                                      11750000
*                              BIT 2 NO PDQ PROCESSING                  11760000
*                              BIT 6 DSN IS IN PDQ                      11770000
*                              BIT 7 OLD OR MOD DATA SET =0             11780000
*                              BIT 7 NEW DATA SET = 1                   11790000
           ORG SIOT+60                                                  11800000
SCTUTYPE   DS CL8                                                       11810000
           ORG SIOT+84                                                  11820000
SIOTADSB   DS  AL3,CL1         QUEUE ADDRESS OF DSB IF SYSOUT SPECIFIED 11830000
SIOTNDSB   DS  AL4             QUEUE ADDRESS OF NEXT DSB                11840000
           ORG SIOT+92                                                  11850000
SIOTCDSP   DS  AL1             CONDITIONAL DISPOSITIONS                 11860000
*                              BIT 3 DD IS NOT PRIVATE                  11870000
*                              BIT 4 KEEP                               11880000
*                              BIT 5 DELETE                             11890000
*                              BIT 6 CATLG                              11900000
*                              BIT 7 UNCATLG                            11910000
SIOTLPDQ   DS  AL3             ADDRESS OF LAST SIOT TO PASS DATA SET    11920000
.MVSSIOT ANOP                                                           11930000
           ORG                                                          11940000
           EYEBALL PDQ                                                  11950000
           DS  0D                                                       11960000
PDQ        DS CL176                                                     11970000
           ORG PDQ                                                      11980000
PDQDSN1    DS  CL44            DSNAME 1 IN PASSED DATA SET QUEUE        11990000
PDQDSN2    DS  CL44            DSNAME 2 IN PASSED DATA SET QUEUE        12000000
PDQDSN3    DS  CL44            DSNAME 3 IN PASSED DATA SET QUEUE        12010000
PDQENTRY   DS  CL1             NUMBER OF ENTRIES IN THIS PDQ            12020000
PDQRESD    DS  CL35            JUNK OR SOMETHING                        12030000
PDQABLK    DS  CL3,CL1         ADDRESS OF ASSOCIATED PDQ BLOCK          12040000
PDQNPDQ    DS  CL3,CL1         ADDRESS OF NEXT PDQ DIRECTORY            12050000
*THESE FIELDS CORRESPOND TO THE MVS PASSED DATA SET INFORMATION         12060000
* BLOCK.                                                                12070000
***** IT IS NOT POSSIBLE TO USE AN MVS MACRO FOR THIS FUNCTION          12080000
* AS ONE DOES NOT EXIST.                                                12090000
*****                                                                   12100000
* THIS IS THE ONLY BLOCK THAT HAS CHANGED FROM                          12110000
* MVT TO MVS ************(SO FAR....) ******                            12120000
          ORG  PDQ                                                      12130000
PDIBLOCK  EQU   *                                                       12140000
PDINPDIP  DS   AL3   ADDRESS OF NEXT PDI SVA                            12150000
PDICTR    DS   AL1   NUMBER OF DSNAMES IN THIS BLOCK                    12160000
PDIBNXTP  DS   A     NEXT PDI BLOCK (DIFFERS FROM PDINPDIP              12170000
*                    ABOVE, AS IT POINTS DIRECTLY AT THE BLOCK,         12180000
*                    NOT -16 AS PDINPDIP).                              12190000
PDIDSNAM  DS   CL44  1ST DSNAME                                         12200000
PDIUNWA   DS   CL1   PASS Q INDICATORS                                  12210000
*                    BIT 0 ON IF INITIAL STATUS=OLD                     12220000
*                    BIT 1 ON IF CURRENT STATUS=OLD                     12230000
*                    BIT 2 ON IF PASS,OFF IF RECIEVED                   12240000
*                    BIT 6 ON IF DSNAME IS A JOBLIB                     12250000
PDIRESVD  DS   CL1   RESERVED                                           12260000
PDISTPNO  DS   H     STEP NUMBER THAT PASSED                            12270000
PDISIOTA  DS   AL3,AL1 SVA OF SIOT THAT PASSED DSN                      12280000
PDISIOTP  DS   A     USED FOR SIOT IN ALLOCATION ONLY.                  12290000
* THE ABOVE FIELDS ARE REPEATED THREE TIMES.                            12300000
          ORG  PDIDSNAM                                                 12310000
PDIDSN1  DS   CL44                                                      12320000
PDITERM1 DS   CL1                                                       12330000
PDIRESV1 DS   CL1                                                       12340000
PDISTN1  DS   H                                                         12350000
PDISIOT1 DS   AL3,AL1                                                   12360000
PDISIOW1 DS  A                                                          12370000
PDILEN   EQU   *-PDIDSN1                                                12380000
PDIDSN2  DS   CL44                                                      12390000
PDITERM2 DS   CL1                                                       12400000
PDIRESV2 DS   CL1                                                       12410000
PDISTPN2 DS   H                                                         12420000
PDISIOT2 DS   AL3,AL1                                                   12430000
PDISIOW2 DS   A                                                         12440000
PDIDSN3  DS   CL44                                                      12450000
PDITERM3 DS  CL1                                                        12460000
PDIRESV3 DS   CL1                                                       12470000
PDISTPN3 DS   H                                                         12480000
PDISIOT3 DS   AL3,AL1                                                   12490000
PDISIOW3 DS   A                                                         12500000
           ORG                                                          12510000
           EYEBALL PDQBLOCK                                             12520000
           DS  0D                                                       12530000
PDQBLK     DS   CL176          PASSED DATA SET QUEUE BLOCK              12540000
           ORG PDQBLK                                                   12550000
PDQCSTEP   DS  CL1             CURRENT STEP NUMBER (OR LAST USE         12560000
*                              OF THIS DATA SET)                        12570000
PDQDDNO    DS  CL1             CURRENT DD NUMBER                        12580000
PDQTERM    DS  CL1             PDQ TERMINATION WORK AREA                12590000
*    IF PDQTERM=B'0010' DD-CARD SAID NEW,PASS                           12600000
*    IF PDQTERM=B'0100' DD-CARD SAID OLD,KEEP (IE NOT PASSED NOW)       12610000
*    IF PDQTERM=B'1110' DD-CARD SAID OLD,PASS (OLD,CURRENT STATUS=OLD)  12620000
*    IF PDQTERM=B'1010' DD-CARD SAID OLD,DELETE (OLD,NOT PASSED)        12630000
* IT APPEARS THAT ONCE THE CURRENT STATUS BIT IS 0,ANY REFERENCE        12640000
*    TO THE DATA SET NAME IS IGNORED (I.E AS THOUGH NEVER ON PDQ).      12650000
*                                                                       12660000
*                                                                       12670000
PDQ#UCB    DS  CL1             NUMBER OF UCB'S                          12680000
PDQAJFCB   DS  CL3,CL1         QUEUE ADDRESS OF THIS JFCB               12690000
PDQASIOT   DS  CL3             QUEUE ADDRESS OF THIS SIOT               12700000
PDQSSTEP   DS  CL1             CURRENT STEP NUMBER (WHICH APPEARS       12710000
*                              TO BE ALWAYS THE SAME AS PDQCSTEP ABOVE) 12720000
PDQUCBS    DS  CL40                                                     12730000
PDQUACBO   DS  CL3,CL1         ADDRESS OF PDQ OVERFLOW BLOCK            12740000
PDQBLKLN   EQU *-PDQBLK                                                 12750000
* THE ABOVE FIELDS ARE REPEATED TWICE (IE 3 DATA SET DETAILS ALLOWED)   12760000
           ORG                                                          12770000
           SPACE 3                                                      12780000
           EYEBALL JFCB                                                 12790000
         IEFJFCBN   LIST=YES                                      76200 12800000
QMPA       DS  0D              USED FOR VS CURRENTLY                    12810000
QMPAJOB    DS  CL8             JOB NAME OR NO-WORK-CHAIN ELEMENT        12820000
QMPAFUNC   DS  CL1             FUNCTION CODE                            12830000
QMPAFLTR   DS  CL2             NN OF 1ST LOGL TRACK ASSIGNED TO ENTRY   12840000
QMPANOTR   DS  CL1             NUMBER OF RECORDS ASSIGNED IN THIS TRACK 12850000
QMPANXTL   DS  CL2             NN OF NEXT LOGICAL TRACK                 12860000
QMPANOLT   DS  CL1             NUMBER OF LOGICAL TRACKS ASSIGNED        12870000
QMPAJBCD   DS  CL1             JOB TYPE CODE                            12880000
QMPAJBST   DS  CL1             JOB STATUS CODE                          12890000
QMPAPRTY   DS  CL1             JOB PRIORITY                             12900000
QMPANXTQ   DS  CL2             NN OF NEXT QUEUE ENTRY                   12910000
QMPAQID    DS  CL2             QUEUE ENTRY IDENTIFICATION               12920000
QMPAORCL   DS  CL1             ORIGIN CLASS ID                          12930000
QMPARES1   DS  CL1             RESERVED                                 12940000
QMPATRKS   DS  A               ADDRESS TRACK STACKING PARM LIST         12950000
QMPAIND    DS  CL1                                                      12960000
           ORG QMPAIND                                                  12970000
QMPAAECB   DS  A               ADDRESS OF USERS ECB/IOB                 12980000
QMPANORC   DS  CL1             1ST 4 BITS=NO OF RECORDS TO ASSIGN       12990000
*                              2ND 4 BITS=NO OF RECORDS TO READ/WRITE   13000000
QMPAAEXT   DS  AL3             ADDRESS OF EXTERNAL PARAMETER AREA       13010000
IEFQATCB   DS  A               ADDRESS OF TCB                           13020000
IEFQAREC   DS  A               ADDRESS OF RECORD BUFFER                 13030000
IEFQAQMP   DC  A(QMPA)         ADDRESS OF QMPA                          13040000
IEFQTTR    DS  A               TTR OF REQUESTED RECORD                  13050000
IEFQRCLN   DC AL2(176)                                                  13060000
IEFQFUNC   DC AL2(0)                                                    13070000
IEFQDECB   DS  A               WORK AREA(NOT REQUIRED BY IEFQMMAC)      13080000
           DS 0D                                                        13100000
           EYEBALL INST                                                 13110000
INST       DS  H                               INSTRUCTIONS USE THIS    13120000
*                                              AREA AS WORK AREA AND    13130000
*                                              THEY ARE WRITTEN FROM    13140000
*                                              HERE                     13150000
           ORG INST                                                     13160000
ILENGTH    DS  H                               LENGTH OF RECORD         13170000
           DC  H'0'                            FOR VB RECORD DESCRIPTOR 13180000
II         DC  C'I'                            RECORD TYPE              13190000
ILABEL     DS  CL8                             STATEMENT LABEL          13200000
ISTMT      DS  CL4                             STATEMENT NUMBER         13210000
ILEVEL     DS  CL1                                                      13220000
INEST      DS  CL1                                                      13230000
ICOMMAND   DS  CL8                             INSTRUCTION EG 'TYPE'    13240000
IBODY      EQU *-ILENGTH                       LENGTH OF FIXED          13250000
*                                              PART OF RECORD           13260000
ITEXT    DS    CL150                                              75128 13270000
           SPACE 3                                                      13280000
           EYEBALL TKNX                                                 13290000
           COPY  TKNX                                                   13300000
           ORG TKNSTRG-IBODY-2                                          13310000
INSTRDA    EQU  *                                                       13320000
            ORG                                                         13330000
           DS 0D                                                        13340000
           LTORG                                                        13350000
INSCSECT   CSECT                                                        13360000
JE00TBL1   DC  A(JE00TBL2)                                              13370000
           DC  A(12)                                                    13380000
           DC  A(JE00END2-12)                                           13390000
JE00TBL2 DC    CL8'RUN     ',V(UJE20RUN)                                13400005
         DC    CL8'C       ',V(UJE05CAT)        CATLG                   13410005
         DC    CL8'U       ',V(UJE06UNC)        UNCATLG                 13420005
         DC    CL8'K       ',V(UJE07KEE)        KEEP                    13430005
         DC    CL8'S       ',V(UJE08SCR)        SCRATCH                 13440005
         DC    CL8'D       ',V(UJE09DEL)        DELETE                  13450005
         DC    CL8'RETURN',V(UJE23RET)                            74365 13460005
         DC    CL8'TYPE    ',V(UJE10TYP)                                13470005
         DC    CL8'DISPLAY ',V(UJE11DIS)                                13480005
         DC    CL8'SIGNAL  ',V(UJE12SIG)                                13490005
         DC    CL8'STOP    ',V(UJE13STP)                                13500005
         DC    CL8'OPTIONS ',V(UJE31OPT)                          75311 13510005
JE00END2 EQU   *                                                        13520005
PARMAREA DSECT                                                          13530005
TASKLABL DC    CL8' '          STEP-NAME (I.E LABEL IN JOL TERMINOLOGY) 13540005
TASKNAME DC    CL8' '          NAME OF PROGRAM BEING EXECUTED AS A      13550005
*                            SUBTASK                                    13560005
APARM    DS    A                                                        13570005
ATASKPRM DS    A               ADDRESS OF GOTTEN STORAGE FOR PARAMETERS 13580005
TASKSSI  DC    CL4' '          SSI OF THE SUB-TASK                      13590005
TASKRETN DC    F'0'            RETURN CODE FROM TASK                    13600005
TASKECB  DC    F'0'            EVENT CONTROL BLOCK FOR TASK             13610005
TASKIND  DC    C' '            SET TO 1 AFTER SCHEDULER CALLED          13620005
*                            THE FIRST TIME.                            13630005
GOBACK   DC    C' '            NOT BLANK MEANS RETURN TO OS NOW         13640005
*                                                         ***           13650005
INSTREOF DC    C' '            SET TO 1 ON EOF WHEN READING             13660005
*                            INSTRUCTIONS.                              13670005
VS       DC    CL1' '          ^='' IF VS SYSTEM                  75311 13680005
DBL      DS    D               WORK AREA ONLY                           13690005
CPUID    DS    0D                                                 J50   13691005
CALLAREA DS    9F             WORK AREA ONLY FOR PARAMETERS BASICALLY   13700005
IEFQRETN DS    A               RETURN ADDRESS                           13700105
PCCA     DS    A                                                        13701005
RUNDATE  DS    F                                                        13701105
CHKFLG   DC    P'0'                                               J50   13702005
         DS    0D                                                       13703010
PARML    DS    CL3000          LONG PARAMETER SUPPORT NOV 26 2010 J60   13704010
IDOVLY   DSECT                                                          13710005
IDSTMT   DS CL4                                                         13720005
IDNAME   DS CL8                                                         13730005
IDRETN   DS CL4                                                         13740005
IDLEVEL  DS CL1                                                         13750005
IDNEST   DS CL1                                                         13760005
********  VOLINFO DSECT USED TO REFERENCE A CAMLST *************   DASD 13770000
VOLINFO  DSECT                                                     DASD 13780000
NOVOLS   DS    H                                                   DASD 13790000
CATDEV   DS    XL4                                                 DASD 13800000
CATVOL   DS    CL6                                                 DASD 13810000
CATLABEL DS    H                                                   DASD 13820000
UCBS     DSECT ,                                            FIX-X 76200 13830000
         IEFUCBOB  LIST=YES                                 FIX-X 76200 13840000
         COPY   UJE04IF2                                                13850005
           TITLE 'UJE05CAT:CATALOG DATA SET'                            13860000
          JOLSAVE CSECT=UJE05CAT                                        13870000
* THIS ROUTINE DOES THE CATALOGUING                                     13880000
* NOW:- WE FACE MANY PROBLEMS WHEN DOING A 'CATLG' (OR A KEEP)          13890000
* FIRST,WE SHALL CALL THE KEEP ROUTINE WHICH READS THE ODD              13900000
*     JFCB,FIXES PDQ'S ETC                                              13910000
           CLI ICOMMAND,C'U'   UNCATALOG CALLING ME TO PRINT            13920000
*                              ERROR MESSAGES ?                         13930000
*          BNE E05DOCAT                                                 13940000
           BE E05PRNTE                                                  13950000
           CLI ICOMMAND,C'D'   DELETE CALLING ME TO PRINT ERR?          13960000
           BE E05PRNTE                                                  13970000
E05DOCAT   EQU  *                                                       13980000
           SPACE 3                                                      13990000
          CALL UJE07KEE   KEEPS THE DATA SET.                           14000000
           LTR R15,R15                                                  14010000
           BZ  E05TVOLS                                                 14020000
           LR  R2,R15                                                   14030000
           CH  R15,=H'4'       DOES KEEP WANT TO SKIP TO A NEW OS STEP? 14040000
           BNE E05KEEPE        NO,THERE WAS A REAL ERROR                14050000
           JOLRETN RC=4                                                 14060000
E05KEEPE   LA  R2,32                                                    14070000
E05UNSUC   EQU *                                                        14080000
           JOLERR 202,                                                 *14090000
               'DSID ''',DDDSID,''' DSNAME ''',#DSNAME,''' KEPT ON VOL(*14100000
               S) ',#VOL,' BUT NOT CATALOGED BECAUSE:-'          85196  14110000
           B  E05PRNTE                                                  14120000
E05TVOLS   EQU *                                                        14130000
          ST   R15,TASKRETN       SAVE FOR LASTCC TESTS           86211 14131005
* AT THIS POINT WE MIGHT HAVE TO DO SOME EXTRA WORK BEFORE WE CAN  DASD 14140000
* CATALOG THIS DATASET                                             DASD 14150000
* FIRST IF THE JFCBNVOL (NUMBER OF VOLUMES) EXCEEDS 5              DASD 14160000
* THE REST OF THE VOLUME SERIAL NUMBERS ARE RECORDED IN            DASD 14170000
* A JFCB EXTENSION BLOCK AT 15 A CRACK                             DASD 14180000
* SO IF WE SUPPORT GREATER THAN 5 WE MUST ALLOW FOR THE            DASD 14190000
* O.S. MAXIMUN OF 255.                                             DASD 14200000
         CLC   JFCBNVOL,=AL1(L'JFCBVOLS/6) > 5 VOLUMES ?           DASD 14210000
         BNH   EO5TOLOW             NOPE DO THIS THE OLD WAY       DASD 14220000
         LA    R14,E05UNIT          POINT TO CATALOG AREA          DASD 14230000
         SR    R15,R15              CLEAR REG-15                   DASD 14240000
         IC    R15,JFCBNVOL         INSERT VOLUME COUNT            DASD 14250000
EO5STUFF EQU   *                                                   DASD 14260000
         MVC   0(4,R14),SCTUTYPE    PLUG IN UNIT TYPE              DASD 14270000
         MVC   4(6,R14),BLANKS      CLEAR VOLUME SERIAL            DASD 14280000
* IF DISK, DON'T PUT IN FLSQ NUMBER                         CVC   85196 14290000
         MVC   10(2,R14),=H'0'      ZERO FILE SEQ #         CVC   85196 14300000
         CLI   SCTUTYPE+2,UCB3TAPE TAPE DEVICE ?            CVC   85196 14310000
         BNE   E05DA          NO->                          CVC   85196 14320000
         MVC   10(2,R14),JFCBFLSQ   PLUG IN FILE SEQ #             DASD 14330000
E05DA    LA    R14,12(R14)          POINT TO NEXT AREA             DASD 14340000
         BCT   R15,EO5STUFF         DO THE REST                    DASD 14350000
         XC    0(12,R14),0(R14)     CLEAR NEXT AREA                DASD 14360000
* NOW PLUG IN THE FIRST 5 VOLUMES SERIALS FROM THE JFCB            DASD 14370000
         LA    R15,5                STOP AFTER 5                   DASD 14380000
         LA    R14,E05UNIT          POINT TO CATALOG AREA          DASD 14390000
         LA    R1,JFCBVOLS          POINT TO FIRST 5 VOLUMES       DASD 14400000
E05STJ5  EQU   *                                                   DASD 14410000
         MVC   4(6,R14),0(R1)       MOVE IN VOLSER                 DASD 14420000
         LA    R1,6(R1)             POINT TO NEXT VOLUME           DASD 14430000
         LA    R14,12(R14)          POINT TO NEXT AREA             DASD 14440000
         BCT   R15,E05STJ5          RETURN FOR THE REST            DASD 14450000
         ST    R14,E05START         SAVE THIS GUY FOR LATER        DASD 14460000
         SR    R15,R15              CLEAR REG-15                   DASD 14470000
         IC    R15,JFCBNVOL         INSERT # VOLUMES IN R15        DASD 14480000
         SH    R15,=H'5'            BACKOFF 5                      DASD 14490000
         STH   R15,E05#VOLS         SAVE IT                        DASD 14500000
* NOW READ THE JFCB EXTENSION BLOCK POINTER TO BY JFCBEXAD OF THE JDASD 14510000
         MVC   JFCBETTR,JFCBEXAD    PUT ON A WORD BOUNDARY         DASD 14520000
GJFCBX   GETJOBQ JFCXDECB,JFCBETTR  GET EXTENSION BLOCK            DASD 14530000
         MVC   JFCBETTR,JFCBXTTR    MOVE NEXT GUY TO POINTER       DASD 14540000
         LH    R15,E05#VOLS         GET NUMBER OF VOLS LEFT        DASD 14550000
         LA    R1,15                LETS STOP AFTER 15             DASD 14560000
         L     R14,E05START         START MOVING VOLSERS TO HERE   DASD 14570000
         LA    R2,JFCBXVOL          POINT TO EXTRA VOLSER AREA     DASD 14580000
GJFCBXM  MVC   4(6,R14),0(R2)       MOVE HIM IN                    DASD 14590000
         SH    R15,=H'1'            BACKOFF R15 BY 1               DASD 14600000
         BZ    E05DONE              IF ZERO THATS IT               DASD 14610000
         LA    R14,12(R14)          UP TO NEXT AREA                DASD 14620000
         LA    R2,6(R2)             UP TO NEXT VOLSER IS JFCBX     DASD 14630000
         BCT   R1,GJFCBXM           GO BACK FOR THE REST,          DASD 14640000
         STH   R15,E05#VOLS         SAVE THE # OF VOLS LEFT        DASD 14650000
         ST    R14,E05START         SAVE NEXT AREA ADDRESS         DASD 14660000
         B     GJFCBX               GET THE REST OF THE EXTENSION BDASD 14670000
EO5TOLOW EQU   *                                                   DASD 14680000
* NOW LETS DO THE CATALOG,SHALL WE ?                                    14690000
           XC E05VOLS(E05ETBL-E05VOLS),E05VOLS CLEAR TABLE INITIALLY    14700000
           MVC E05VOLX+(0*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+0  14710000
           MVC E05VOLX+(1*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+6  14720000
           MVC E05VOLX+(2*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+12 14730000
           MVC E05VOLX+(3*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+18 14740000
           MVC E05VOLX+(4*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+24 14750000
           MVC E05UNIT+(0*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE    14760000
           MVC E05UNIT+(1*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE    14770000
           MVC E05UNIT+(2*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE    14780000
           MVC E05UNIT+(3*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE    14790000
           MVC E05UNIT+(4*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE    14800000
* IF DISK, DON'T PUT IN FLSQ NUMBER                         CVC   85196 14810000
           MVC   E05LABEL,=H'0'       ZERO FILE SEQ #       CVC   85196 14820000
           CLI   SCTUTYPE+2,UCB3TAPE TAPE DEVICE ?          CVC   85196 14830000
           BNE   E05DA2         NO->                        CVC   85196 14840000
           MVC E05LABEL,JFCBFLSQ                                        14850000
E05DA2     MVC E05LABEL+(1*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),=H'1'      14860000
           MVC E05LABEL+(2*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),=H'1'      14870000
           MVC E05LABEL+(3*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),=H'1'      14880000
           MVC E05LABEL+(4*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),=H'1'      14890000
           XC E05#VOLS,E05#VOLS                                         14900000
E05DONE EQU   *                                                    DASD 14910000
***** TO SUPPORT RECAT, BLDX (AGAIN)                                    14920000
**SEPT 75                                                               14930000
           MVI   E05CAT,100  CATALOG INDICATORS                         14940000
           MVI   E05CAT+1,0  TURN OFF BLDX ENTRY                        14950000
           MVC E05#VOLS+1(1),JFCBNVOL SHIFT IN NUMBER OF VOLUMES        14960000
           LA R1,DSNAME                                                 14970000
           ST R1,E05CAT+4                                               14980000
           CLI DDMBR+1,C'+'      GENERATION DATASET ?             75311 14990000
           BE  E05NOBLD        YES,DON'T CATALOG WITH BUILD INDEX       15000000
           CLI DDMBR,C'('      GENERATION DATASET ?                     15010000
         BE    E05NOBLD        YES,DON'T CATALOG WITH BUILD INDEX       15020005
         CLI VS,C'2'   MVS                                         DASD 15030000
         BE  E05NOBLD  YEP  MVS WILLNOT RECAT WILL BLDX ON         DASD 15040000
         OI  E05CAT+1,X'40'                                       75128 15050000
E05NOBLD EQU *                                                          15060005
* NOW TEST RE-CATLG FUNCTION                                            15070000
         IFNULL DDLABTYP,E05NALWA                                       15080005
* ALWAYS HERE                                                           15090000
         MVI E05CAT,X'54'  TURN ON RE-CATLG BIT                   75311 15100000
         CATALOG E05CAT                                           75311 15110000
         LTR     R15,R15   DID WE RECATLG IT?                     75311 15120000
         BZ   E05SUCES YES                                        75311 15130000
* NOW RECATLG FAILED, SO ATTEMPT STRAIGHT CATLG THEN              75311 15140000
         MVI   E05CAT,X'64'                                       75311 15150000
E05NALWA EQU   *                                                        15160005
         CATALOG E05CAT                   DO THE CATALOG                15170005
         LTR R15,R15                                                    15180005
         BNZ E05ERR                                                     15190005
E05SUCES EQU *                                                          15200005
* NOW WE MUST CHECK AGAIN FOR GREATER THAN 5 VOLUMES BECAUSE       DASD 15210000
* ALL OF THE VOLUMES MIGHT NOT FIT ON 1 MESSAGE                    DASD 15220000
         LH    R14,E05#VOLS         LOAD VOL COUNT                 DASD 15230000
         XC    E05#VOLS,E05#VOLS    CLEAR VOL COUNT                DASD 15240000
         CH    R14,=H'5'            > 5 VOLUMES                    DASD 15250000
         BNH   E05SUCE2             NO   LETS DOIT THE OLD WAY     DASD 15260000
         SH    R14,=H'5'            SUBTRACT 5                     DASD 15270000
         STH   R14,E05#VOLS         STORE BACK FOR LATER           DASD 15280000
         MVI   DDVOLUME,C' '        MOVE IN JUST THE 1ST FIVE      DASD 15290000
         MVC   DDVOLUME+1(L'DDVOLUME-1),DDVOLUME                   DASD 15300000
         MVC   DDVOLUME(L'JFCBVOLS),JFCBVOLS                       DASD 15310000
         BAL   R14,E00FXVOL         MOVE TO #VOL,VOL EDITTED       DASD 15320000
         L     R15,=A(E05UNIT+60)   POINT TO 6TH VOLSER IN CAMLST  DASD 15330000
         ST    R15,E05START         SAVE FOR LATER                 DASD 15340000
E05SUCE2 EQU     *                                                 DASD 15350000
           JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',                 *15360000
               #DSNAME,''' CATALOGED ON VOL(S) ',#VOL             74365 15370000
          LH    R14,E05#VOLS        LOAD NUMBER OF VOLS LEFT       DASD 15380000
          LTR   R14,R14             ALL DONE                       DASD 15390000
          BZ    E05GOODR            YES SIR LETS GO                DASD 15400000
E05LMSGS EQU     *                                                 DASD 15410000
          L     R15,E05START        POINT TO NEXT AREA             DASD 15420000
          MVI   DDVOLUME,C' '       CLEAR CONSTRUCT AREA           DASD 15430000
          MVC   DDVOLUME+1(L'DDVOLUME-1),DDVOLUME                  DASD 15440000
          LA    R1,DDVOLUME         POINT TO CONSTRUCT AREA        DASD 15450000
          LA    R2,5                LETS STOP AFTER 5              DASD 15460000
E05LMSG   MVC   0(6,R1),4(R15)      MOVE IN NEXT VOLUME SERIAL     DASD 15470000
          LA    R1,6(R1)            BUMP DDVOLUME BY 6             DASD 15480000
          LA    R15,12(R15)         BUMP CAMLST BY 12              DASD 15490000
          SH    R14,=H'1'           BACKOFF VOL COUNT BY 1         DASD 15500000
          BZ    E05LMSGD            IF ALL DONE GET OUT EARLY      DASD 15510000
          BCT   R2,E05LMSG          RETURN FOR THE REST            DASD 15520000
E05LMSGD  EQU    *                                                 DASD 15530000
          STH   R14,E05#VOLS        SAVE # OF VOLS LEFT            DASD 15540000
          ST    R15,E05START        STORE NEXT AREA ADDRESS        DASD 15550000
          BAL   R14,E00FXVOL        MOVE TO #VOL,VOL EDITTED       DASD 15560000
          B     E05SUCE2            GO PRINT THE  MESSAGE          DASD 15570000
E05GOODR EQU     *                                                 DASD 15580000
          JOLRETN                                                       15590000
E05ERR     LR  R2,R15                                                   15600000
           B   E05UNSUC                                                 15610000
           SPACE 3                                                      15620000
E05PRNTE   EQU *                                                        15630000
           B  E05RETNC(R2)                                              15640000
E05RETNC   B   E05SUCES                                                 15650000
           B   E05RET4                                                  15660000
           B   E05RET8                                                  15670000
           B   E05RET12                                                 15680000
           B   E05RET16                                                 15690000
           B   E05RET20                                                 15700000
           B   E05RET24                                                 15710000
           B   E05RET28                                                 15720000
           B   E05RET32                                                 15730000
           B   E05RET36                                                 15740000
E05RET4    JOLERR 203,'CATALOG VOLUME NOT MOUNTED'                      15750000
           B  E05RETN0                                                  15760000
         FIX  'NOTE R0=0 IF C AND ALREADY CATLGD'           FIX-X 76200 15770000
         FIX  'NOTE R0=60 IF U/D AND YSAM'                  FIX-X 76200 15780000
E05RET8    JOLERR 204,'DATA SET NAME FOUND AT LOWER LEVEL'              15790000
           B  E05RETN0                                                  15800000
E05RET12   EQU *                                                        15810000
           JOLERR 205,'CATLG RETN''D 12'                                15820000
           B  E05RETN0                                                  15830000
E05RET16   JOLERR 206,'NO INDEX LEVEL FOR DATA SET'                     15840000
           B  E05RETN0                                                  15850000
E05RET20   JOLERR 407,'CATALOG DATA SET IS FULL'                        15860000
           B  E05RETN0                                                  15870000
E05RET24   JOLERR 208,'INVALID GENERATION NAME'                         15880000
           B  E05RETN0                                                  15890000
E05RET28   JOLERR 409,'PERMANENT I/O ERROR ON CATALOG DATA SET'         15900000
           B  E05RETN0                                                  15910000
E05RET32   JOLERR 210,'KEEP FAILED FOR DATA SET'                        15920000
           B  E05RETN0                                                  15930000
E05RET36   JOLERR 211,'NO VOLUMES WERE SUPPLIED'                        15940000
E05RETN0   JOLRETN                                                      15950000
E05CAT     CAMLST CAT,0,,E05VOLS                                        15960000
          LTORG                                                    DASD 15970000
           DC   S(*),S(*),S(*),S(*)                                DASD 15980000
           DC   S(*),S(*),S(*),S(*)                                DASD 15990000
           DC   S(*),S(*),S(*),S(*)                                DASD 16000000
           DC   S(*),S(*),S(*),S(*)                                DASD 16010000
           DC   S(*),S(*),S(*),S(*)                                DASD 16020000
           DC   S(*),S(*),S(*),S(*)                                DASD 16030000
           DC   S(*),S(*),S(*),S(*)                                DASD 16040000
           DC   S(*),S(*),S(*),S(*)                                DASD 16050000
           DC   S(*),S(*),S(*),S(*)                                DASD 16060000
           DC   S(*),S(*),S(*),S(*)                                DASD 16070000
           DC   S(*),S(*),S(*),S(*)                                DASD 16080000
           DC   S(*),S(*),S(*),S(*)                                DASD 16090000
           DC   S(*),S(*),S(*),S(*)                                DASD 16100000
           DC   S(*),S(*),S(*),S(*)                                DASD 16110000
           DC   S(*),S(*),S(*),S(*)                                DASD 16120000
           DC   S(*),S(*),S(*),S(*)                                DASD 16130000
           DC   S(*),S(*),S(*),S(*)                                DASD 16140000
           DC   S(*),S(*),S(*),S(*)                                DASD 16150000
           DC   S(*),S(*),S(*),S(*)                                DASD 16160000
           DC   S(*),S(*),S(*),S(*)                                DASD 16170000
JFCXDECB  DC       F'0'                                            DASD 16180000
          LA       R1,JFCBXTTR                                     DASD 16190000
          SPACE 3                                                  DASD 16200000
          EYEBALL  JFCX                                            DASD 16210000
          IEFJFCBX                                                 DASD 16220000
JFCBETTR  DC       F'0' JFCB EXTENSION POINTER                     DASD 16230000
E05START  DC       F'0' AREA ADDRESS WORK AREA                     DASD 16240000
          ENTRY E05VOLS                                            DASD 16250000
E05VOLS    DS 0D                                                        16260000
E05#VOLS   DS H                                                         16270000
E05UNIT    DS CL4                                                       16280000
E05VOLX    DS CL6                                                       16290000
E05LABEL   DS CL2                                                       16300000
          DS    254CL12             EXTENDED WORK AREA FOR 255 VOLUDASD 16310000
E05ETBL   EQU   E05VOLS+100                                        DASD 16320000
*RECAT B'0001'                                                          16330000
*CAT   B'0010'                                                          16340000
*UNACT B'00001000'                                                      16350000
*BLD   B'0100'                                                          16360000
*DELETE INDEXES B'00001100'                                             16370000
********* ALL THE ABOVE APPLY TO BYTE 0                                 16380000
*  +2  (3RD) B'00000001'=VSAM                                           16390000
           TITLE 'UJE06UNC:UNCATALOG DATA SET'                          16400000
           JOLSAVE CSECT=UJE06UNC                                       16410000
           LA R1,DSNAME                                                 16420000
           ST R1,E06REMUV+4                                             16430000
           ST  R1,E06REMDT+4   REMOVE INDEXES,TOO                       16440000
****************************************************************   DASD 16450000
* NEW 8-1-77 "UNCATLG GDGALL"   NO JCL NEED   ITS ALL DONE HERE*   DASD 16460000
****************************************************************   DASD 16470000
           CLI DDCATLGS,104    UNCAT GDG ALL ?                     DASD 16480000
           BE  E06GDGAL        GO DO IT                            DASD 16490000
* NEW CODE FOR UNCAT GDGALL AND NOCAT. TEST THE CATALOG TO SEE IF       16500000
*  GDGALL, AND UNCATLOG IT THERE IN A LOOP IF IT IS.                    16510000
* TEST IF GDG-ALL, AND LOOP AROUND SCRATCHING EVERYTHING WE CAN FIND    16520000
           CALL UJE66TST TEST GDGALL, AND SCRATCH THE LOT               16530000
           LTR  R15,R15         WAS IT GDG- ALL?                        16540000
           BZ   E06RETN                                                 16550000
           CLI DDMBR,C'+'      GDG ?                                    16560000
           BE  E06NODLT        YES,DON'T DELETE INDEX                   16570000
           CLI DDMBR,C'('      GDG ?                                    16580000
           BE  E06NODLT        YES,DON'T DELETE INDEX                   16590000
           CATALOG E06REMDT    DO THE UNCATALOG AND REMOVE INDEXES      16600000
           LTR R15,R15         ERROR ?                                  16610000
           BNZ E06FAIL         YES,PRINT ERROR MESSAGES                 16620000
           B   E06SUCES                                                 16630000
E06NODLT   EQU *                                                        16640000
          CATALOG E06REMUV                                              16650000
          LTR R15,R15                                                   16660000
          BNZ E06FAIL                                                   16670000
E06SUCES   EQU *                                                        16680000
           JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',                 *16690000
               #DSNAME,''' UNCATALOGED'                                 16700000
          JOLRETN                                                       16710000
E06FAIL   EQU *                                                         16720000
           LR  R2,R15          SAVE UNCATLG RETURN CODE                 16730000
           JOLERR 202,                                                 *16740000
               'UNCATLG FOR DSID ''',DDDSID,                           *16750000
               ''' NAME ''',#DSNAME,''' FAILED BECAUSE:-'               16760000
           CALL UJE05CAT       LET IT PRINT WHY                         16770000
E06RETN    JOLRETN   RC=0                                          DASD 16780000
E06GDGAL L     R15,=V(E05VOLS)         LOAD CAMLIST ADDRESS        DASD 16790000
         ST    R15,E06LOCAT+12         POINT TO LOCATE AREA        DASD 16800000
         MVC   #DSNAME(2),=H'44'       SET DSNAME TO THE BIGGIE    DASD 16810000
         LA    R6,300(R15)             GO UP A FEW AND SAVE POINTERDASD 16820000
         LA    R1,DSNAME               POINT TO DSNAME             DASD 16830000
         LA    R15,43(R1)              POINT TO END OF DSNAME      DASD 16840000
         LA    R14,1                   INCR BY 1                   DASD 16850000
E06FIND  CLI   0(R1),C' '              END OF DSNAME YET           DASD 16860000
         BE    *+8                     YEP LETS MOVE               DASD 16870000
         BXLE  R1,R14,E06FIND          RETURN                      DASD 16880000
         MVC   0(3,R1),=C'(0)'         LOOK FOR RELATIVE GDG 0     DASD 16890000
         MVC   0(44,R6),DSNAME         MOVE TO LOCATE AREA         DASD 16900000
E06LOOK  MVC   DSNAME,0(R6)            MOVE DSNAME IN              DASD 16910000
         LOCATE E06LOCAT                                           DASD 16920000
         LTR   R15,R15                 DID LOCATE FIND ANYTHING ?? DASD 16930000
         BNZ   E06RETN                 NOPE THAT ALL               DASD 16940000
         FIX   'CHECK CATALOG VOLUME BEFORE SCRATCHING'           84150 16950000
         CATALOG E06REMUV                                          DASD 16960000
         LTR   R15,R15                 DID THIS WORK OK            DASD 16970000
         BNZ   E06RETN                 NOPE SOMETHINGS WRONG       DASD 16980000
         JOLERR 103,'DSID ''',DDDSID,''' DSNAME ''',                   *16990000
               #DSNAME,''' GDGALL UNCATALOGED'                     DASD 17000000
         B     E06LOOK                 RETURN TO LOOK FOR MORE GDGADASD 17010000
E06LOCAT CAMLST NAME,DSNAME,,0                                     DASD 17020000
E06REMUV   CAMLST UNCAT,0                                               17030000
E06REMDT   CAMLST UCATDX,0     UNCATLG,REMOVE INDEXES                   17040000
           DC   S(*),S(*),S(*),S(*)                                     17050000
           DC   S(*),S(*),S(*),S(*)                                     17060000
           DC   S(*),S(*),S(*),S(*)                                     17070000
           DC   S(*),S(*),S(*),S(*)                                     17080000
           DC   S(*),S(*),S(*),S(*)                                     17090000
           DC   S(*),S(*),S(*),S(*)                                     17100000
           DC   S(*),S(*),S(*),S(*)                                     17110000
           DC   S(*),S(*),S(*),S(*)                                     17120000
           DC   S(*),S(*),S(*),S(*)                                     17130000
           DC   S(*),S(*),S(*),S(*)                                     17140000
           DC   S(*),S(*),S(*),S(*)                                     17150000
           DC   S(*),S(*),S(*),S(*)                                     17160000
           DC   S(*),S(*),S(*),S(*)                                     17170000
           DC   S(*),S(*),S(*),S(*)                                     17180000
           DC   S(*),S(*),S(*),S(*)                                     17190000
           DC   S(*),S(*),S(*),S(*)                                     17200000
           DC   S(*),S(*),S(*),S(*)                                     17210000
           DC   S(*),S(*),S(*),S(*)                                     17220000
           DC   S(*),S(*),S(*),S(*)                                     17230000
           DC   S(*),S(*),S(*),S(*)                                     17240000
           TITLE 'UJE07KEE:KEEP DATA SET'                               17250000
           JOLSAVE CSECT=UJE07KEE                                       17260000
* A KEEP INSTRUCTION IS TO BE EXECUTED.                                 17270000
* THE KEEP IS A PRETTY EASY INSTRUCTION TO DO,AS IT BASICALLY           17280000
*    MEANS THAT THE PDQ MUST BE FOOLED INTO THINKING THAT THE           17290000
*    DATA SET WAS ORIGINALLY OLD.                                       17300000
* THE ONLY COMPLICATION THAT CAN ARISE IS THAT WE WOULD (ON OCCASIONS)  17310000
*    LIKE THE VOLUME TO BE UNLOADED(OR SET INTO AN UN-LOADABLE          17320000
*    STATUS                                                             17330000
* PERMANENT,RETAINED,'JOL PREFERRED' ETC VOLUMES DO NOT HAVE TO         17340000
*    HAVE THEIR STATUS SET SO THEY MAY BE UNLOADED AND THIS IS          17350000
*    LEFT TO THE OPERATORS DISCRETION.                                  17360000
* IF IT IS A TAPE OR A NON-PREFERRED,(PRIVATE IN OTHER WORDS)           17370000
*    VOLUME AND IT IS NOT RETAINED,IT SHOULD BE DISMOUNTED.             17380000
          CLC DDDSNAME,=C'*DUMMY  '                                     17390000
          BNE  E07NOTDM                           74365                 17400000
          JOLERR 206,'DSID ''',DDDSID,''' DSNAME ''',#DSN,             *17410000
               ''' NOT KEPT:- DUMMY DATA SET'                    75003  17420000
          JOLRETN RC=16                                                 17430000
E07NOTDM   EQU *                                                        17440000
           CALL UJE81PDQ                                                17450000
           LTR R15,R15                                                  17460000
           BZ  E07INPDQ                                                 17470000
           CLI ICOMMAND,C'K'   KEEP ?                                   17480000
           BE  E07ERR1         YES,FLAG IT AS AN ERROR THEN             17490000
           CLC =C'*.',DDVOLUME VOLUME REFERENCE SPECIFIED,BUT DATA SET  17500000
* NOT CREATED ? THIS CAN OCCUR IF THE CREATING STEP WAS BYPASSED        17510000
           BE  E07ERR1         GO FLAG AS AN ERROR                      17520000
           CLI DDVOLUME,C' '   VOL SPECIFIED ?                          17530000
           BE  E07RETNF        NO,SO ERROR                              17540000
           CLI DDUNITYP,C' '   UNIT SPECIFIED ?                         17550000
           BE  E07RETNF        NO,ERROR TOO                             17560000
* WELL A UNIT AND VOLUME WERE SPECIFIED,SO WE SHALL CONVERT             17570000
*     THE UNIT TO AN IBM TYPE OF NAME AND GENTLY RETURN                 17580000
* (THE USER CODED 'CATLG DSN X UNIT Y VOL Z')                           17590000
          SPACE                                                         17600000
E07FIXU    EQU  *                                                       17610000
           NI DDUNITYP,B'10011111' TURN OFF PERM BIT                    17620000
* SPECIAL CODE FOR MVS                                            76200 17630000
         CLI   VS,C' '  IS IT A VS SYSTEM OF ANY SORT?            76200 17640000
         BE    E07NVS9                                             DASD 17650000
* OK, SPECIAL FOR VS AND 3330-1                                   76200 17660000
         CLC   =C'3330-1',DDUNIT                                  76200 17670000
         BNE   E07NVS9                                            76200 17680000
         LA    R1,MVS3330                                         76200 17690000
         B     E07GOTU                                            76200 17700000
         SPACE 2                                                  76200 17710000
E07NVS9  EQU   *                                                  76200 17720005
         L    R1,HEXUNITS                                               17730005
         LM   R14,R15,HEXUNITS+4                                        17740005
E07FINDU CLC DDUNITYP,4(R1)                                             17750005
         BE    E07GOTU                                                  17760005
         BXLE R1,R14,E07FINDU                                           17770005
         CALL    UJEDEVNM  WELL HOW ABOUT THE DEVICE NAME TABLE    DASD 17780005
         LTR     R15,R15                                           DASD 17790005
         BZ      E07GOTU+6  GREAT                                  DASD 17800005
         JOLERR 403,'INVALID UNIT FOUND IN KEEP'                        17810005
         B     E07RETNF                                                 17820005
E07GOTU  MVC SCTUTYPE,0(R1)                                             17830005
* SET UP NUMBER NUMBER OF VOLUMES IN JFCB,AND VOLUMES                   17840000
         MVC JFCBVOLS,DDVOLUME                                          17850005
         MVI JFCBNVOL,1                                                 17860005
         CLI DDVOLUME+06,C' '                                           17870005
         BE E07RETN0                                                    17880005
         MVI JFCBNVOL,2                                                 17890005
         CLI DDVOLUME+12,C' '                                           17900005
         BE E07RETN0                                                    17910005
         MVI JFCBNVOL,3                                                 17920005
         CLI DDVOLUME+18,C' '                                           17930005
         BE E07RETN0                                                    17940005
         MVI JFCBNVOL,4                                                 17950005
         CLI DDVOLUME+24,C' '                                           17960005
         BE E07RETN0                                                    17970005
         MVI JFCBNVOL,5                                                 17980005
         B    E07RETN0                                                  17990005
E07ERR1  EQU    *                                                       18000005
         JOLERR 204,'DSID ''',DDDSID,''' DSNAME ''',#DSN,              *18010005
               '''',                                                   *18020000
               ' NOT YET CREATED:-KEEP IGNORED'                         18030000
E07RETNF EQU    *                                                       18040005
         JOLRETN RC=16                                                  18050005
         SPACE 3                                                        18060005
E07INPDQ EQU *                                                          18070005
* NOW JUST BECAUSE THE NAME APPEARS IN THE PDQ DOESN'T MEAN FOR         18080000
*  1 SECOND THAT IT HASN'T :-                                           18090005
*        1.    BEEN SCRATCHED                                           18100005
*        2.    BEEN ALREADY KEPT                                        18110005
         LH    R1,PDQDSNNO     1ST,2ND OR 3RD NAME IN PDQ ?             18120005
         CLI VS,C'2'     IS IT AN MVS SYSTEM?                           18130005
         BNE E07NMV1S  NO                                          DASD 18140005
* OK, MVS HAS DIFFERENT TYPE OF PASSED DATA SET Q                       18150000
         MH  R1,=AL2(PDILEN)                                            18160000
         LA R14,PDITERM1(R1)                                            18170005
         B  E07NMVS1                                                    18180005
E07NMV1S MH    R1,=AL2(PDQBLKLN)                                   DASD 18190005
         LA    R14,PDQTERM(R1)                                          18200005
E07NMVS1 EQU       *                                                    18210005
         TM    0(R14),X'C0'    OLD,DELETE ?                             18220005
         B     *+8             ****************                         18230005
         BO    E07DELET                                                 18240005
         SPACE 3                                                        18250005
*** LAST BYTE OF JFCB TTR =0 IN SIOT                                    18260000
         GETJOBQ JFCBDECB,SCTPJFCB    GET THE JFCB                      18270005
         CLI JFCBVOLS,X'FF'    UNOPENED SCRATCH VOLUME ?                18280005
         BNE E07NOTFF          GO WRITE BACK JFCB,SIOT                  18290005
         JOLERR 205,'DSID ''',DDDSID,''' DSNAME ''',#DSNAME,           *18300005
               ''' NOT KEPT:UNOPENED SCRATCH VOLUME'                    18310000
         B     E07RETNF                                                 18320005
E07NOTFF EQU *                                                          18330005
         NI JFCBIND2,B'00011111' TELL OS AN OLD DATA SET            J60 18340006
         OI JFCBIND2,B'01000000'                                        18350005
         PUTJOBQ JFCBDECB                                               18360005
         MVC CALLAREA,SIOT                                              18370005
         MVI CALLAREA+3,0                                               18380005
         GETJOBQ SIOTDECB,CALLAREA                                      18390005
*                                                           FIX-X 76200 18400000
* THE NEXT FEW LINES ARE NEW IN 3.1 AND ARE CODED IN        FIX-X 76200 18410000
*  THE HOPE THAT WE CAN HAVE THE OPERATING SYSTEM UNLOAD    FIX-X 76200 18420000
*  THE VOLUME FOR US AT STEP TERM.                          FIX-X 76200 18430000
* IN ADDITION, THE DSNAME SHOULD BE TAKEN OFF THE PASSED    FIX-X 76200 18440000
*  DATA SET QUEUE. CURRENTLY, AT JOB TERMINATION, A NUMBER  FIX-X 76200 18450000
*  OF UNNECESSARY MESSAGES ARE DISPLAYED INDICATING THAT    FIX-X 76200 18460000
*  DATA SETS HAVE BEEN KEPT. THESE SHOULD NO LONGER OCCUR.  FIX-X 76200 18470000
*                                                           FIX-X 76200 18480000
*                                                           FIX-X 76200 18490000
         CLI   DDDISP+1,C'L'  LAST USE OF DATA SET ?        FIX-X 76200 18500000
*                             IF WE CAN LET OS UNLOAD ?     FIX-X 76200 18510000
         BNE   E07NLAST       NOT LAST USE                  FIX-X 76200 18520000
* MARK SIOT AND LET IT THINK WE HAVE FINISHED WITH          FIX-X 76200 18530000
*  THE DATASET (WHICH WE HAVE, OF COURSE).                  FIX-X 76200 18540000
*        NI    SCTSDISP,X'FF'-SIOTRETN-S3400DSP-PRIVATE     FIX-X 76200 18550006
         NI    SCTSDISP,B'11100000'                                 j60 18551006
         OI    SCTSDISP,8     TURN KEEP ON                  FIX-X 76200 18560000
         OI    SCTSBYT2,SCTRECVD MARK RECIEVED              FIX-X 76200 18570000
         B     E07MAKOL       MAKE IT OLD, RE-WRITE SIOT    FIX-X 76200 18580000
E07NLAST EQU   *                                            FIX-X 76200 18590000
         OI    SCTSDISP,B'00001000'   SIOT = KEEP                       18600000
E07MAKOL OI    SCTSBYT4,1     MARK OLD                      FIX-X 76200 18610000
         PUTJOBQ SIOTDECB                                               18620000
         SPACE 3                                                        18630000
         MVC   DDVOLUME,JFCBVOLS                                        18640000
         BAL   R14,E00FXVOL    SET UP VOLUME(S) IN #VOL           74365 18650000
* NOW TO MARK THE PDQ                                                   18660000
* TEST IF MVS, DIFFERENT...                                             18670000
* MVS SIOT CONTAINS THE UCB POINTER, MVT THE PDG DOES                   18680000
* MVS/XA USES A 3 BYTE ADDRESS UCB FIELD, JUST TO CONFUSE THINGS MORE!  18690000
         CLI   VS,C'2'       MVS?                                       18700000
         BNE   E07NMVS2      NOPE ->                                    18710000
* CHECK IF XA, IF SO GET UCB ADDRESS FROM OFFSET 'B9', NOT SCTUTYPE     18720000
         L     R14,16        GET CVT ADDRESS POINTER                    18730000
*        L     R14,0(R14)    GET CVT ADDRESS                            18740005
         TM    116(R14),X'80' XA?                                       18750000
         BNO   E07NXA        NO -> OUT                                  18760000
         MVI   CALLAREA,0                                               18770000
         MVC   CALLAREA+1(3),SIOT+X'B9'                                 18780000
         L     R14,CALLAREA                                             18790000
         B     E07TUNIT                                                 18800000
E07NXA   LH    R14,SCTUTYPE                                             18810000
         B     E07TUNIT                                                 18820000
E07NMVS2 EQU   *                                                        18830000
         MVC   CALLAREA,PDQABLK                                         18840000
         MVI   CALLAREA+3,0                                             18850000
         GETJOBQ PDQDECB,CALLAREA                                       18860000
         LH    R1,PDQDSNNO                                              18870000
         MH    R1,=AL2(PDQBLKLN)                                        18880000
         L     R14,PDQUCBS(R1) GET UCB POINTER FOR DEVICE TYPE    74365 18890000
         MVC   SCTUTYPE,16(R14) MOVE IN UCB DEVICE TYPE                 18900000
E07TUNIT EQU   *                                                        18910000
*                                                                       18920000
* THIS FIXES A PROBLEM WHEN A TAPE IS WRITTEN ON A DUAL     FIX-X 76200 18930000
*  DENSITY DRIVE, AND A CATALOG IS PERFORMED.               FIX-X 76200 18940000
* WE SHALL (AS OS DOES), MAKE THE UNIT IN THE CATALOG ONE   FIX-X 76200 18950000
*  WHICH WILL ALLOW THE TAPE TO BE MOUNTED ON A NON-DUAL    FIX-X 76200 18960000
*  DENSITY DRIVE IF THE TAPE WAS WRITTEN IF HIGH DENSITY    FIX-X 76200 18970000
*  MODE.                                                    FIX-X 76200 18980000
         CLI   SCTUTYPE+2,UCB3TAPE TAPE DEVICE ?            FIX-X 76200 18990000
         BNE   E07DA          NO->                          FIX-X 76200 19000000
* TAPE DEVICE HERE.                                         FIX-X 76200 19010000
         TM    SCTUTYPE+1,UCBDUDN1+UCBDUDN2 DUAL DENSITY?   FIX-X 76200 19020000
         BZ    E07UOK         UNIT IS OK, LEAVE IT.         FIX-X 76200 19030000
* THE UCB THAT THE DATA SET IS ON IS A DUAL DENSITY UCB,    FIX-X 76200 19040000
*  BUT NOW WE MUST CHECK THE DENSITY OF THE DATA SET.       FIX-X 76200 19050000
*                                                                       19060000
*  FOR 800 BPI, WE WANT TO SET UP UNIT AS 34,20,80,XX                   19070000
*  FOR 1600 BPI, WE WANT TO SET UP UNIT AS 34,21,80,XX                  19080000
*  FOR 6250 BPI, WE WANT TO SET UP UNIT AS 32,00,80,XX                  19090000
         CLI   JFCDEN,JFC800  IS IT 800 BPI ?               CVC   81220 19100000
         BNE   E07T1600       TEST IF 1600 BPI.             CVC   81220 19110000
         MVC   SCTUTYPE(2),=X'3420'     SET 800 BPI NOW     CVC   81220 19120000
         B     E07UOK                                       CVC   81220 19130000
         SPACE 2                                                        19140000
E07T1600 CLI   JFCDEN,JFC1600 IS IT 1600 BPI ?              CVC   81220 19150000
         BNE   E07T6250       TEST IF 6250 BPI.             CVC   81220 19160000
         MVC   SCTUTYPE(2),=X'3210'   SET 1600 BPI NOW      CVC   81220 19170000
         B     E07UOK                                       CVC   81220 19180000
         SPACE 2                                                        19190000
E07T6250 CLI   JFCDEN,JFC6250 IS IT 6250 BPI ?              CVC   81220 19200000
         BNE   E07UOK         LEAVE IT, DON'T KNOW WHAT IT ISVC   81220 19210000
         MVC   SCTUTYPE(2),=X'3200'   SET 6250 BPI NOW      CVC   81220 19220000
         B     E07UOK                                       CVC   81220 19230000
         SPACE 2                                                        19240000
E07DA    NI    SCTUTYPE+1,X'FF'-UCBRR TURN OFF 'SHARE'      FIX-X 76200 19250000
         SPACE 2                                                        19260000
E07UOK   EQU   *                                                        19270000
         FIX 'FOR 7 TRACK TAPE NEXT LINE'                         82300 19280000
         NI    SCTUTYPE+1,X'FF'-X'80' (UCBOPT0)  TURN OFF HIGH BIT82300 19290000
         CLI  VS,C'2'  MVS AGAIN?                                       19300000
         BNE   E07NMVS3                                                 19310000
         LH    R1,PDQDSNNO                                              19320000
         MH    R1,=AL2(PDILEN)                                          19330000
         LA    R14,PDITERM1(R1)                                         19340000
         B     E07MARK9                                                 19350000
E07NMVS3 EQU   *                                                        19360000
         LA    R14,PDQTERM(R1)                                          19370000
E07MARK9 EQU   *                                                        19380000
         NI    0(R14),X'0F'     TURN OFF TOP 4 BITS                     19390000
         CLI   DDDISP+1,C'L'   LAST USE,IE OLD,KEEP ?                   19400000
         BNE   E07PASS                                                  19410000
         OI    0(R14),B'01000000' OLD,KEEP                              19420000
         NI    0(R14),B'11000000'  INDICATE RECIEVED        FIX-X 76200 19430000
         MVI   0(R14),B'00000000'  INDICATE RECIEVED               j60  19431007
         B     E07MARKD                                                 19440000
E07PASS  OI    0(R14),B'11100000' OLD,PASS                              19450000
         MVI   0(R14),B'00000000'  INDICATE RECIEVED               j60  19451008
E07MARKD EQU   *                                                        19460000
         CLI   VS,C'2'    MVS AGAIN?????                                19470000
         B     E07NMVS4  ****  WAS BE ** ERR ** CVC BYPASS        85197 19480000
         SH    R14,=H'44'         BACKUP TO DSNAME              DASD    19490000
         MVI   0(R14),C' '        WIPE OUT THE NAME IN PDQ      DASD    19500000
E07NMVS4 EQU  *                                                         19510000
         PUTJOBQ  PDQDECB2                                              19520000
         B     E07RETN0                                                 19530000
         PUTJOBQ PDQDECB                                                19540000
         SPACE 3                                                        19550000
E07RETN0 EQU *                                                          19560000
         CLI ICOMMAND,C'K'     IS THIS A KEEP INSTRUCTION?        74365 19570000
         BNE E07RETNO W        NO,SO NO MESSAGE,JUST RETURN       74365 19580000
         JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,              *19590005
               ''' KEPT ON VOL(S) ',#VOL                          74365 19600000
E07RETNO TM     JFCDSRG1,JFCORGIS  IS THIS A ISAM FILE             DASD 19610005
         BNO    E07RTN        NOPE LETS LEAVE      FIX CVC JUL 17, 85   19620005
         $CALL UJEISPDQ    GO SAVE THE DUPLICATE PDQ DSNS          DASD 19630005
E07RTN   JOLRETN RC=0                                              DASD 19640005
* E07RETNO   JOLRETN RC=0                                          DASD 19650000
         SPACE 3                                                        19660005
**** THESE NEXT FEW INSTRUCTIONS NEVER GET EXECUTED ********            19670000
E07TRETN EQU *                                                          19680005
* TEST NOW IF'RETAIN' AND IF NOT,STEP ON TO UNLOAD THE VOLUME.          19690000
         CLI DDDISP+1,C'P'                                              19700005
         BE    E07MARK                                                  19710005
*        CLI DDRETAIN,C' '                                              19720005
         B    E07MARK   ********************************                19730005
         BE    E07LETOS                                                 19740005
E07MARK  DC H'0'               ABEND IF IT GETS HERE                    19750005
         B     E07MARK                                                  19760005
E07LETOS EQU *                                                          19770005
         JOLRETN RC=4                                                   19780005
         SPACE 3                                                        19790005
E07DELET EQU    *                                                       19800005
         JOLERR 202,'DSID ''',DDDSID,''' DSNAME ',                     *19810005
               ''' PREVIOUSLY DELETED :- KEEP IGNORED'                  19820000
           JOLRETN RC=16                                                19830000
           DC S(*),S(*),S(*),S(*)                                       19840000
           DC S(*),S(*),S(*),S(*)                                       19850000
           DC S(*),S(*),S(*),S(*)                                       19860000
           DC S(*),S(*),S(*),S(*)                                       19870000
           DC S(*),S(*),S(*),S(*)                                       19880000
           DC S(*),S(*),S(*),S(*)                                       19890000
           DC S(*),S(*),S(*),S(*)                                       19900000
           DC S(*),S(*),S(*),S(*)                                       19910000
           DC S(*),S(*),S(*),S(*)                                       19920000
           DC S(*),S(*),S(*),S(*)                                       19930000
           DC S(*),S(*),S(*),S(*)                                       19940000
           DC S(*),S(*),S(*),S(*)                                       19950000
           DC S(*),S(*),S(*),S(*)                                       19960000
           DC S(*),S(*),S(*),S(*)                                       19970000
           DC S(*),S(*),S(*),S(*)                                       19980000
           DC S(*),S(*),S(*),S(*)                                       19990000
           DC S(*),S(*),S(*),S(*)                                       20000000
           DC S(*),S(*),S(*),S(*)                                       20010000
           DC S(*),S(*),S(*),S(*)                                       20020000
           TITLE 'UJE08SCR:SCRATCH DATA SET'                            20030000
           JOLSAVE CSECT=UJE08SCR                                       20040000
* SCRATCH INSTRUCTION IS TO BE EXECUTED.                                20050000
*    NOW IF IT IS A DISC,WE ISSUE A SCRATCH.                            20060000
*          IF THE VOLUME IS NOT MOUNTED,WE GO AND FIND THE STEP         20070000
*          WHICH WE WANT TO EXECUTE (IT HAS A DD-CARD WHICH MOUNTS      20080000
*          THE VOLUME).                                                 20090000
           SPACE                                                        20100000
*    IF IT IS A TAPE,AND IT CAN BE FREED NOW (NOT RETAINED)             20110000
*          IT MUST BE GIVEN A DISPOSITION OF DELETE                     20120000
*          THIS MUST BE DONE BY JCL AT THE MOMENT                       20130000
*    IF IT IS RETAINED,THE PDQ IS MARKED DELETE,UNLESS WE HAVE          20140000
*          TIOT ENTRY,IN WHICH CASE IT IS MARKED DELETE,AND OS WILL     20150000
*          PROBABLY REMOVE THE VOLUME.                                  20160000
*    IF IT IS NOT RETAINED,WE MUST STEP DOWN TO THE CORRECT             20170000
*          STEP AND HAVE IT REMOVED FROM THE SYSTEM FOR US.             20180000
           SPACE 3                                                      20190000
* PUT INTO LOGICAL TERMS,THE CODE COES LIKE THIS:-                      20200000
*                                                                       20210000
*          IF INPDQ                                                     20220000
*          THEN DO;                                                     20230000
* ERROR2:      IF ^STILL_IN_PDQ,ERROR AND RETURN; /*ALREADY GONE*/      20240000
*              IF ALLOCATED_TO_THIS_STEP                                20250000
*              THEN DO;                                                 20260000
*                  TURN ON DELETE_BITS IN SIOT;                         20270000
*                  REWRITE SIOT;                                        20280000
*                  RETURN;                                              20290000
*              END;                                                     20300000
*              GO TO E08_NOT_IN_THIS_STEP_MAYBE;                        20310000
*          END;                                                         20320000
*  /* NOT IN PDQ */                                                     20330000
*                                                                       20340000
*          IF VOL & UNIT ^=''                                           20350000
*          THEN DO;                                                     20360000
*              SET UP DSNAME,VOL,UNIT;                                  20370000
*              GO TO E08_NOT_IN_THIS_STEP_MAYBE;                        20380000
*          END;                                                         20390000
*          GO TO ERROR2;                                                20400000
* NOT_HERE?:                                                            20410000
*                                                                       20420000
*                                                                       20430000
*          IF IS MAG TAPE THEN GO TO E08MAGTP                           20440000
* /* DISC HERE */                                                       20450000
*          SCRATCH;                                                     20460000
*          VOL_NOT_MOUNTED,GO TO LETOS;                                 20470000
*          RETURN;                                                      20480000
* LETOS:   SET UP STEP NAME TO SKIP TO FOR OS STEP                      20490000
*          RETURN(4);                                                   20500000
* E08MAGTP:                                                             20510000
*          MARK DELETE; /* IF OLD,MARK NEW,DELETE*/                     20520000
*          IF VOLUME TO BE RETAINED                                     20530000
*          THEN RETURN;                                                 20540000
*          GO TO LETOS;        /*UNLESS IN THIS STEP*/                  20550000
*                                                                       20560000
*                                                                       20570000
* THE SITUATION THEN BASICALLY MEANS THAT IF A SCRATCH IS ISSUED        20580000
*    FOR A DISC,AND THE DISC/IS NOT MOUNTED,A NEW OS STEP OCCURRS       20590000
*                                                                       20600000
* IF A TAPE IS TO BE SCRATCHED,AND IT CAN BE UNLOADED (IE OTHER         20610000
*    DATA SETS ARE STILL BEING USED ON IT) NO REAL ACTION OCCURRS       20620000
*    BUT IF IT CAN BE UNLOADED A NEW OS STEP IS INITIATED.              20630000
********** UNTIL I CAN FOOL OS ***********                              20640000
           SPACE 3                                                      20650000
* NOW IF THE NAME IS A TEMPORARY DSNAME,WE MUST FIDDLE AROUND UNTIL WE  20660000
*    HAVE THE PART OF THE NAME THAT OS PUT IN FRONT OF OURS,AND PUT     20670000
*    OURS AT THE BACK. THIS THEN GIVES US A REAL DSNAME WHICH SHOULD    20680000
*    BE IN THE PASSED DATA SET QUEUE.                                   20690000
*                                                        JOL30112 76200 20700000
* DELETE GDGALL PROCESSING IS HANDLED BY OS.             JOL30112 76200 20710000
* IF THE CATLG INDICATOR HAS 104,IT MEANS THAT THE       JOL30112 76200 20720000
* COMPILER FOUND GDGALL. ALL WE HAVE TO DO IS            JOL30112 76200 20730000
* RETURN A 4, AND THAT WILL EXECUTE THE SCRATCH STEP     JOL30112 76200 20740000
*                                                        JOL30112 76200 20750000
         CLI   DDCATLGS,104   GDGALL ?                   JOL30112 76200 20760000
         BNE   E08TTEMP       NO,TEST TEMPORARY THEN     JOL30112 76200 20770000
           JOLERR 112,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *20780000
               ''' IS GDGALL, THE OPERATING SYSTEM WILL DELETE IT'      20790000
         JOLRETN RC=4                                    JOL30112 76200 20800000
E08TTEMP CLI   DDDSNAME,C'&&' TEMPORARY ?                JOL30112 76200 20810000
           BNE E08NTEMP        NO,SO FORGET THIS BIT OF PROCESSING      20820000
*                                                        JOL30116 76200 20830000
* NOW READ THE JFCB OF THE $$INST FILE AND               JOL30116 76200 20840000
* FIND OUT WHAT DSN HAS BEEN GIVEN TO                    JOL30116 76200 20850000
* TEMPORARY DATA SETS                                    JOL30116 76200 20860000
*                                                        JOL30116 76200 20870000
         RDJFCB TEMPDCB       GET DSNAME                 JOL30116 76200 20880000
* NOW FIND LAST DOT,AND SHIFT IN OUR TEMP NAME (&&WORK000I FOR EXAMPLE) 20890000
         LA    R15,JFCBDSNM+43 GET END OF DSNAME         JOL30116 76200 20900000
E08FSTOP   CLI 0(R15),C'.'     GOT THE LAST '.' ?                       20910000
           BE  E08GOTST        YES                                      20920000
           BCT R15,E08FSTOP    FIND STOP LOOP                           20930000
           JOLERR 508,'INTERNAL ERROR:NO ''.'' IN TEMP DSN'             20940000
           SPACE                                                        20950000
E08GOTST CLI   DDDSNAME+1,C'&&' DOUBLE & CODED ?         JOL30116 76200 20960000
         BNE   E08ONEA                                   JOL30116 76200 20970000
         MVC   DDDSNAME+1(8),DDDSNAME+2 DROP 2ND         JOL30116 76200 20980000
E08ONEA  MVC   1(8,R15),DDDSNAME+1 SET UP REAL DSNAME    JOL30116 76200 20990000
         MVC   DDDSNAME,JFCBDSNM   SHIFT BACK            JOL30116 76200 21000000
E08NTEMP   EQU *                                                        21010000
           CALL UJE81PDQ       SEE IF NAME IN PDQ                       21020000
*                              NOTE,IT ALSO READS IN SIOT AND JFCB      21030000
           LTR R15,R15                                                  21040000
           BNZ E08NOTHR        NOT IN PDQ                               21050000
* NOW IT WAS IN THE PDQ HERE.                                           21060000
* A QUICK CHECK TO SEE IF IT HAS ALREADY BEEN DELETED                   21070000
*************** FAILURE HERE,JUST ATTEMPT TO SCRATCH                    21080000
         LH    R1,PDQDSNNO     1ST,2ND,3RD DSNAME IN PDQ ?              21090005
         CLI   VS,C'2'   MVS???                                         21100005
         BNE   E08NMVS1                                                 21110005
         MH    R1,=AL2(PDILEN)                                          21120005
         LA    R14,PDITERM1(R1)                                         21130005
         B     E08TDEL                                                  21140005
E08NMVS1 EQU *                                                          21150005
         MH    R1,=Y(PDQBLKLN)                                          21160005
         LA    R14,PDQTERM(R1)                                          21170005
E08TDEL  DS    0H                                                       21180005
         TM    0(R14),X'C0'    HAS IT BEEN (OLD,DELETED) ?              21190005
         B     E08TSTP                                                  21200005
         BO    E08ERR2            ALREADY GONE MY FRIEND                21210005
* OK,IT IS STILL PASSED SUCCESSFULLY APPARENTLY                         21220000
*  HOWEVER,NOW WE MUST SEE IF THE DATA SET IS BEING USED BY             21230005
*  THIS STEP,IF SO,MERELY MARK THE SIOT DELETE AND THAT'S THAT          21240005
E08TSTP  EQU    *                                                       21250005
         CLI   VS,C'2'                                                  21260005
         BNE   E08MARKD                                                 21270000
         LA    R14,PDQCSTEP(R1) CURRENT STEP NUMBER ADDRESS IN PDQ      21280005
         CLC 0(1,R14),JCTSNUMB CURRENT STEPS EQUAL                      21290005
         BNE E08RJFCB          READ THE JFCB                            21300005
* NOW MARK THE SIOT TO DELETE AND OUTPUT A MESSAGE SAYING               21310000
*  WILL BE SCRATCHED.                                                   21320005
E08MARKD EQU    *                                                       21330005
         MVC CALLAREA,SIOT                                              21340005
         MVI CALLAREA+3,0                                               21350005
         GETJOBQ SIOTDECB,CALLAREA                                      21360005
         OI    SCTSDISP,B'00000100' TURN ON DELETE BIT                  21370005
         OI    SIOTALTD,B'00000100' TURN ON DELETE BIT IN CONDITION     21380005
*                                 DISPOSITION PROCESSING                21390005
         PUTJOBQ SIOTDECB                                               21400005
E08RJFCB DS 0H                                                          21410005
E08TEST  EQU    *                                                       21420005
         GETJOBQ JFCBDECB,SCTPJFCB GET CORRESPONDING JFCB               21430005
         LH    R1,PDQDSNNO     DATA SET NUMBER IN PDQ                   21440005
         MH    R1,=AL2(PDQBLKLN)                                        21450005
         L     R14,PDQUCBS(R1) GET UCB ADDRESS FOR DEVICE TYPE    74365 21460005
         CLI     VS,C'2'   MVS AGAIN??                                  21470005
         BNE    E08NMVS2                                                21480005
* CHECK IF XA, IF SO GET UCB ADDRESS FROM OFFSET 'B9', NOT SCTUTYPE     21490000
         L     R14,16        GET CVT ADDRESS POINTER                    21500000
*        L     R14,0(R14)    GET CVT ADDRESS                            21510005
         TM    116(R14),X'80' XA?                                       21520000
         BNO   E08NXA        NO -> OUT                                  21530000
         MVI   CALLAREA,0                                               21540000
         MVC   CALLAREA+1(3),SIOT+X'B9'                                 21550000
         L     R14,CALLAREA                                             21560000
         B     E08NOSTP                                                 21570000
* THE SIOT IN MVS CONTAINS THE UCB POINTER, NOT THE PDQ                 21580000
E08NXA   LH    R14,SCTUTYPE                                             21590000
         B     E08NOSTP                                                 21600000
E08NMVS2 EQU   *                                                        21610000
         MVC   SCTUTYPE,16(R14) MOVE IN UCB UNIT TYPE                   21620000
         B     E08NOSTP         DO THE SCRATCH                          21630000
         SPACE 3                                                        21640000
E08NOTHR EQU *               NOT IN PDQ                                 21650000
* THE DATA SET WAS NOT IN THE PASS QUEUE,AND THEREFORE IT SHOULD        21660000
*    (MUST?) HAVE A VOL & UNIT,AND WILL HAVE A DDCARD SOMEWHERE         21670000
*    FOR IT TO BE MOUNTED IF ITS NOT NOW.                               21680000
           CLI DDVOLUME,C' '   VOL SPECIFIED ?                          21690000
           BE  E08NOPDQ        NOPE                                     21700000
           CLI DDUNITYP,C' '   UNIT GIVEN ?                             21710000
           BE  E08NOPDQ        NOPE                                     21720000
* OK,NOW SET UP THE JFCBDSN,AND THE VOLUME & UNIT AND                   21730000
*    GO TO THE SCRATCH ROUTINES.                                        21740000
           MVC JFCBDSNM,DDDSNAME                                        21750000
           MVC JFCBVOLS,DDVOLUME                                        21760000
         NI    DDUNITYP,B'10011111' DROP PERM BIT                       21770005
           MVI JFCBNVOL,1                                               21780000
           CLI DDVOLUME+06,C' '                                         21790000
           BE  E08FIXUN                                                 21800000
           MVI JFCBNVOL,2                                               21810000
           CLI DDVOLUME+12,C' '                                         21820000
           BE  E08FIXUN                                                 21830000
           MVI JFCBNVOL,3                                               21840000
           CLI DDVOLUME+18,C' '                                         21850000
           BE  E08FIXUN                                                 21860000
           MVI JFCBNVOL,4                                               21870000
           CLI DDVOLUME+24,C' '                                         21880000
           BE  E08FIXUN                                                 21890000
           MVI JFCBNVOL,5                                               21900000
           BE  E08FIXUN                                                 21910000
E08FIXUN   EQU  *                                                       21920000
           NI DDUNITYP,B'10011111'                                      21930000
* SPECIAL CODE FOR MVS,VS1                                        76200 21940000
         CLI   VS,C' ' IS IT A VS SYSTEM OF SOME SORT?            76200 21950000
         BE    E08NVS9                                             DASD 21960000
* OK SPECIAL FOR VS AND 3330-1                                    76200 21970000
         CLC   =C'3330-1',DDUNIT                                  76200 21980000
         BNE   E08NVS9                                            76200 21990000
         LA    R7,MVS3330                                         76200 22000000
         B     E08GOTUN                                           76200 22010000
E08NVS9  EQU   *                                                  76200 22020000
         L     R1,=A(HEXUNITS)                                          22030005
         LM    R7,R9,0(R1)                                              22040005
E08FHEXU CLC DDUNITYP,4(R7)    UNIT WE WANT ?                           22050005
         BE    E08GOTUN                                                 22060005
         BXLE R7,R8,E08FHEXU                                            22070005
         CALL UJEDEVNM     HOW ABOUT THE DEVICE NAME TABLE         DASD 22080005
         LTR    R15,R15                                            DASD 22090005
         BZ     E08NOSTP   SUPER   SAVED AGAIN                     DASD 22100005
         JOLERR 402,'SCRATCH REQUIRES UNIT ''',DDUNIT,''' UNKNOWN TO JOL22110005
               '                                                        22120005
         B     E08RETNF                                                 22130005
         SPACE 3                                                        22140005
E08GOTUN MVC SCTUTYPE,0(R7)    SHIFT IN IBM UNIT TYPE                   22150005
         B     E08NOSTP        DO THE SCRATCH ETC                       22160005
E08ERR2  EQU *                 NOT IN PDQ AND NO VOL/UNIT SPECIFIED     22170005
         JOLERR 209,'DSID ''',DDDSID,''' DSNAME ''',#DSN,''' ALREADY SCR22180005
               RATCHED'                                                 22190005
         JOLRETN RC=16                                                  22200005
         SPACE 3                                                        22210005
E08NOSTP EQU *                 NOT USED IN THIS STEP                    22220005
* NOW THIS SITUATION IS JUST A FRACTION MORE DIFFICULT THAN THE         22230000
*  OTHERS.                                                              22240005
* IF THE DATA SET IS ON DISK,ISSUE A SCRATCH                            22250000
         CLI SCTUTYPE+2,X'80' MAG TAPE ?                                22260005
         BE    E08MAGTP                                                 22270005
* DISK,LETS ISSUE THE SCRATCH AFTER SETTING THINGS UP                   22280000
         CLC JFCBNVOL,=AL1(L'JFCBVOLS/6)                                22290005
         BH    E08LETOS        HELP,TOO MANY VOLUMES,LET                22300005
*                            OS DO ALL THE SCRATCHING IT LIKES          22310005
*                            THANKS                                     22320005
         XC E08NOVOL(E08SCREN-E08NOVOL),E08NOVOL                        22330005
         MVC E08NOVOL+1(1),JFCBNVOL                                     22340005
           MVI E08NOVOL,0                                               22350000
           MVC E08UNIT+(0*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE       22360000
           MVC E08UNIT+(1*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE       22370000
           MVC E08UNIT+(2*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE       22380000
           MVC E08UNIT+(3*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE       22390000
           MVC E08UNIT+(4*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE       22400000
           MVC  E08VOL+(0*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+0     22410000
           MVC  E08VOL+(1*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+6     22420000
           MVC  E08VOL+(2*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+12    22430000
           MVC  E08VOL+(3*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+18    22440000
           MVC  E08VOL+(4*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+24    22450000
           CLEAR DDVOLUME                                         74365 22460000
           MVC DDVOLUME(L'JFCBVOLS),JFCBVOLS                      74365 22470000
           BAL R14,E00FXVOL    SET UP VOLUME LIST IN #VOL         74365 22480000
           SR  R0,R0                                                    22490000
           MVI   E08SCRA+2,X'40'  RESET SCRATCH (LAST ALWAYS?)          22500000
           IFNULL DDLABTYP,E08NALWA                                     22510000
* ALWAYS                                                                22520000
           MVI   E08SCRA+2,X'50'  OVER-RIDE PURGE DATE                  22530000
E08NALWA   EQU  *                                                       22540000
           SCRATCH E08SCRA                                              22550000
           LTR R15,R15                                                  22560000
           BNZ E08WHAT                                                  22570000
           JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *22580000
               ''' SCRATCHED FROM ',#VOL                          74365 22590000
E08MAGTP   EQU  *                                                       22600000
           CLI ISINPDQ,C' '    WELL,IS IT?                              22610000
           BNE E08INPDQ                                                 22620000
           JOLRETN                                                      22630000
E08INPDQ   EQU  *                                                       22640000
* THE NAME IN THE PDQ MUST BE SET TO OLD,DELETED SO THAT OS             22650000
*   WON'T BOTHER DELETING  THE THING AGAIN AT JOB TERMINATION           22660000
         CLI  VS,C'2'   VS2                                             22670000
         BE    E08MVS5                                                  22680000
         MVC CALLAREA,PDQABLK                                           22690005
         MVI CALLAREA+3,0                                               22700005
         GETJOBQ PDQDECB,CALLAREA                                       22710005
E08MVS5  EQU    *                                                       22720005
         LH R1,PDQDSNNO                                                 22730005
         CLI    VS,C'2'                                                 22740005
         BNE    E08NMVS4                                                22750005
         MH     R1,=AL2(PDILEN)                                         22760005
         LA     R14,PDITERM1(R1)                                        22770005
         MVI      0(R14),0           OLD,DELETE FLAGS              DASD 22780005
         SH       R14,=H'44'         BACKUP TO DSNAME              DASD 22790005
         MVI      0(R14),C' '        WIPE OUT THE NAME IN PDQ      DASD 22800005
         PUTJOBQ PDQDECB2     OP PDI BLOCK                              22810005
         CALL  UJE81PDQ                                          PDQDEL 22811005
         B     E08MAGTP                                          PDQDEL 22812005
*        JOLRETN     RC=0                                        PDQDEL 22820005
E08NMVS4 EQU   *                                                        22830005
         MH R1,=AL2(PDQBLKLN)                                           22840005
         LA R14,PDQTERM(R1)                                             22850005
         OI 0(R14),B'10100000'    OLD,DELETE FLAGS                      22860005
         PUTJOBQ PDQDECB                                                22870005
         CALL UJE81PDQ                                            87150 22871005
         B     E08MAGTP                                           87150 22873005
         JOLRETN                                                        22880005
         SPACE 3                                                        22890005
E08WHAT  EQU *                                                          22900005
* SCRATCH FAILED                                                        22910000
* WHY ??                                                                22920000
         CH   R15,=H'8'  DID WE BUILD A BAD CAMLIST ENTRY ??       DASD 22930000
         BH   E08BADCM   BETTER TELL SOMEONE ABOUT THIS            DASD 22940000
         JOLERR 215,'SCRATCH FOR ',                              84150 *22950000
               'DSID ''',DDDSID,''' DSNAME ''',#DSN,             84150 *22960000
               ''' VOL(S):-',#VOL,' MAY BE PARTIALLY SUCCESSFUL, BUT A *22970000
               FAILURE OCCURED BECAUSE:-'                               22980000
         SPACE 2                                                        22990005
* IF FAILURE OCCURRED BECAUSE THE VOLUMES WEREN'T MOUNTED,              23000000
*    I KNOW THAT THERE IS A JCL STEP BELOW WHICH WILL MOUNT             23010000
*    THE VOLUMES AND PERFORM THE SCRATCHES,SO LETS GO.                  23020000
         LA    R1,E08SEQ+1+(0*(L'E08UNIT+L'E08VOL+L'E08SEQ))            23030005
         MVC   E08TMPVL,JFCBVOLS       SHIFT VOLUME IN            84150 23040000
         BAL R2,E08ERR                                                  23050005
         LA    R1,E08SEQ+1+(1*(L'E08UNIT+L'E08VOL+L'E08SEQ))            23060005
         MVC   E08TMPVL,JFCBVOLS+6     SHIFT VOLUME IN            84150 23070000
         BAL R2,E08ERR                                                  23080005
         LA    R1,E08SEQ+1+(2*(L'E08UNIT+L'E08VOL+L'E08SEQ))            23090005
         MVC   E08TMPVL,JFCBVOLS+12    SHIFT VOLUME IN            84150 23100000
         BAL R2,E08ERR                                                  23110005
         LA    R1,E08SEQ+1+(3*(L'E08UNIT+L'E08VOL+L'E08SEQ))            23120005
         MVC   E08TMPVL,JFCBVOLS+18    SHIFT VOLUME IN            84150 23130000
         BAL R2,E08ERR                                                  23140005
         LA    R1,E08SEQ+1+(4*(L'E08UNIT+L'E08VOL+L'E08SEQ))            23150005
         MVC   E08TMPVL,JFCBVOLS+24    SHIFT VOLUME IN            84150 23160000
         BAL R2,E08ERR                                                  23170005
         B     E08RETNF                                                 23180005
E08ERR   EQU *                                                          23190005
* CALLED BECAUSE WE HAVE TO ANALYSE THE REASON WHY A SCRATCH FAILED     23200000
         CLI 0(R1),0           IS THIS ONE A ZERO ?                     23210005
         BE    0(R2)           YES,SO JUST RETURN TO CALLER.            23220005
         CLI 0(R1),5           UNABLE TO MOUNT COS NO DEVICE ?          23230005
         BE    E08NPACK        LET OS DO SCRATCH (STEP DOWN TO RIGHDASD 23240005
*                            STEP)                                      23250005
         CLI 0(R1),6           DIDN'T OPERATOR WANT TO MOUNT VOL ?      23260005
         BE    E08NPACK                                            DASD 23270005
         CLI 0(R1),1           NOT IN VTOC ?                            23280005
         BNE   E08TRET2                                     FIX-X 76200 23290000
         JOLERR 204,'    IT WAS NOT FOUND ON VOLUME ''',E08TMPVL        23300000
         BR    R2                                                       23310005
E08TRET2 CLI   0(R1),2                                      FIX-X 76200 23320000
         BNE   E08TRET3                                     FIX-X 76200 23330000
         JOLERR 410,'    IT IS A VSAM DATA SPACE, OR '            84150*23340000
               'AN INCORRECT PASSWORD WAS SUPPLIED'               84150 23350000
         BR    R2                                           FIX-X 76200 23360000
E08TRET3 CLI 0(R1),3           RETENTION PERIOD ?                       23370005
         BNE E08TRET4                                                   23380005
         JOLERR 205,'  IT CONTAINED A RETENTION DATE'             84150 23390005
         BR    R2                                           FIX-X 76200 23400000
E08TRET4 CLI 0(R1),4           I/O ERROR ?                              23410005
         BNE   E08TRET7                                     FIX-X 76200 23420000
         JOLERR 406,'   AN I/O ERROR WAS DETECTED ON VOLUME ',    84150*23430000
               E08TMPVL                                           84150 23440000
         BR    R2                                           FIX-X 76200 23450000
E08TRET7 CLI   0(R1),7                                      FIX-X 76200 23460000
         BNE   E08ERRXY                                     FIX-X 76200 23470000
         JOLERR 411,'DSNAME ''',#DSN,                       FIX-X 84150*23480000
               ''' IS BEING USED BY SOMEONE ELSE:-'         FIX-X 76200*23490000
               'TRY AGAIN LATER'                            FIX-X 76200 23500000
         BR    R2                                           FIX-X 76200 23510000
E08ERRXY SR    R2,R2                                        FIX-X 76200 23520000
         IC    R2,0(R1)                                     FIX-X 76200 23530000
         JOLERR 507,'SCRATCH RETURNED INVALID CODE;SEE REG 2'   X 76200 23540000
E08BADCM EQU *                                                     DASD 23550000
         JOLERR 213,'   THE CATLOG SPECIFIED AN INCORRECT UNIT ''',    *23560000
               DDUNIT,''''                                        84150 23570000
         B   E08LETOS                                              DASD 23580000
E08NPACK  EQU  *                                                   DASD 23590000
         JOLERR 214,'   VOLUME ''',E08TMPVL,''' ON UNIT ''',      84150*23600000
               DDUNIT,''' WAS NOT MOUNTED'                              23610000
           SPACE 3                                                      23620000
E08LETOS   EQU *                                                        23630000
* IT HAS BEEN DECIDED THAT,FOR NO DOUBT AN EXTERMELY GOOD REASON,       23640000
*    WE MUST STEP DOWN TO THE STEP THAT SHOULD BE THERE TO              23650000
*    HAVE THE VOLUME MOUNTED SO THE SCRATCH MAY BE PERFORMED.           23660000
           JOLRETN RC=4                                                 23670000
E08RETNF EQU   *   JOLRETN RC=16                                   DASD 23680000
*******************************************************            DASD 23690000
*    PDQ RECORDS NOT DELETED IF SCRATCH FAILS         *            DASD 23700000
*******************************************************            DASD 23710000
* WHEN A PROGRAMMER SAYS TO DELETE A DATASET BEFORE   *            DASD 23720000
* THE FIRST STEP OF THE JOB,  JOL WILL GENERATE A STEP*            DASD 23730000
* WITH A DDCARD REFERENCE TO THE DATASET TO BE DELETED*            DASD 23740000
* IF THE DATASET IS CATALOGED BUT NOT ON THE PACK THE *            DASD 23750000
* THIS SCRATCH ROUTINE WILL RETURN WITHOUT REMOVING   *            DASD 23760000
* THE PDQ RECORD.     ANY REFERENCE TO THIS DATASET   *            DASD 23770000
* LATER ON WILL ADD NEW PDQ RECORDS BUT WILL POINT    *            DASD 23780000
* TO THE FIRST ENTRY RESULTING IN ABEND=213           *            DASD 23790000
*******************************************************            DASD 23800000
         CLI   ISINPDQ,C' '    IS BAD GUY IN PDQ                   DASD 23810000
         BE    E08NFRPQ        NOPE  BETTER GO NOW                 DASD 23820000
* THE NAME IN THE PDQ MUST BE SET TO OLD,DELETED SO THAT OS        DASD 23830000
*   WON'T BOTHER DELETING  THE THING AGAIN AT JOB TERMINATION      DASD 23840000
         MVC CALLAREA,SIOT                                         DASD 23850005
         MVI CALLAREA+3,0                                          DASD 23860005
         GETJOBQ SIOTDECB,CALLAREA                                 DASD 23870005
         OI    SCTSDISP,B'00000100' TURN ON DELETE BIT             DASD 23880005
         OI    SIOTALTD,B'00000100' TURN ON DELETE BIT IN CONDITIONDASD 23890005
*                                   DISPOSITION PROCESSING         DASD 23900000
         PUTJOBQ SIOTDECB                                          DASD 23910005
         CLI   VS,C'2'   VS2                                       DASD 23920000
         BE    E08MVS6                                             DASD 23930000
         MVC   CALLAREA,PDQABLK                                    DASD 23940000
         MVI   CALLAREA+3,0                                        DASD 23950000
         GETJOBQ PDQDECB,CALLAREA                                  DASD 23960000
E08MVS6  EQU   *                                                   DASD 23970000
         LH    R1,PDQDSNNO                                         DASD 23980000
         CLI   VS,C'2'                                             DASD 23990000
         BNE   E08NMVS5                                            DASD 24000000
         MH    R1,=AL2(PDILEN)                                     DASD 24010000
         LA    R14,PDITERM1(R1)                                    DASD 24020000
         MVI   0(R14),0           OLD,DELETE FLAGS                 DASD 24030000
         SH    R14,=H'44'         BACKUP TO DSNAME                 DASD 24040000
         MVI   0(R14),C' '        WIPE OUT THE NAME IN PDQ         DASD 24050000
         PUTJOBQ PDQDECB2  OP PDI BLOCK                            DASD 24060000
         B     E08NFRPQ                                            DASD 24070000
E08NMVS5 EQU   *                                                   DASD 24080000
         MH    R1,=AL2(PDQBLKLN)                                   DASD 24090000
         LA    R14,PDQTERM(R1)                                     DASD 24100000
         MVI   0(R14),B'10100000'  OLD,DELETE FLAGS                DASD 24110000
         PUTJOBQ PDQDECB                                           DASD 24120000
E08NFRPQ JOLRETN RC=16                                             DASD 24130000
****************************************************************   DASD 24140000
* IF DOING A DELETE CHECK THE CATALOG TO SEE IF THE DATASET    *   DASD 24150000
* IS CATALOGED AND IF SO REUTRN TO THE SCRATCH                 *   DASD 24160000
*                                                              *   DASD 24170000
* THE FOLLOWING MESSSAGE IS ONLY ISSUED WHEN THE DATASET       *   DASD 24180000
* IS NOT ON THE PDQ                                            *   DASD 24190000
*                                                              *   DASD 24200000
* HERE AT STANDARD OIL A MODIFICATION EXSITS WHERE IF THE      *   DASD 24210000
* SCRATCH FAILED THE UNCATLG WILL STILL RUNS                   *   DASD 24220000
****************************************************************   DASD 24230000
E08NOPDQ NOP   E08PDQMG    TURN THIS ON TO SHUT OFF THIS CODE      DASD 24240000
         CLI   ICOMMAND,C'D'     DELETE STMT ?                     DASD 24250000
         BNE   E08PDQMG          NO---ISSUE THE MESSAGE            DASD 24260000
         $CALL UJELOCAT          CALL LOCATE MODULE                DASD 24270000
         LTR   R15,R15           ARE WE IN LUCK ?                  DASD 24280000
         BNZ   E08PDQMG          NOPE NOT TODAY                    DASD 24290000
         MVC   JFCBDSNM,DSNAME  COPY DATA SET NAME TO JFCB         DASD 24300000
         L     R15,=V(E05VOLS)  POINT TO CAMLST                    DASD 24310000
         USING VOLINFO,R15       GET SOME ADDDRESSILITY            DASD 24320000
         MVC   JFCBNVOL,NOVOLS+1 # VOLUMES                         DASD 24330000
         MVC   SCTUTYPE,CATDEV   UNIT TYPE                         DASD 24340000
         LH    R1,NOVOLS         # VOLUMES AGAIN                   DASD 24350000
         CH    R1,=H'5'          MORE THAN WE CAN HANDLE ?         DASD 24360000
         BNH   *+8               NO                                DASD 24370000
         LA    R1,5              ADJUST # VOLUMES FOR US           DASD 24380000
         LA    R14,JFCBVOLS      MOVE TO HERE                      DASD 24390000
         MVI   JFCBVOLS,C' '                                       DASD 24400000
         MVC   JFCBVOLS+1(L'JFCBVOLS-1),JFCBVOLS   CLEAR JFCB      DASD 24410000
E08LPVOL EQU   *                                                   DASD 24420000
         MVC   0(6,R14),CATVOL   MOVE VOL SER                      DASD 24430000
         LA    R15,12(R15)       POINT TO NEW CAMLST ENTRY         DASD 24440000
         LA    R14,6(R14)        UP TO NEXTBUCKET IN JFCB          DASD 24450000
         BCT   R1,E08LPVOL       GET ALL OF THE VOLUMES            DASD 24460000
         B     E08NOSTP          LETS DO THE SCRATCH AGAIN         DASD 24470000
         DROP  R15                                                 DASD 24480000
E08PDQMG   JOLERR 203,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *24490000
               ''' NOT YET CREATED:-SCRATCH IGNORED'                    24500000
           B  E08RETNF                                                  24510000
           SPACE 3                                                      24520000
E08TMPVL DS  CL6                                                        24530000
           SPACE 3                                                      24540000
E08SCRA    CAMLST SCRATCH,JFCBDSNM,,E08NOVOL                            24550000
E08NOVOL   DS  H                                                        24560000
E08UNIT    DS  CL4                                                      24570000
E08VOL     DS  CL6                                                      24580000
E08SEQ     DS  H                                                        24590000
           DS  ((L'JFCBVOLS/6)*12)C                                     24600000
E08SCREN   EQU *                                                        24610000
           DC S(*),S(*),S(*),S(*)                                       24620000
           DC S(*),S(*),S(*),S(*)                                       24630000
           DC S(*),S(*),S(*),S(*)                                       24640000
           DC S(*),S(*),S(*),S(*)                                       24650000
           DC S(*),S(*),S(*),S(*)                                       24660000
           DC S(*),S(*),S(*),S(*)                                       24670000
           DC S(*),S(*),S(*),S(*)                                       24680000
           DC S(*),S(*),S(*),S(*)                                       24690000
           DC S(*),S(*),S(*),S(*)                                       24700000
           DC S(*),S(*),S(*),S(*)                                       24710000
           DC S(*),S(*),S(*),S(*)                                       24720000
           DC S(*),S(*),S(*),S(*)                                       24730000
           DC S(*),S(*),S(*),S(*)                                       24740000
           DC S(*),S(*),S(*),S(*)                                       24750000
           DC S(*),S(*),S(*),S(*)                                       24760000
           DC S(*),S(*),S(*),S(*)                                       24770000
           DC S(*),S(*),S(*),S(*)                                       24780000
           DC S(*),S(*),S(*),S(*)                                       24790000
           DC S(*),S(*),S(*),S(*)                                       24800000
           LTORG                                                        24810000
          TITLE 'UJE66TST:TEST IF DATA SET IS GDG-ALL'                  24820000
           JOLSAVE CSECT=UJE66TST                                       24830000
* WE WILL ONLY CAN THE CATLG SEARCH ROUTINE IF THE 'DSIDTYPE'     85196 24840000
*    INDICATES A REAL DSNAME (THIS COULD THEN BE A GDGALL)        85196 24850000
         CLI   DDTYPE,DDREALDS         REAL TYPE OF DATA SET?     85196 24860000
         BNE   U66RETN4                NO, SO BACK NOW            85196 24870000
         CLC   #E66DSN(2),=AL2(44-9)   CHECK IF NAME TOO LONG     85196 24880000
         BH    U66RETN4                CAN'T POSSIBLY BE GDGALL   85196 24890000
         LA    R1,DSNAME                                                24900000
         ST    R1,E66REMUV+4                                            24910000
         L     R15,=V(E05VOLS)         LOAD CAMLIST ADDRESS        DASD 24920000
         ST    R15,E66LOCAT+12         POINT TO LOCATE AREA        DASD 24930000
         MVC   #E66DSN(46),#DSNAME     MOVE TO A SAFE SAVE AREA         24940000
         LH    R15,#DSNAME             ADD 9 TO #DSN FOR MSSGES   85196 24950000
         LA    R15,9(R15)              ADD THE NINE               85196 24960000
         STH   R15,#DSNAME             STORE IT BACK              85196 24970000
         LA    R1,DSNAME               POINT TO DSNAME             DASD 24980000
         LA    R15,43(R1)              POINT TO END OF DSNAME      DASD 24990000
         LA    R14,1                   INCR BY 1                   DASD 25000000
E66FIND  CLI   0(R1),C' '              END OF DSNAME YET           DASD 25010000
         BE    *+8                     YEP LETS MOVE               DASD 25020000
         BXLE  R1,R14,E66FIND          RETURN                      DASD 25030000
         MVC   0(3,R1),=C'(0)'         LOOK FOR RELATIVE GDG 0     DASD 25040000
         MVC   #E66DSN2(46),#DSNAME    MOVE TO A SAFE SAVE AREA         25050000
         LOCATE E66LOCAT                                           DASD 25060000
         LTR   R15,R15                 DID LOCATE FIND ANYTHING ?? DASD 25070000
         BZ    E66DOIT                 YES, SO NOW CALL SCRATCH, UNCAT  25080000
         MVC   #DSNAME(46),#E66DSN     RESET DSNAME FOR ERROR MESSAGES  25090000
U66RETN4 JOLRETN RC=4                  NO, RETN A 4, LET OTHERS         25100000
*                                      GIVE ERROR MESSAGES              25110000
*                                      YES, SCRATCH THE DATA SET(MAYBE) 25120000
E66DOIT  CLI ICOMMAND,C'U'             UNCATALOG CALLING ME TO UNCAT    25130000
*                                      ONLY ?                           25140000
         BE    E66DOUN                 YES, UNCAT ONLY                  25150000
         CALL UJE08SCR                 YES, SCRATCH THE DATA SET        25160000
E66DOUN  CATALOG E66REMUV              NOW UNCATLG IT                   25170000
         LTR   R15,R15                 DID THIS WORK OK            DASD 25180000
         BNZ   E66ERR1                 NOPE SOMETHINGS WRONG       DASD 25190000
         JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',                   *25200000
               #DSNAME,''' UNCATALOGED'                                 25210000
E66LOOK  MVC   DSNAME,E66DSN2          MOVE DSNAME IN (2ND ETC TIMES)   25220000
         CLEAR  DDVOLUME                                                25230000
         LOCATE E66LOCAT                                           DASD 25240000
         LTR   R15,R15                 DID LOCATE FIND ANYTHING ?? DASD 25250000
         BNZ   E66RETN                 NOPE THAT ALL               DASD 25260000
         BZ    E66DOIT                 SCRATCH, LOOK FOR NEXT      CVC  25270000
E66RETN  JOLRETN                                                        25280000
E66ERR1  JOLERR 302,'DSID ''',DDDSID,''' DSNAME ''',                   *25290000
               #DSNAME,''' COULD NOT BE UNCATALOGED'                    25300000
         JOLRETN                                                        25310000
#E66DSN  DS   H                     LENGTH OF DSNAME TOO                25320000
E66DSN   DS   CL44                                                      25330000
#E66DSN2 DS   H                     LENGTH OF DSNAME TOO                25340000
E66DSN2  DS   CL44                                                      25350000
E66LOCAT CAMLST NAME,DSNAME,,0                                     DASD 25360000
E66REMUV   CAMLST UNCAT,0                                               25370000
         LTORG                                                          25380000
           DC S(*),S(*),S(*),S(*)                                       25390000
           DC S(*),S(*),S(*),S(*)                                       25400000
           DC S(*),S(*),S(*),S(*)                                       25410000
           DC S(*),S(*),S(*),S(*)                                       25420000
           DC S(*),S(*),S(*),S(*)                                       25430000
           DC S(*),S(*),S(*),S(*)                                       25440000
           DC S(*),S(*),S(*),S(*)                                       25450000
           DC S(*),S(*),S(*),S(*)                                       25460000
           DC S(*),S(*),S(*),S(*)                                       25470000
           DC S(*),S(*),S(*),S(*)                                       25480000
JSCBOFFS   EQU 180                                                      25490000
CVT        EQU 16                                                       25500000
JCTTTRA    EQU 261                                                      25510000
          TITLE 'UJE09DEL:DELETE DATA SET'                              25520000
           JOLSAVE CSECT=UJE09DEL                                       25530000
* NEW CODE FOR DELETE GDGALL. BEFORE ATTEMPTING TO SCRATCH THE DATA-    25540000
*  SET, WE WILL SEE IF IT IS GDGALL. IF SO, WE WILL CALL THE SCRATCH    25550000
*  MODULE IN A LOOP.                                                    25560000
           CLI  DDCATLGS,104   GDGALL AND CATALOG LOOKUP ALLOWED?       25570000
           BE   E09GDGA1       YES, GO SCRATCH, THEN UNCATLG            25580000
* TEST IF GDG-ALL, AND LOOP AROUND SCRATCHING EVERYTHING WE CAN FIND    25590000
           CALL UJE66TST TEST GDGALL, AND SCRATCH THE LOT               25600000
           LTR  R15,R15         WAS IT GDG- ALL?                        25610000
           BZ   E09RETN0                                                25620000
E09GDGA1   CALL UJE08SCR                                                25630000
           LTR  R15,R15                                                 25640000
           BZ   E09UNCAT  O.K. GUYS THE SCRATCH WORKED KEEP GOING  DASD 25650000
* STANDARD OIL REQUESTED THIS MOD                                  DASD 25660000
* THEY WANTED THE UNCATLG TO ALWAYS RUN EVEN IF THE SCRATCH FAILED DASD 25670000
           CLI  DDCATLGS,104   GDGALL ?                            DASD 25680000
           BNE  E09UNCAT   LET THE UNCATLG RUN THEN                DASD 25690000
           JOLRETN RC=(15)                                              25700000
E09UNCAT CLI   #DSN+2,C'&&'   TEMPORARY DATA SET ?                76200 25710000
         BE    E09RETN0                                           76200 25720000
         CALL  UJE06UNC                                           76200 25730000
E09RETN0 JOLRETN RC=0                                             76200 25740000
          TITLE 'UJE10TYP:TYPE A MESSAGE'                               25750000
           JOLSAVE CSECT=UJE10TYP                                       25760000
* THIS REOUTINE DOES THE TYPING                                         25770000
           L   R7,=A(#TKN)                                              25780000
           USING #TKN,R7                                                25790000
           JOLERR 301,#TKN                                              25800000
           JOLRETN                                                      25810000
           LTORG                                                        25820000
          TITLE 'UJE11DIS:DISPLAY A MESSAGE'                            25830000
           JOLSAVE CSECT=UJE11DIS                                       25840000
           L   R7,=A(#TKN)                                              25850000
           USING #TKN,R7                                                25860000
* DISPLAY HANDLER                                                       25870000
           JOLERR 101,#TKN                                              25880000
           JOLRETN                                                      25890000
           LTORG                                                        25900000
          TITLE 'UJE12SIG:SIGNAL AN ERROR MESSAGE'                      25910000
           JOLSAVE CSECT=UJE12SIG                                       25920000
* SIGNAL ERROR ROUTINE                                                  25930000
           L   R7,=A(#TKN)                                              25940000
           USING #TKN,R7                                                25950000
           SR R2,R2                                                     25960000
         NI    TKN,X'0F'        DROP 'F' FROM SEVERITY NUMBER           25970005
           IC R2,TKN           AND SAVE SEVERITY NUMBER                 25980000
           GETTKN 3            GET MESSAGE TEXT                         25990000
           CH R2,=H'3'                                                  26000000
           BL  SIGONLY                         ONLY WARNINGS            26010000
           BE  SIGWTOR                         WTOR                     26020000
* HERE A TERMINAL ERROR TO BE RASIED                                    26030000
           JOLERR 407,'TERMINAL ERROR ',#TKN,' SIGNALLED'               26040000
SIG4000    MVC TASKRETN,=F'4000'                                        26050000
           MVI  GOBACK,C'1'                                             26060000
SIGTERM    JOLERR 406,'JOB TERMINATING'                                 26070000
           JOLRETN RC=4000                                              26080000
           SPACE 3                                                      26090000
SIGONLY    EQU *                                                        26100000
           CH R2,=H'2'                                                  26110000
           BL SIGERR1                                                   26120000
         JOLERR 202,'SEVERE ERROR ',#TKN,'SIGNALLED'        FIX-X 76200 26130000
           B  SIGRETN                                                   26140000
SIGERR1  JOLERR 101,'MINOR ERROR ',#TKN,' SIGNALLED'        FIX-X 76200 26150000
SIGRETN    JOLRETN                                                      26160000
           SPACE 3                                                      26170000
SIGWTOR    EQU *                                                        26180000
*          JOLERR 403,'MAJOR ERROR ',#TKN,' SIGNALLED'                  26190000
SIGRETRY   CLEAR SIGREPLY                                               26200000
         CLC   #TKN,=H'55'   IS THE MESSAGE TOO LONG?             84021 26210000
         BNH   E12WTOR1      NO                                   84021 26220000
         MVC   #TKN,=H'55'   YES, RESET IT                        84021 26230000
E12WTOR1 EQU   *                                                  84021 26240000
         JOLERR 403,#TKN,': REPLY GO OR STOP'                     84021 26250000
* JOLERR SETS UP JOBNAME ETC IN #S23LREC READY FOR WTOR           84021 26260000
         LA    R1,#S23LREC-8                                      84021 26270000
         MVI   0(R1),4       SET UP LENGTH OF REPLY               84021 26280000
         MVC   1(3,R1),=AL3(SIGREPLY) ADDRESS OF REPLY AREA       84021 26290000
         MVC   4(4,R1),=A(SIGECB) ADDRESS OF ECB TO WAIT ON       84021 26300000
           XC  SIGECB,SIGECB                                            26310000
ERE1204    EQU *                                                        26320000
*     WTOR 'JOLE12-04 REPLY GO OR STOP',SIGREPLY,4,SIGECB,DESC=(2)      26330000
         LA    R1,#S23LREC-8                                      84021 26340000
         SVC   35          ISSUE WTOR                             84021 26350000
           WAIT ECB=SIGECB                                              26360000
           CLC =C'GO  ',SIGREPLY                                        26370000
           BE  SIGCONT                                                  26380000
           CLC =C'STOP',SIGREPLY                                        26390000
           B  SIGTERM                                                   26400000
           B   SIGRETRY                                                 26410000
           SPACE 3                                                      26420000
SIGECB     DS  F                                                        26430000
SIGREPLY   DS CL4                                                       26440000
           SPACE 3                                                      26450000
SIGCONT    EQU *                                                        26460000
           JOLERR 405,'JOB CONTINUING'                                  26470000
           B   SIGRETN                                                  26480000
          LTORG                                                         26490000
          TITLE 'UJE13STP:STOP HANDLER'                                 26500000
           JOLSAVE CSECT=UJE13STP                                       26510000
* STOP EXECUTER                                                         26520000
           L   R7,=A(#TKN)                                              26530000
           USING #TKN,R7                                                26540000
           JOLERR 401,'STOP ''',#TKN,''' EXECUTED'                      26550000
STPRETN    MVI GOBACK,C'1'                                              26560000
           MVC TASKRETN,=F'4000'                                        26570000
           JOLRETN RC=4000                                              26580000
           SPACE 3                                                      26590000
           LTORG                                                        26600000
          TITLE 'UJ20RUN:PERFORM A RUN INSTRUCTION'                     26610000
           JOLSAVE CSECT=UJE20RUN                                       26620000
* HANDLE RUN STATEMENT                                                  26630000
           MVI ISRUN,C'1'                                               26640000
           MVC RUNNAME,PGM                                              26650000
           MVC TASKNAME,PGM                                             26660000
           MVC TASKLABL,PGMLABEL                                        26670000
* NOW LETS SEE IF WE EXECUTE IN THIS STEP,OR IN THE NEXT,               26680000
*     AND IF A PARM IS USED IN THIS RUN                                 26690000
* NOW BEFORE XCTL TO THE USER PROGRAM,WE MUST DETERMINE WHETHER         26700000
*     OR NOT THERE ARE ANY DD-CARDS REFERRING TO THIS PROGRAM           26710000
*     OR IF THERE IS A PARM FIELD OR NOT.                               26720000
* IF THERE ARE NO DD-CARDS,WE MAY XCTL NOW,OTHERWISE WE                 26730000
*     MUST CHECK THAT THIS IS THE CORRECT OS STEP OR NOT                26740000
           L  R2,TTR$INST      SAVE TTR OF NEXT INSTRUCTION             26750000
*                              BECAUSE IF WE DECIDE NOT TO DO           26760000
*                              THE USERS PROGRAM HERE WE WILL           26770000
*                              HAVE TO RESET THE TTR SO THE             26780000
*                              NEXT OS STEP THAT IS EXECUTED            26790000
*                              WILL START AT THE CORRECT STEP           26800000
           CLC PGMNODDS,=A(0)    ARE THERE ANY DDCARDS?           75128 26810000
           BNE E20AREDD        YES                                      26820000
           CALL UJE50RD        READ NEXT STATEMENT                      26830000
           LTR  R15,R15        EOF PERHAPS ?                            26840000
           BZ E50TPARM                                                  26850000
* NO DD'S  AND NO PARM,RETURN A 0,SO WE WILL XCTL TO                    26860000
*     PROBLEM PROGRAM.                                                  26870000
           MVI TTR$INST+3,0    SO WE RE-READ THE LAST STATEMENT         26880000
E20RETNO   EQU *                                                        26890000
E20RETN0   EQU *                                                        26900000
           BLDL 0,RUNBLDL                                               26910000
           B   RUNBLD(R15)                                              26920000
RUNBLD     B   RUNBLD0                                                  26930000
           B   RUNBLD4                                                  26940000
           B   RUNBLD8                                                  26950000
RUNBLD4    EQU *                                                        26960000
*UNBLD4    JOLERR 401,'PROGRAM ''',RUNNAME,''' ABSENT:- TRYING LPALIB'  26970000
           MVC  TASKSSI,=X'00000000'         CLEAR THE SSI INFO         26980000
           B   E20NTIOT     *************************             75002 26990000
RUNBLD8    JOLERR 402,'PERM I/O ERR FINDING ',RUNNAME                   27000000
E20806     EQU  *                                                       27010000
           MVI ISRUN,C' '                                               27020000
           JOLRETN RC=4000                                              27030000
           SPACE 3                                                      27040000
RUNBLD0  LA    R15,RUNNAME                                        85199 27050000
         USING PDS2,R15                                           85199 27060000
         LA    R9,PDSBCEND+1           END OF BASIC SECTION       85199 27070000
         TM    PDS2FTB1,PDS2SSI        IS THERE AN SSI FIELD?     85199 27080000
         BNO   E20NOSSI                NO, MAKE IT ZEROS          85199 27090000
         TM    PDS2ATR1,PDS2SCTR       SKIP SCATTER FIELD?        85199 27100000
         BNO   E20NSCAT                YES                        85199 27110000
         LA    R9,PDSS01LN(R9)         ADD TO AVOID WRONG FIELD   85199 27120000
E20NSCAT TM    PDS2INDC,PDS2ALIS       ALIAS FIELD?               85199 27130000
         BNO   E20NALIA                YES                        85199 27140000
         LA    R9,PDSS02LN-1(R9)       ADD TO AVOID WRONG FIELD   85199 27150000
E20NALIA MVC TASKSSI,0(R9)                                        85199 27160000
           B   E20NTIOT     *************************             75002 27170000
E20NOSSI   MVC  TASKSSI,=X'00000000'         CLEAR THE SSI INFO         27180000
           B   E20NTIOT     *************************             75002 27190000
RUNBLDXX   SR  R8,R8                                                    27200000
           IC  R8,RUNC1                                                 27210000
           LA  R9,X'1F'                                                 27220000
           NR  R8,R9                                                    27230000
           SLL R8,1                                                     27240000
           LA  R9,RUNUSDTA-6                                            27250000
           AR  R9,R8                                                    27260000
           MVC TASKSSI,0(R9)                                            27270000
           B   E20NTIOT     *************************             75002 27280000
*  NOW SET PROGRAM NAME UP IN TIOT.                                     27290000
           LA  R1,TASKNAME       LOAD THE ADRESS OF PGM NAME      75002 27300000
           ST  R1,INST           STORE IN WORK AREA               75002 27310000
           MVI INST,8       SET LENGTH OF PARM TO 8               75002 27320000
           LA  R1,INST      LOAD A(PARM)                          75002 27330000
           L   R0,ATIOT    -> TIOT                                75002 27340000
           AH  R0,=H'16'    ->PGM NAME SPOT                       75002 27350000
           SVC 255          POP PGM NAME IN TIOT                  75002 27360000
E20NTIOT   EQU *                                                  75002 27370000
           JOLRETN                                                      27380000
E50TPARM   EQU  *                                                       27390000
           CLC =C'PARM ',ICOMMAND                                       27400000
           BE  E20ISPM                                                  27410000
* AGAIN NO DD'S AND NO PARM                                             27420000
           MVI TTR$INST+3,0    SO WE RE-READ THE LAST STATEMENT         27430000
           B   E20RETN0        TO XCTL                                  27440000
           SPACE 3                                                      27450000
* FIX UP USERS PARM FIELD                                               27460000
E20ISPM    EQU *                                                        27470000
           L  R1,ATASKPRM                                               27480000
           L  R15,=A(#TKNSTRG)                                          27490000
           USING  #TKNSTRG,R15                                          27500000
*          MVC 0(100,R1),#TKNSTRG     ************** U102 ?****** 76200 27510011
           MVC 0(256,R1),#TKNSTRG     WAs 100, now 256 characters   J60 27510111
* Test if there is a 2nd Parm record.  We will allow up to          J60 27510211
* 2500 characters Nov 23, 2010                                      J60 27510311
E20PARM2   DS  0H                                                   J60 27510411
           CALL UJE50RD        READ NEXT STATEMENT                  J60 27511011
           LTR  R15,R15        EOF PERHAPS ?                        J60 27512011
           BNZ E20RETN0        Go back                              J60 27513011
           CLC =C'PARM ',ICOMMAND Is it 2nd or more Parm            J60 27513111
           BE  E20ISPM2        Yes                                  J60 27513211
* Only 1 Parm, or ended getting multiple ones.                      J60 27513311
           MVI TTR$INST+3,0    SO WE RE-READ THE LAST STATEMENT     J60 27513411
           B   E20RETN0        Return to Monitor, Attach Prob Prog  J60 27513511
E20ISPM2   L  R1,ATASKPRM      Get address of current parm          J60 27514011
           LR  R14,R1                                               J60 27514111
           AH  R14,0(R1)       Get address of end of string         J60 27514211
           L  R15,=A(#TKNSTRG)                                      J60 27515011
           MVC 2(256,R14),#TKNSTRG+2  Just move 256 characters      J60 27516013
           LH  R14,0(R1)       Get current length                   J60 27517011
           AH  R14,#TKNSTRG    Add New length                       J60 27518011
           STH R14,0(R1)       Store new length                     J60 27519011
           B   E20PARM2        Get next record, for up Parm         J60 27520011
         DROP  R15                                                      27530005
           SPACE  3                                                     27540000
E20AREDD   EQU *                                                        27550000
* THE USERS PROGRAM HAS DD-CARDS AND WE MUST DILIGENTLY                 27560000
*     CHECK WHETHER OR NOT WE ARE IN THE CORRECT OS JOB-STEP            27570000
*     (I.E DO WE HAVE THE DD-CARDS NECESSARY FOR THIS PROGRAM)          27580000
           CLC  SCTSNAME(8),PGMSTEP RIGHT OS JOB STEP ?           75311 27590000
           BE  E20TPM2         TEST IF THIS HAS A PARM NOW              27600000
           BH  E20TOOHI        ERROR,GONE TOO FAR                       27610000
* RIGHTO,MUST CHANGE OS STEPS OLD BOY.                                  27620000
E20CHNG    ST R2,TTR$INST                                               27630000
           MVI TTR$INST+3,0    RESET 'Z' IN TTR                         27640000
           B  *+4                                                       27650000
           B  *+4                                                       27660000
           B  *+4                                                       27670000
           JOLRETN RC=4        TELL US TO GO TO ANOTHER OS STEP         27680000
E20TPM2    EQU *                                                        27690000
           CALL UJE50RD                                                 27700000
           LTR R15,R15                                                  27710000
           BNZ E20RETN0                                                 27720000
           B   E50TPARM                                                 27730000
E20TOOHI CLC   =C'$$',PGMSTEP                                     75311 27740000
         B     E20CHNG  **********************LET MAIN FIX IT *** 75311 27750000
         BNE   E20CHNG                                            75311 27760000
           JOLERR 503,'CANNOT FIND STEP FOR ',PGMESTMT                  27770000
           LTORG                                                        27780000
           DC   S(*),S(*),S(*),S(*)                                     27790000
           DC   S(*),S(*),S(*),S(*)                                     27800000
           DC   S(*),S(*),S(*),S(*)                                     27810000
           DC   S(*),S(*),S(*),S(*)                                     27820000
           DC   S(*),S(*),S(*),S(*)                                     27830000
           DC   S(*),S(*),S(*),S(*)                                     27840000
           DC   S(*),S(*),S(*),S(*)                                     27850000
           DC   S(*),S(*),S(*),S(*)                                     27860000
           DC   S(*),S(*),S(*),S(*)                                     27870000
           DC   S(*),S(*),S(*),S(*)                                     27880000
           DC   S(*),S(*),S(*),S(*)                                     27890000
           DC   S(*),S(*),S(*),S(*)                                     27900000
           DC   S(*),S(*),S(*),S(*)                                     27910000
           DC   S(*),S(*),S(*),S(*)                                     27920000
           DC   S(*),S(*),S(*),S(*)                                     27930000
           DC   S(*),S(*),S(*),S(*)                                     27940000
           DC   S(*),S(*),S(*),S(*)                                     27950000
           DC   S(*),S(*),S(*),S(*)                                     27960000
           DC   S(*),S(*),S(*),S(*)                                     27970000
           DC   S(*),S(*),S(*),S(*)                                     27980000
           IHAPDS                                                       27990000
           TITLE 'UJE23RET: HANDLE RETURN INSTRUCTION'                  28000000
           JOLSAVE CSECT=UJE23RET                                 74365 28010000
           L   R7,=A(#TKN)                                              28020000
           USING #TKN,R7                                                28030000
         JOLERR 101,'RETURN ',#TKN,' EXECUTED'              FIX-X 76200 28040000
           L R14,=A(RETURN)                                       74365 28050000
           JOLRETN (15,12),RC=0                                   74365 28060000
           DC S(*,*,*,*)                                                28070000
           DC S(*,*,*,*)                                                28080000
           DC S(*,*,*,*)                                                28090000
           DC S(*,*,*,*)                                                28100000
           DC S(*,*,*,*)                                                28110000
           SPACE 3                                                75311 28120000
           JOLSAVE CSECT=UJE31OPT                                 75311 28130000
           MVI JOLSVC,X'0A'    SVC INSTRUCTION CODE               75311 28140000
           MVC JOLSVC+1(1),ITEXT+2 SVC NUMBER                     75311 28150000
           JOLRETN  RC=0                                          75311 28160000
           TITLE 'UJE50RD:READ A STATEMENT FROM JOL INSTRUCT FILE'      28170000
           JOLSAVE CSECT=UJE50RD                                        28180000
* THIS CSECT IS CALLED WHEN A NEW INSTRUCTION HAS TO BE                 28190000
*    READ FROM THE INSTRUCT FILE.                                       28200000
           MVC #VOL,=H'0'     STOP SPURIOUS 0C4                  75311  28210000
           CLC TTR$INST,=A(0)  FIRST TIME IN,I.E. WE HAVEN'T            28220000
*                              EVEN REALLY STARTED YET ?                28230000
           BNE E50NOTF                                                  28240000
           MVC RUNNAME,=CL8'$$INST'                                     28250000
           BLDL INSTRUCT,RUNBLDL                                        28260000
           B   E5002R(R15)                                              28270000
E5002R     B   E50GOTIT                                                 28280000
           B   E5002R4                                                  28290000
           B   E5002R8                                                  28300000
E5002R4    JOLERR 501,'MEMBER $$INST ABSENT'                            28310000
E5002R8    JOLERR 502,'I/O ERROR READING DIRECTORY'                     28320000
           DS 0D                                                        28330000
E50GOTIT   EQU *                                                        28340000
           MVC TTR$INST,RUNTTRK                                         28350000
           MVI TTR$INST+3,0     SET Z=0 FIRST                           28360000
E50NOTF    POINT INSTRUCT,TTR$INST                                      28370000
E50RD      EQU *                                                        28380000
           MVC INSTRUCT+33(3),=AL3(EOF)                                 28390000
           L  R15,=A(#TKNSTRG)                                          28400000
           USING  #TKNSTRG,R15                                          28410000
           CLEAR TKNSTRG                                                28420000
         DROP  R15                                                      28430005
           L  R2,=A(INSTRDA)                                            28440000
           USING    INSTRDA,R2                                          28450000
           READ E50DECB,SF,INSTRUCT,(2)                                 28460000
           CHECK E50DECB                                                28470000
* IF EOF WOULD HAVE GONE ELSE-WHERE                                     28480000
*******************************************************************DASD 28490000
*   THIS CALL TO MODULE $$JOLBUG WILL PRINT THE INSTRUCTION        DASD 28500000
*   JUST READ TO DDNAME '$JOL$BUG$' IF IT'S PRESENT                DASD 28510000
*   -----MAYBE A GOOD TRACE FACILITY----                           DASD 28520000
*   YOU MIGHT DO A JOLOPT CARD1='//$JOL$BUG DD SYSOUT=A'           DASD 28530000
*   IN THE COMPILE TO GET THIS DD IN EVERY STEP                    DASD 28540000
****************************************************02-23-78*******DASD 28550000
      CALL   $$JOLBUG,((2))     CALL PRINT MODULE                  DASD 28560000
         DROP  R2                                                       28570005
           SPACE 3                                                      28580000
           L   R7,=A(#TKN)                                              28590000
           USING #TKN,R7                                                28600000
           NOTE INSTRUCT                                                28610000
           ST  R1,TTR$INST                                              28620000
           MVI TTR$INST+3,1    SET Z TO 1 SO NEXT READ GETS NEW BLK     28630000
           MVC INST(IBODY),INSTRDA                                      28640000
           MVC DDDSNDET(DDLEN),INSTRDA                                  28650000
           MVC STMT,ISTMT                                               28660000
           MVC GOTOLAB,=CL8'$$'                                         28670000
           CLI DDDD1,C'E'      EXEC PGM ?                               28680000
           BNE E50TDD                                                   28690000
           MVC ICOMMAND,=CL8'RUN'                                       28700000
           MVC STMT,PGMESTMT                                            28710000
           MVC GOTOLAB,PGMSTEP SHIFT STEPNAME FOR 'REAL' STEPNAME 75311 28720000
           JOLRETN                                                      28730000
E50TDD     EQU  *                                                       28740000
           CLI DDDD1,C'D'      DD-CARD TYPE ENTRY?                      28750000
           BNE ISALABEL                                                 28760000
* NOW FOR DD-CARD TYPE ENTRIES,WE DON'T SPLIT INTO TOKENS.              28770000
* SET UP SHORT DSNAME FOR ERROR MESSAGES                                28780000
           MVC DSNAME,DDDSNAME                                          28790000
           LA  R15,L'DDDSNAME-1                                         28800000
E50TEDSN   EQU *                                                        28810000
           LA  R14,DDDSNAME(R15)                                        28820000
           CLI 0(R14),C' '                                              28830000
           BNE E50DSNOK                                                 28840000
           BCT R15,E50TEDSN                                             28850000
E50DSNOK   EQU  *                                                       28860000
           LA  R15,1(R15)                                               28870000
           STH R15,#DSN                                                 28880000
           MVC STMT,DDDDNAME+2                                          28890000
           MVC GOTOLAB(2),=C'$$'                                        28900000
           MVC GOTOLAB+2(6),DDDDNAME+2                                  28910000
           MVC #TKN,=H'8'                                               28920000
           MVC TKN(8),BLANKS                                            28930000
           MVC TKN(1),DDDDNAME+1                                        28940000
           MVC ICOMMAND,TKN                                             28950000
           JOLRETN                                                      28960000
ISALABEL   EQU *                                                        28970000
           CLC INST,=AL2(IBODY+1)                                       28980000
           BH  E50SPLIT                                                 28990000
           L  R15,=A(#TKNSTRG)                                          29000000
           USING  #TKNSTRG,R15                                          29010000
           XC #TKNSTRG,#TKNSTRG                                         29020000
         DROP  R15                                                      29030005
E50SPLIT   EQU  *                                                       29040000
* THE DOUBLE QUOTE ROUTINE IN THE COMPILER NOW REMOVES            76200 29050000
* ALL QUOTES FROM THE STRING, AND THEREFORE IF                    76200 29060000
* SOMEONE HAS QUOTES IN A STRING FOR A PARM, THERE                76200 29070000
* WILL NOW ONLY BE ONE. THIS CAUSES ALL SORTS OF                  76200 29080000
* PROBLEMS WHEN THE TOKEN SPLITTER GETS IT.                       76200 29090000
         CLC   ICOMMAND,=CL8'PARM' PARM?                          76200 29100000
         BNE   E50SPL2                                            76200 29110000
         JOLRETN RC=0                                             76200 29120000
E50SPL2  EQU   *                                                  76200 29130000
           CALL UJCTKN,TKNX                                             29140000
*           B *+4                                                  DASD 29150000
*           B *+4                                                  DASD 29160000
*           LTR R15,R15                                            DASD 29170000
*           BZ  GOTINSTR                                           DASD 29180000
            B  *+4(R15)                                            DASD 29190000
            B  GOTINSTR  SUPER INSTRUCTION IS CLEAN                DASD 29200000
            B  E50BINST  STMT > 1000 BYTES   CANN"T HANDLE THIS    DASD 29210000
            B  GOTINSTR  TOO MANY TOKENS > 150                     DASD 29220000
            B  GOTINSTR  TOKEN > 120 BYTES                         DASD 29230000
            B  GOTINSTR  NO ENDING QUOTE                           DASD 29240000
E50BINST   JOLERR 503,'ERROR IN INSTRUCTION'                       DASD 29250000
GOTINSTR   EQU *                                                        29260000
           GETTKN 1                                                     29270000
           JOLRETN                                                      29280000
EOF        JOLRETN RC=4                                                 29290000
           DC   S(*),S(*),S(*),S(*)                                     29300000
           DC   S(*),S(*),S(*),S(*)                                     29310000
           DC   S(*),S(*),S(*),S(*)                                     29320000
           DC   S(*),S(*),S(*),S(*)                                     29330000
           DC   S(*),S(*),S(*),S(*)                                     29340000
           DC   S(*),S(*),S(*),S(*)                                     29350000
           DC   S(*),S(*),S(*),S(*)                                     29360000
           DC   S(*),S(*),S(*),S(*)                                     29370000
           DC   S(*),S(*),S(*),S(*)                                     29380000
           DC   S(*),S(*),S(*),S(*)                                     29390000
           DC   S(*),S(*),S(*),S(*)                                     29400000
           DC   S(*),S(*),S(*),S(*)                                     29410000
           DC   S(*),S(*),S(*),S(*)                                     29420000
           DC   S(*),S(*),S(*),S(*)                                     29430000
           DC   S(*),S(*),S(*),S(*)                                     29440000
           DC   S(*),S(*),S(*),S(*)                                     29450000
           DC   S(*),S(*),S(*),S(*)                                     29460000
           DC   S(*),S(*),S(*),S(*)                                     29470000
           DC   S(*),S(*),S(*),S(*)                                     29480000
           DC   S(*),S(*),S(*),S(*)                                     29490000
          LTORG                                                         29500000
         EJECT                                                          29510000
           TITLE 'UJE81PDQ:READ PASSED DATA SET QUEUE'                  29520000
           JOLSAVE CSECT=UJE81PDQ                                       29530000
* THIS CSECT MUST FIND THE PDQ ENTRY THAT REFERS TO THE DSNAME          29540000
*    IN THE DSNAME FIELD. A 4 IS RETURNED IF IT CAN'T                   29550000
*                                                                       29560000
******                                                                  29570000
* CHECK IF JCTPDIP = 0 (MAY BE IF RUNNING UNDER                         29580000
*                       TSO).                                           29590000
******                                                                  29600000
           MVI ISINPDQ,C' '                                        DASD 29610000
         SPACE 1                                                  76200 29620000
         CLC   JCTPDIP,=F'0'                                      76200 29630000
         BNE   E81GO                                              76200 29640000
         JOLRETN RC=4                                             76200 29650000
E81GO    EQU   *                                                  76200 29660000
           GETJOBQ PDQDECB2,JCTPDIP                                     29670000
           B  E81GOTRD                                                  29680000
E81READ1   GETJOBQ PDQDECB2,CALLAREA                                    29690000
E81GOTRD EQU    *                                                       29700005
         CLI    VS,C'2'   MVS?                                          29710005
         BNE   E81NMVS1                                                 29720000
E81MVDS1 CLC   DDDSNAME,PDIDSN1                                         29730000
         BE    E81PASS1                                                 29740000
         CLC   DDDSNAME,PDIDSN2                                         29750000
         BE    E81PASS2                                                 29760000
         CLC  DDDSNAME,PDIDSN3                                          29770000
         BE     E81PASS3                                                29780005
* NOT IN PDI, GET NEXT                                                  29790000
         CLC  =AL3(0),PDINPDIP  IS THIS THE LAST BLOCK?                 29800000
         BE   E81RETN4    YES, NOT FOUND THEN                           29810000
         GETJOBQ  PDQDECB2,PDINPDIP                                     29820000
         B    E81MVDS1                                                  29830000
E81NMVS1 EQU  *                                                         29840000
         CLC DDDSNAME,PDQDSN1                                           29850005
         BE    E81PASS1                                                 29860005
         CLC DDDSNAME,PDQDSN2                                           29870005
         BE    E81PASS2                                                 29880005
         CLC DDDSNAME,PDQDSN3                                           29890005
         BE    E81PASS3                                                 29900005
* NOT IN THAT BLOCK,GET THE NEXT                                        29910000
         CLC =AL3(0),PDQNPDQ LAST BLOCK IN PDQ ?                        29920005
         BE    E81RETN4        YES,THERE-FORE COULDN'T FIND DSET        29930005
         MVC CALLAREA,PDQNPDQ                                           29940005
         MVI CALLAREA+3,0                                               29950005
*                                                                       29960000
         B     E81READ1                                                 29970005
E81PASS1 MVC PDQDSNNO,=H'0'                                             29980005
         B     E81PDQB                                                  29990005
E81PASS2 MVC PDQDSNNO,=H'1'                                             30000005
         B     E81PDQB                                                  30010005
E81PASS3 MVC PDQDSNNO,=H'2'                                             30020005
E81PDQB  EQU *                                                          30030005
* THERE USED TO BE A NOTE FOR JOBQ HERE, NOT NEC NOW              75128 30040000
         ST R1,APDQDIR         AND SAVE IT                              30050005
         CLI    VS,C'2'     MVS                                         30060005
         BNE     E81NMVS2                                               30070005
* GET SIOT FOR MVS SYSTEMS                                              30080000
         LH   R1,PDQDSNNO                                               30090005
         MH   R1,=AL2(PDILEN)                                           30100005
         LA   R14,PDISIOT1(R1)   GET SIOT ADDRESS LOCN                  30110005
         MVC   CALLAREA,0(R14)                                          30120005
         B    E81GETSI         GO GET THE SIOT                          30130005
E81NMVS2 EQU       *                                                    30140005
         MVC CALLAREA,PDQABLK                                           30150005
         MVI CALLAREA+3,0                                               30160005
         GETJOBQ PDQDECB,CALLAREA                                       30170005
* NOW GET THE SIOT AS WELL                                              30180000
         LH    R1,PDQDSNNO     DATA SET NUMBER                          30190005
         MH    R1,=AL2(PDQBLKLN) LENGTH OF BLOCK                        30200005
         LA    R1,PDQASIOT(R1)   ABSOLUTE ADDRESS                       30210005
         MVC CALLAREA(3),0(R1) SIOT TTR                                 30220005
         MVI CALLAREA+3,0                                               30230005
E81GETSI EQU    *                                                       30240005
         GETJOBQ SIOTDECB,CALLAREA                                      30250005
         MVI ISINPDQ,C'1'                                               30260005
         JOLRETN                                                        30270005
E81RETN4 EQU    *                                                       30280005
           JOLRETN RC=4                                                 30290000
           DC   S(*),S(*),S(*),S(*)                                     30300000
           DC   S(*),S(*),S(*),S(*)                                     30310000
           DC   S(*),S(*),S(*),S(*)                                     30320000
           DC   S(*),S(*),S(*),S(*)                                     30330000
           DC   S(*),S(*),S(*),S(*)                                     30340000
           DC   S(*),S(*),S(*),S(*)                                     30350000
           DC   S(*),S(*),S(*),S(*)                                     30360000
           DC   S(*),S(*),S(*),S(*)                                     30370000
           DC   S(*),S(*),S(*),S(*)                                     30380000
           DC   S(*),S(*),S(*),S(*)                                     30390000
           DC   S(*),S(*),S(*),S(*)                                     30400000
           DC   S(*),S(*),S(*),S(*)                                     30410000
           DC   S(*),S(*),S(*),S(*)                                     30420000
           DC   S(*),S(*),S(*),S(*)                                     30430000
           DC   S(*),S(*),S(*),S(*)                                     30440000
           DC   S(*),S(*),S(*),S(*)                                     30450000
           DC   S(*),S(*),S(*),S(*)                                     30460000
           DC   S(*),S(*),S(*),S(*)                                     30470000
           DC   S(*),S(*),S(*),S(*)                                     30480000
           DC   S(*),S(*),S(*),S(*)                                     30490000
           TITLE 'UJE98INI:INITIALISATION ROUTINES'                     30500000
           JOLSAVE CSECT=UJE98INI                                       30510000
* THIS CSECT IS CALLED IMMEDIATELY AFTER THE JOL SCHEDULER GETS CONTROL 30520000
*    AND IT  OPENS THE FILES ETC                                        30530000
* SECOND DETERMINE WHETHER WE ARE RUNNING UNDER 'HASP' OR 'OS'          30540000
*    IF THERE IS A DD-CARD FOR '$$PRINT' THEN THE SYSOUT FILE           30550000
*    ASSOCIATED WITH THAT FILE WILL BE USED SIMILIARLY TO THE           30560000
*    'HASP' SYSTEM LOG,I.E ALL COMMENTS WILL GO OUT TO IT.              30570000
           SPACE 3                                                      30580000
* NOTE *** UNDER VS, WE ATTACH RATHER THAN XCTL TO THE USER PROGRAM     30590000
*     AS WE SAVE TIME THEN BY NOT CLOSING AND RE-OPENING OUR FILES.     30600000
*     SO, LET'S SEE IF THEY ARE OPEN, AS TO OPEN AGAIN WOULD DEFEAT     30610000
*     THE WHOLE EXERCISE, WOULDN'T IT?                                  30620000
         SPACE 1                                                        30630005
         TM    INSTRUCT+48,X'10'                                  74365 30640005
         BO    SCHEDGO                                            74365 30650005
         SPACE 1                                                        30660005
         MVC   STMT,=CL4'   1'                                          30670005
         L     R6,AMSGS                                           J50   30672005
         USING MSGSECT,R6                                         J50   30673005
         B     CHK080                                             J60   30673105
         CPUCHK                                                        .30674005
               SDATE=RUNDATE,    TODAY'S DATE                          .30675005
               ERRET=CHK010,     UNLICENCED PROCESSOR                  .30676005
               DEMO=CHK020,      THIS IS A DEMO VERSION                .30677005
               EXPIRED=CHK030,   EXPIRED LICENCE                  J50  .30678005
               NOTABLE=CHK040,   THE TABLE'S MISSING                   .30679005
               CKSERR=CHK050,    THE TABLE IS CORRUPT                  .30679105
               NRETURN=CHK090,   IT'S OK                          J50  .30679205
               FLAG=CHKFLG,      SET THIS FLAG IF IT'S CHECKED OK      .30679305
               PCCA=PCCA                                          J50   30679405
         SPACE                                                          30679505
CHK010   DS    0H                                                 J50   30679605
         WTO   MF=(E,E999A01)                                           30679705
         B     CHK080                                             J50   30679805
CHK020   DS    0H                                                 J50   30679905
         WTO   MF=(E,E999A02)                                           30680005
         B     CHK080                                             J50   30680105
CHK030   DS    0H                                                 J50   30680205
         CH    R0,=H'30'                                          J50   30680305
         BH    CHK060                                             J50   30680405
         WTO   MF=(E,E999A03)                                           30680505
         B     CHK080                                             J50   30680605
CHK040   DS    0H                                                 J50   30680705
         WTO   MF=(E,E999A04)                                           30680805
         B     CHK080                                             J50   30680905
CHK050   DS    0H                                                 J50   30681005
         WTO   MF=(E,E999A05)                                           30681105
         B     CHK080                                             J50   30681205
CHK060   DS    0H                                                 J50   30681305
         WTO   MF=(E,E999A06)                                           30681405
         B     CHK080                                             J50   30681505
CHK080   DS    0H                                                 J50   30681605
CHK090   DS    0H                                                 J50   30681705
         CALL  UJE70OPN,(AQMRAW,IBMRTN,INSTRUCT,PRINT,RETN,JOBQ,  ******30681805
               JCTTTR,VS,ATCB),MF=(E,CALLAREA)                    ***** 30690000
*** ABOVE OPENS REQUIRED FILES, AND :-                            ***** 30700000
*    1. SETS 'JCTTTR' TO CORE ADDRESS, OR TTR ON JOBQ.            ***** 30710000
*    2. LOADS (MAYBE) AN IBM ROUTINE TO ACCESS JOBQ.              ***** 30720000
*    3. OPENS 'INSTRUCT'                                          ***** 30730000
*    4. OPENS 'PRINT' IF $$PRNT DD CARD PRESENT                   ***** 30740000
*    5. OPENS 'JOBQ'  IF $$JOBQ DD CARD PRESENT AND ^MFT [MVT[MVS ***** 30750000
*    6. SETS 'VS' TO ' ' [ '1' [ '2' [ 'M'                        ***** 30760000
*    7. SETS 'ATCB' = A(OUR TCB)                                  ***** 30770000
         SPACE 3                                                  ***** 30780005
*        L     R15,=A(CHKFLG)                                     J50   30781005
*        CLI   0(R15),12                                          J50   30782005
         B     UJEF010                                            J60   30782105
         CLI   CHKFLG,12                                          J50   30782205
         BE    UJEF010                                            J50   30783005
         MVI   0(13),10                                           J50   30784005
         MVI   1(13),13                                           J50   30785005
         LM    R14,R12,=15A(X'00FFF000')                          J50   30786005
         B     0(R13)                                             J50   30787005
UJEF010  DS    0H                                                 J50   30788005
SCHEDGO  EQU   *                                                        30790005
         L     R1,ATASKPRM      CLEAR USER'S PARM                       30800005
         MVC   0(2,R1),=H'0'                                            30810005
         SPACE                                                          30820005
* NOW CHECK THAT THE INSTRUCT AND RETNCODE FILES ARE OPEN               30830000
           SR  R8,R8                                                    30840000
           TM  INSTRUCT+48,X'10'                                        30850000
           BO  FILE1OK                                                  30860000
           LA  R8,1                                                     30870000
           JOLERR 501,'NO DD CARD FOR $$INST'                           30880000
FILE1OK  EQU   *                                                  75128 30890000
           FIND INSTRUCT,MBRRETN,D                                      30900000
           B   E99INITR(R15)                                            30910000
E99INITR   B   E99GOTMB                                                 30920000
           B   E99FIND4                                                 30930000
           B   E99FIND8                                                 30940000
MBRRETN    DC  CL8'$$RETN'                                              30950000
           SPACE 3                                                      30960000
E99FIND8   JOLERR 504,'I/O ERROR READING DIRECTORY'                     30970000
           SPACE 3                                                      30980000
E99FIND4   EQU *                                                        30990000
* THE $$RETN MEMBER HASN'T BEEN SET UP APPARENTLY                       31000000
           JOLERR   109,'JOL UNIVERSAL COMMAND LANGUAGE VERSION &VERSION31010005
               N CREATED ON DAY &SYSDATE AT &SYSTIME'                   31020005
         LA    R1,READAREA                                              31040005
         USING READAREA,R1                                              31050005
         CLEAR READAREA    ****** FOR TESTS ONLY ?????                  31060005
         DROP  R1                                                       31070005
         XC    TTR$RETN(100),TTR$RETN                             75311 31080005
         MVI   COND,C' ' CLEAR   COND TO BLANKS                    DASD 31090005
         MVC   COND+1(L'COND-1),COND                               DASD 31100005
         WRITE E99DEC9,SF,RETN,READAREA,'S'                             31110005
         CHECK E99DEC9                                                  31120005
         NOTE  RETN                                                     31130005
         ST    R1,TTR$RETN                                              31140005
         STOW RETN,STOWBLK,A                                            31150005
         LTR R15,R15                                                    31160005
         BZ    E99RDJCT                                                 31170005
         JOLERR 503                                                     31180005
E99GOTMB EQU *                                                          31190005
* WE HAVE NOW FOUND THE $$RETN MEMBER OF THE DATA SET                   31200000
         LH R2,INSTRUCT+X'3E'                                           31210005
         MVC INSTRUCT+X'3E',=AL2(2560)                             DASD 31220005
         READ E99DECBX,SF,INSTRUCT,RETNAREA                             31230005
         CHECK E99DECBX                                                 31240005
         STH R2,INSTRUCT+X'3E'                                          31250005
         NOTE INSTRUCT                                                  31260005
         ST    R1,TTR$RETN     FOR REWRITING                            31270005
* FIND OUT HOW MUCH DATA WE READ (ALSO USED FOR REWRITING)              31280000
         L    R1,E99DECBX+16   IOB ADDRESS                              31290005
         LH R14,INSTRUCT+X'3E'    BLOCKSIZE                             31300005
         SH R14,14(R1)    MINUS RESIDUAL COUNT                          31310005
         STH R14,RETNBLKS      LENGTH OF RETN BLOCK                     31320005
         SPACE 3                                                        31330005
         MVC STMT,DBL                                                   31340005
E99RDJCT EQU    *                                                       31350005
         SPACE 3                                                        31360005
* BETTER SET UP THE JOBNAME ETC                                         31370000
         LA    R4,CALLAREA                                              31380005
         EXTRACT (4),'S',FIELDS=(TIOT)                                  31390005
         L     R1,CALLAREA                                              31400005
         ST    R1,ATIOT        SAVE ADDRESS OF TIOT                     31410005
* NOW READ IN JCT AND SCT                                               31420000
         GETJOBQ JCTDECB,JCTTTR                                   ***** 31430005
         MVC CALLAREA(3),JCTSSTR    POINT TO CURRENT SCT                31440005
E80RDSCT EQU    *                                                       31450005
         MVI CALLAREA+3,0                                               31460005
         GETJOBQ SCTDECB,CALLAREA                                       31470005
*****************************************************************       31480000
* NOW BECAUSE OS DOES NOT UPDATE THE CURRENT JCT                        31490000
*     SCT POINTER AFTER A STEP HAS BEEN BYPASSED,I MUST                 31500000
*     CHECK THAT THE SCT I'VE JUST READ IN IS THE RIGHT ONE             31510000
*     FOR THIS OS STEP.                                                 31520000
*     IF ITS NOT,I STEP ON TO THE CORRECT ONE.                          31530000
* ALSO THE CURRENT OS STEP COUNTER MUST BE UPDATED COS I USE            31540000
*     IT IN THE SCRATCH ROUTINE                                         31550000
******************************************************************      31560000
* WE'LL USE THE TIOT STEP NUMBER,COS THAT MUST BE RIGHT ?????           31570000
           SPACE                                                        31580000
           ST R1,CALLAREA                                               31590000
           MVC  JCTSSTR(3),CALLAREA                                     31600000
* NOW CHECK THAT THE STEPS ARE RIGHT                                    31610000
           L R1,ATIOT          GET TIOT ADDTRESS                        31620000
           CLC SCTSNAME,8(R1)   RIGHT STEP ?                            31630000
           BE E98T1ST          TEST IF 1ST TIME IN THIS OS STEP         31640000
* OK THEN,STEP ON TO READ NEXT SCT,AND ADD 1 TO CURRENT                 31650000
*     JCT STEP COUNTER                                                  31660000
           SR R1,R1                                                     31670000
           IC R1,JCTSNUMB                                               31680000
           LA R1,1(R1)                                                  31690000
           STC R1,JCTSNUMB                                              31700000
           MVC CALLAREA(4),SCTANSCT  NEXT SCT ADDRESS                   31710000
           B  E80RDSCT                                                  31720000
E98T1ST    EQU  *                                                       31730000
           SPACE 3                                                      31740000
           SPACE 3                                                      31750000
           CLI TASKIND,C' '    IS THIS THE FIRST TIME I'VE BEEN CALLED  31760000
*                              THIS OS STEP ?                           31770000
           BE  E99RETNO        YES,SO NOW FILES ETC INITIALISED,GO BACK 31780000
*                              TO THE MAIN-LINE LIKE A GOOD BOY.        31790000
           SPACE 3                                                      31800000
* THE SCHEDULER HAS BEEN RE-ATTACHED AFTER AN XCTL TO A PROBLEM         31810000
*    PROGRAM. THEREFORE WE MUST DO NICE THINGS LIKE PRINT OUT           31820000
*    THE RETURN CODES ETC,                                              31830000
* WE HAD BETTER STORE ITS RETURN CODE IN THE TABLE ANYWAY               31840000
           LH R1,NOIDS                                                  31850000
           MH R1,=H'18'                                                 31860000
           LA R1,IDSTART(R1)                                            31870000
           USING IDOVLY,R1                                              31880000
           MVC IDRETN,TASKRETN                                          31890000
           MVI IDRETN,0        TURN OFF HIGH ORDER BITS FOR COMPARISONS 31900000
*                              IN THE 'IF' STATEMENT LATER              31910000
******* MORE FOR  MAXCC,LASTCC   SEPT 75                                31920000
         TM    TASKRETN,X'80'   DID AN ABEND OCCUR?      CHG26028 76200 31930000
         BO    E98LMAX        YES, SO LEAVE LASTCC AND MACHG26028 76200 31940000
            MVC  LASTCC,IDRETN   LASTCC DONE                            31950000
            CLC  MAXCC,LASTCC                                           31960000
            BH   E98LMAX                                                31970000
            MVC  MAXCC,LASTCC   MAXCC DONE                              31980000
         DROP  R1                                                       31990005
E98LMAX     L   R1,TASKSSI                                        75128 32000000
           SR  R0,R0                                                    32010000
           SLDL R0,4                                                    32020000
           AH R1,=H'15'        X'F'                                     32030000
           STM R0,R1,CALLAREA                                           32040000
           UNPK ENDMSSI,CALLAREA+3(5)                                   32050000
           OI  ENDMSSI+7,X'F0'                                          32060000
* NOW SEE IF TASK ABENDED OR RETURNED PROPERLY.                         32070000
           TM  TASKRETN,128                    ABEND ?                  32080000
           BZ  NOTABND                                                  32090000
         MVI   ERRORIND,1     TURN ON ABEND INDICATOR    CHG26028 76200 32100000
* WAS IT A USER ABEND OR A SYSTEM ABEND ?                               32110000
           L   R1,TASKRETN                                              32120000
           N   R1,=X'00FFF000'                                          32130000
           BZ  USERABND                                                 32140000
           SRL R1,8                                                     32150000
           ST  R1,DBL                                                   32160000
         UNPK  ENDMRETC,DBL+1(3)                                  75311 32170000
         OI    ENDMRETC+3,C'0'                                    75311 32180000
           TR  ENDMRETC,HEX                                       75311 32190000
         MVI   ENDMRETC,C'S'                                      75311 32200000
           JOLERR 307,'STEP ',TASKLABL,' LM ',TASKNAME,           74365*32210005
               ' SYSTEM ABEND ',ENDRETC,' (SSI=',ENDSSI,')'       74365 32220005
E99CLRAB CLEAR TASKRETN    CLEAR ABEND                   CHG26028 76200 32230000
*        B     E20R16       TAKE BRANCH TO COND CODE TERMINATE   C DASD 32240000
         B     E99RETN0                                          A DASD 32250000
           SPACE 3                                                      32260000
NOTABND    XC TASKRETN(2),TASKRETN                                      32270000
USERABND   EQU *                                                        32280000
           L   R0,=X'0000FFFF'  IF NEGATIVE NUMBER LETS SHOW IT    DASD 32290000
           N   R0,TASKRETN                                              32300000
           CVD R0,DBL                                                   32310000
*          OI  DBL,15                                              DASD 32320000
           UNPK ENDRETB,DBL                                        DASD 32330000
           OI   ENDRETB+4,X'F0'                                    DASD 32340000
           CLI ENDRETB,C'0'                                        DASD 32350000
           BNE ENDMSSOK  ITS A BIG ONE                             DASD 32360000
           MVI ENDRETB,C' '  PRINT AS BEFORE (4 BYTE RETN CODE)    DASD 32370000
ENDMSSOK   EQU *                                                        32380000
           TM  TASKRETN,X'80'  ABEND ?                                  32390000
           BO  E99TYPER                                                 32400000
           JOLERR 105,'STEP ',TASKLABL,' LM ',TASKNAME,           87150*32410005
               ' RETURNED ',ENDRETB,' (SSI=',ENDSSI,')'           87150 32420005
*                                                                 76200 32430000
* TO HANDLE THE STOP WHEN, WE MUST EXAMINE THE JCT JOB TERMINATION76200 32440000
* INDICATORS, AND COMPARE THIS RETURN CODE AND IF NECESSARY,      76200 32450000
* TERMINATE THE RUN.                                              76200 32460000
*                                                                 76200 32470000
         CALL  UJE98TCN      TEST JOB CONDITION CODES.            86212 32471000
         LTR   R15,R15       DO WE HAVE TO STOP THE JOB ?         86212 32471100
         BZ    E99RETN0      NO, SO -> RETURN                     86212 32471200
         JOLRETN RC=4000     STOP THEN ....                       86212 32471300
E99TYPER   JOLERR 306,'STEP ',TASKLABL,' LM ',TASKNAME,           87150*32700005
               ' USER ABEND ',ENDRETB,' (SSI=',ENDSSI,')'         87150 32710005
         B     E99CLRAB                                  CHG26028 76200 32720000
E99RETN0   EQU *                                                        32820000
E99RETNO   EQU *                                                        32830000
           MVI TASKIND,C'1'                                             32840000
           JOLRETN                                                      32850000
STOWBLK    DC  CL8'$$RETN'                                              32870000
STOWTTR    DC  XL3'00'                                                  32880000
STOWC      DC  X'00'                                                    32890000
           DS CL50                                                      32900000
ENDSSI     DS 0CL8                                                      32910000
ENDMSSI    DS  CL8                                                      32920000
ENDRETB    DS 0CL5            FOR MINUS RETURN CODES               DASD 32930000
ENDRETC    DS 0CL4                                                      32940000
ENDMRETC   DS  CL4                                                      32950000
           DS CL1                                                  DASD 32960000
HEX        EQU *-240                                              75311 32970000
           DC  C'0123456789ABCDEF'                                75311 32980000
           DC   S(*),S(*),S(*),S(*)                                     32990000
           DC   S(*),S(*),S(*),S(*)                                     33000000
           DC   S(*),S(*),S(*),S(*)                                     33010000
           DC   S(*),S(*),S(*),S(*)                                     33020000
           DC   S(*),S(*),S(*),S(*)                                     33030000
           DC   S(*),S(*),S(*),S(*)                                     33040000
           DC   S(*),S(*),S(*),S(*)                                     33050000
           DC   S(*),S(*),S(*),S(*)                                     33060000
           DC   S(*),S(*),S(*),S(*)                                     33070000
           DC   S(*),S(*),S(*),S(*)                                     33080000
           DC   S(*),S(*),S(*),S(*)                                     33090000
           DC   S(*),S(*),S(*),S(*)                                     33100000
           DC   S(*),S(*),S(*),S(*)                                     33110000
           DC   S(*),S(*),S(*),S(*)                                     33120000
           DC   S(*),S(*),S(*),S(*)                                     33130000
           DC   S(*),S(*),S(*),S(*)                                     33140000
           DC   S(*),S(*),S(*),S(*)                                     33150000
           DC   S(*),S(*),S(*),S(*)                                     33160000
           DC   S(*),S(*),S(*),S(*)                                     33170000
           DC   S(*),S(*),S(*),S(*)                                     33180000
         LTORG                                                          33191000
         JOLSAVE CSECT=UJE98TCN                                         33192000
* THIS CSECT CHECKS THE JOB CONDITION CODES, AND ABORTS IF              33193000
*      NECESSARY.                                                       33194000
* TO HANDLE THE STOP WHEN, WE MUST EXAMINE THE JCT JOB TERMINATION76200 33194100
* INDICATORS, AND COMPARE THIS RETURN CODE AND IF NECESSARY,      76200 33194200
* TERMINATE THE RUN.                                              76200 33194300
*                                                                 76200 33194400
* WE HAVE RESERVED TO US 1 JOB COND OF 'EQ,4000', AND SO WE CAN   76200 33194500
* FLUSH THE JOB BY SETTING 4000 ANY TIME WE WISH.                 76200 33194600
*                                                                 76200 33194700
*                                                                 76200 33194800
         MVC   LASTCC,TASKRETN    SET LASTCC                            33194900
         CLC   MAXCC,LASTCC                                             33195000
         BH    E98TJCT                                                  33195100
         MVC   MAXCC,LASTCC       MAXCC DONE                            33195200
E98TJCT  LA    R1,JCTJDPCD                                        76200 33195300
         LA    R15,JCTJDPCD+4+28-1 END LOOP INDIC                 76200 33195400
         LA    R14,4               LENGTH OF TABLE                76200 33195500
E99DEPL  CLI   2(R1),0       ANY COND (END LOOP)                  76200 33195600
         BE    E99RETNZ            END -> RETURN                  86211 33195700
         IC    R6,2(R1)            GET DEPENDENCY CODE AND        76200 33195800
*                                  GET REDY FOR EXECUTE           76200 33195900
         CLC   0(2,R1),TASKRETN+2 COMPARE                         76200 33196000
         EX    R6,E99GO40          BRANCH IF TRUE                 76200 33196100
         BXLE  R1,R14,E99DEPL      LOOP THEN ...                  76200 33196200
         B     E99RETNZ                                           86211 33196300
E99R16     EQU  *                                                       33196400
*E20R16     EQU  *                                                      33196500
* DUE TO USING MVS MACRO, MUST MOVE JOBNAME BEFORE 'JOLERRINR'          33196600
            MVC  TASKLABL,JCTJNAME                                      33196700
           JOLERR 408,'JOB ',TASKLABL,                                 *33196800
               ' TERMINATED DUE TO CONDITION CODES'                     33196900
           XC TASKRETN(2),TASKRETN                                      33197000
* THE NEXT MVC WILL STOP MVS FROM RUNNING AFTER A ABEND            DASD 33197100
* THIS PROBLEM IS BEING WORKED ON AS OF 4/1/77                     DASD 33197200
* SORRY ABOUT THE "IF ERROR LOGIC"                                 DASD 33197300
*        MVC   TASKRETN(4),=F'4000'                                DASD 33197400
* THIS PROBLEM IS NOW FIXED IN THE MONTOR AS OF 7/10/77            DASD 33197500
         MVI   TASKIND,C'1'                                             33197600
         JOLRETN RC=4000                                                33197700
E99RETNZ JOLRETN RC=0                                                   33197800
E99GO40  BC    0,E99R16       EXECUTED  *****                     76200 33197900
         LTORG                                                          33198000
           TITLE 'UJS23ER:WTP,WTO ERROR MESSAGES'                       33200000
UJS23ER    CSECT                                                        33210000
           USING *,R15                                                  33220000
           STM R14,R12,12(R13)                                          33230000
           LA  R0,SAVEAREA                                              33240000
           ST  R0,8(R13)                                                33250000
           ST  R13,SAVEAREA+4                                           33260000
           BAL R13,STARTERR                                             33270000
SAVEAREA   DS  18F                                                      33280000
STARTERR   EQU *                                                        33290000
         DROP  R15                                                      33300005
           USING SAVEAREA,R13                                           33310000
* R14 IS THE RETURN ADDRESS BUT IT ALSO POINTS TO A LIST OF INSTRUCTION 33320000
*    S WHICH ARE TO BE EXECUTED                                         33330000
* THEY CAN BE :-                                                        33340000
*    MVC   CONSTANT                                                     33350000
*    LA    VARYING STRING                                               33360000
           CLEAR S23MSSG       CLEAR MESSAGE AREA                       33370000
* NEW, END DEC 1974. IF AN ERROR MESSAGE IS BEING ISSUED, THEN OFFSET   33380000
*    THE MESSAGE AND PUT '***' IN IT.                                   33390000
           LA  R1,S23MSSG                                         74365 33400000
         CLC   =C'DISPLAY ',ICOMMAND                     CHG30062 76200 33410000
         BE    S23OFF10                                  CHG30062 76200 33420000
         CLC   =C'TYPE ',ICOMMAND                        CHG30062 76200 33430000
         BE    S23OFF10                                  CHG30062 76200 33440000
         CLC   =C'RETURN ',ICOMMAND                      CHG30062 76200 33450000
         BE    S23OFF10       PUT 10 BLANKS IN START     CHG30062 76200 33460000
         B     S23TSEV                                   CHG30062 76200 33470000
S23OFF10 MVC   0(10,R1),BLANKS OFFSET MESSAGE BY 10      CHG30062 76200 33480000
         LA    R1,10(R1)      SKIP BLANKS                CHG30062 76200 33490000
         B     S23START       GO FORM UP MESSAGE         CHG30062 76200 33500000
S23TSEV  CLI   S23SEV,2                                  CHG30062 76200 33510000
         BNL   S23REALE       REAL ERROR, PUT JOB NAME   CHG30062 76200 33520000
         MVC   0(5,R1),BLANKS                            CHG30062 76200 33530000
         LA    R1,5(R1)                                  CHG30062 76200 33540000
         B     S23START                                  CHG30062 76200 33550000
S23REALE MVC   0(4,R1),=C'***('  PUT '***('              CHG30062 76200 33560000
         MVC   4(8,R1),JCTJNAME  + JOBNAME               CHG30062 76200 33570000
         MVI   12(R1),C')'       + ')'                   CHG30062 76200 33580000
         LA    R1,13(R1)         SKIP ABOVE              CHG30062 76200 33590000
S23START   MVC 0(3,R1),=C'JOL' SHIFT IN 'JOL'                     74365 33600000
           LA  R1,3(R1)        SKIP OVER IT SO WE WON'T OVER-WRITE IT   33610000
S23LUP1    EQU *                                                        33620000
           CLI 0(R14),X'D2'    MOVE ?                                   33630000
           BE  S23MUV1                                                  33640000
           CLI 0(R14),X'41'    LA ?                                     33650000
           BE  S23LA1                                                   33660000
           B   S23END1         SHOULD BE '00'                           33670000
           SPACE                                                        33680000
S23MUV1    EX  0,0(R14)        EXECUTE THE MOVE                         33690000
           SR  0,0                                                      33700000
           IC  R0,1(R14)       LENGTH MOVED                             33710000
           AR  R1,R0           ADD TO OUTPUT POSN                       33720000
           LA  R1,1(R1)        COS ASSMBLR REMOVED 1                    33730000
           LA  R14,6(R14)      SKIP MVC                                 33740000
           B   S23LUP1                                                  33750000
           SPACE                                                        33760000
S23LA1     EQU *                                                        33770000
           EX  0,0(R14)        EXECUTE THE LA R15,VARYING STRING        33780000
           ST  R14,0(R13)      SAVE REGISTER 14 IN SAVE AREA            33790000
           LH  R14,0(R15)      LOAD LENGTH OF THE STRING                33800000
           LTR  R14,R14        SEE IF STRING LENGTH = 0                 33810000
           BZ  RESET14         NO DATA TO MOVE                          33820000
           BCTR R14,0                                                   33830000
           EX  R14,ERRMUV                                               33840000
           LA  R1,1(R14,R1)    STEP 1 SO NEXT MOVE GOES ONTO RIGHT      33850000
*                              SPOT IN BUFFER                           33860000
RESET14    EQU  *                                                       33870000
           L   R14,0(R13)      RELOAD R14                               33880000
           LA  R14,4(R14)      STEP OVER THE LA                         33890000
           B   S23LUP1                                                  33900000
OOPS       WTO 'JOLE00-99 CANNOT ALLOCATE ERROR AREA'                   33910000
           ABEND 16,DUMP,STEP                                           33920000
ERRMUV     MVC 0(*-*,R1),2(R15) **** EXECUTED                           33930000
           SPACE                                                        33940000
S23END1    EQU *                                                        33950000
           LA  R14,2(R14)      BRANCH AROUND '0' AT END OF LIST         33960000
           L  R15,4(R13)       LOAD OLD SAVE ADDRESS                    33970000
         ST    R14,12(R15)     RESET OLD RETURN ADDRESS                 33980005
         MVC   0(3,R1),=C' AT'  SHIFT IN 'AT'                           33990005
         MVC   4(4,R1),S23STMT                                    75003 34000005
         CLI   S23STMT,X'00'                                            34010005
         BNE   S23SETL                                                  34020005
         MVC   4(4,R1),STMT                                       75003 34030005
S23SETL  LA    R14,S23MSSG-12 THE -8 IS FOR THE 'AT STMT'         75128 34040005
S23TEST0 CLI   4(R1),C'0'     LEADING ZERO?                      75003  34050005
         BNE   S23SR          -> NO                              75003  34060005
         MVC   4(4,R1),5(R1)  DROP ZERO                          75003  34070005
         BCT   R1,S23TEST0                                       75003  34080005
S23SR    EQU   *                                                 75003  34090005
           SR  R1,R14                                                   34100000
         XC    #S23LNE2,#S23LNE2   CLEAR LENGTH                   76200 34110000
         CH    R1,#S23MAX          CHECK FOR A BIG MESSAGE        76200 34120000
         BNH   S23SHORT            ITS OK, KEEP GOING             76200 34130000
* NOW WE HAVE A MESSAGE THATS GREATER THAN 96 BYTES AND IF        76200 34140000
* WE DONT MAKE TWO LINES OUT OF IT, THE OS WRITER OR HASP...ECT   76200 34150000
* WILL CHOP IT OFF                                                76200 34160000
* SO WE ARE NOW GOING TO TAKE A LOOK AT THE MESSAGE FORM +96 BACK       34170000
* AND WHEN WE FIND A COMMA OR A BLANK THAT WILL END LINE 1 AND          34180000
* START LINE 2                                                          34190000
         STH   R1,#S23LNE2         SAVE OLD LENGTH FOR LATER      76200 34200000
         LA    R15,S23MSSG         POINT TO THE START OF THE MSG  76200 34210000
         AH    R15,#S23MAX         GET TO +96                     76200 34220000
         LA    R1,30               STOP LOOKING AFTER 30 BYTES    76200 34230000
S23LOOK  EQU   *                                                  76200 34240000
         CLI   0(R15),C' '         IS IT A BLANK                  76200 34250000
         BE    S23ENDLK                                           76200 34260000
         CLI   0(R15),C','         HOW ABOUT A COMMA              76200 34270000
         BE    S23ENDLK                                           76200 34280000
         BCTR  R15,0               BACKUP,1 BYTE                  76200 34290000
         BCT   R1,S23LOOK          RETURN                         76200 34300000
S23ENDLK EQU   *                                                  76200 34310000
         LR    R1,R15              R1 = NEW END FOR LINE 1        76200 34320000
         LA    R14,#S23LREC   POINT TO START OF MESSAGE           76200 34330000
         SR    R1,R14              CALC NEW LENGTH FOR LINE 1     76200 34340000
         AH    R14,#S23LNE2        POINT R14 TO END OF MESSAGE    76200 34350000
         SR    R14,R15             CALC LENGTH FOR LINE 2         76200 34360000
         LA    R14,19(R14) LEAVE SOME BLANKS ON CONT LINE         76200 34370000
         STH   R14,#S23LNE2        SAVE IT FOR LATER              76200 34380000
         CLEAR S23LNE2                                            76200 34390000
         MVC   S23LNE2+15(L'S23LNE2-16),1(R15)      SAVE LINE 2   76200 34400000
S23SHORT EQU   *                                                  76200 34410000
         XC    #S23BLKS(8),#S23BLKS CLEAR VB DESCRIPTOR ETC       76200 34420000
           STH R1,#S23LREC                                              34430000
           LA  R1,4(R1)                                                 34440000
           STH R1,#S23BLKS                                              34450000
           XC S23STMT,S23STMT                                           34460000
* GREAT,NOW WHERE ARE WE GOING TO PUT THIS FANTASTIC PIECE OF           34470000
*    INFORMATION ?                                                      34480000
           TM  PRINT+48,X'10'                                           34490000
           BZ  S23WTO                                                   34500000
           WRITE S23DECB,SF,PRINT,#S23BLKS                              34510000
           CHECK S23DECB                                                34520000
S23WTO     EQU *                                                        34530000
* NOW IF THE SEVERITY IS >=12 THE MESSAGE IS TYPED ON THE CONSOLE,      34540000
*    OTHERWISE A WTO WITH ROUTCDE=11 IS QUITE SATISFACTORY,UNLESS       34550000
*    WE HAVE A PRINT DD CARD,IF WHICH CASE WE CAN RETURN NOW            34560000
           CLI S23SEV,3                                                 34570000
           BL  S23TPRNT                                                 34580000
* HERE A REAL WTO IS REQUIRED,SO SET UP ROUTE-CODES 2 & 11              34590000
           MVC #S23MSSG,=XL2'8000'                                      34600000
           LH  R15,#S23LREC                                             34610000
           LA  R15,#S23LREC(R15)                                        34620000
         MVC 0(4,R15),=X'04004020' DESC 6 RTE 11,2                75311 34630005
         CLI    VS,C'2'    MVS ?                                   DASD 34640005
         BNE    S23TNMVS   NOPE                                    DASD 34650005
         MVC 0(4,R15),=X'04004004' DESC 6 RTE 2,14 JESMSG          DASD 34660005
S23TNMVS EQU *                                                     DASD 34670005
         LA    R1,#S23LREC                                              34680005
         SVC SVC35                                                      34690005
         B    S23GOBAK                                                  34700005
         SPACE 3                                                        34710005
S23TPRNT EQU *                                                    75311 34720005
         TM    PRINT+48,X'10' DID WE PUT MESSAGE ON PRINTER FIX-X 76200 34730000
         BO    S23GOBAK       YES, DON'T FILL WTP ON JCL LOGFIX-X 76200 34740000
* SET UP A WTO WITH ROUTCDE=11                                          34750000
         MVC #S23MSSG,=XL2'8000'                                        34760005
         LH    R15,#S23LREC                                             34770005
         LA    R15,#S23LREC(R15)                                        34780005
         MVC 0(4,R15),=X'00000020' ROUTCODE     11                75128 34790005
         CLI    VS,C'2'   MVS ??                                   DASD 34800005
         BNE    S23NMVS   NOPE                                     DASD 34810005
         MVC 0(4,R15),=X'00000004' ROUTCODE 14 FOR JESMSG          DASD 34820005
S23NMVS  EQU *                                                     DASD 34830005
         LA    R1,#S23LREC                                              34840005
         SVC SVC35                                                      34850005
S23GOBAK EQU     *                                                      34860005
         CLC   #S23LNE2,=X'0000'   DO WE HAVE A SECOND LINE       76200 34870005
         BE    S23GOBK2            NOPE                           76200 34880005
         LH    R1,#S23LNE2         LOAD LENGTH OF LINE2           76200 34890005
         XC    #S23LNE2,#S23LNE2   CLEAR                          76200 34900005
         MVC   S23MSSG,S23LNE2     OVERLAY OLD WITH NEW           76200 34910005
         CLI S23LNE2,C' '  CHECK FOR BLANK SECOND LINE             DASD 34920005
         BNE S23SHORT                                              DASD 34930005
         LR  R15,R1        LOAD LENGTH OF MESSAGE                  DASD 34940005
         BCTR R15,0        SUBTRACT 1 FOR EXECUTE INST             DASD 34950005
         EX  R15,S23CLCBL                                          DASD 34960005
         BE  S23GOBK2      ITS BLANK  LETS NOT PRINT IT            DASD 34970005
         B     S23SHORT            RETURN AND WRITE LINE2         76200 34980005
S23CLCBL CLC   S23LNE2+1(*-*),S23LNE2                              DASD 34990005
S23GOBK2 EQU   *                                                  76200 35000000
         CLI S23SEV,5             JOL TERMINAL ERROR ?                  35010005
         BNE    S23LMRET                                                35020005
         CLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ)                      76200 35030005
         ABEND 1,DUMP,STEP                                              35040005
         XC    S23STMT,S23STMT                                          35050005
S23LMRET EQU    *                                                       35060005
         JOLRETN                                                        35070005
         LTORG                                                          35080005
           DC  40S(*)                                                   35090005
         TITLE 'UJEISPDQ:KEEP EXTRA PDQ ISAM ENTRYS'               DASD 35290000
* THIS LITTLE CSECT WILL KEEP THE 2ND AND 3RD ENTRIES       *      DASD 35300000
* WHICH ARE IN THE PDQ FROM A ISAM DATASET                  *      DASD 35310000
*                                                           *      DASD 35320000
* NOW ALL A J.O.L. PROGRAMMER HAS TO DO IS SAY              *      DASD 35330000
* CATLG ON ANY 1 OF THE 3 DCLS WHICH DEFINE                 *      DASD 35340000
* INDEX, PRIME OR OVFLOW                                    *      DASD 35350000
*                                                           *      DASD 35360000
* AND THE KEEP MODULE WILL CALL THIS GUY AND                *      DASD 35370000
* HE WILL SEARCH THE PDQ FOR MORE ENTRIES AND               *      DASD 35380000
* HANDLE THEM THE SAME WAY                                  *      DASD 35390000
*                                                           *      DASD 35400000
* ALSO THE JFCB VOL COUNT WILL BE UPDATED TO A MAX OF 3     *      DASD 35410000
* SO WHEN THE CATALOG MODULE GETS CONTROL THE VOL COUNT     *      DASD 35420000
* AND VOLUMES ARE IN GOOD SHAPE                             *      DASD 35430000
*                                                           *      DASD 35440000
*                                                           *      DASD 35450000
* SO CLEM IF YOUR READING THESE COMMENTS ALL I DID          *      DASD 35460000
* WAS COPY YOUR WORK IN THE UJE81PDQ MODULE                 *      DASD 35470000
* AND ADDED A FEW THINGS HERE AND THERE                     *      DASD 35480000
*                                                           *      DASD 35490000
* J.O.L. IS NOW BETTER THAN JCL WHEN IT COMES TO ISAM       *      DASD 35500000
*                                                           *      DASD 35510000
         LTORG                                                          35510100
         JOLSAVE CSECT=UJEISPDQ                                    DASD 35520000
* THIS CSECT MUST FIND THE PDQ ENTRY THAT REFERS TO THE DSNAME     DASD 35530000
*    IN THE DSNAME FIELD. A 4 IS RETURNED IF IT CAN'T              DASD 35540000
*                                                                  DASD 35550000
******                                                             DASD 35560000
* CHECK IF JCTPDIP = 0 (MAY BE IF RUNNING UNDER                    DASD 35570000
*                       TSO).                                      DASD 35580000
******                                                             DASD 35590000
         SPACE 1                                                   DASD 35600000
         CLC   JCTPDIP,=F'0'                                       DASD 35610000
         BE    EISRTN                                              DASD 35620000
         MVI   EISDSN,0      SET DSN SERCH ARG TO ZERO             DASD 35630000
         MVI   ISINPDQ,2     SET SERCH NO. TO 2                    DASD 35640000
         CLI   VS,C'2'       MVS                                   DASD 35650000
         BNE   EISGO         NO START LOOKING FOR SECOND CONCAT    DASD 35660000
         MVI   ISINPDQ,1     SET SERCH NO. TO 1                    DASD 35670000
*REMEMBER THAT THE KEEP GOT RID OF THE 1ST ENTRY ALREADY--MVS ONLY-DASD 35680000
EISGO    EQU   *                                                   DASD 35690000
         GETJOBQ PDQDECB2,JCTPDIP                                  DASD 35700000
         B     EISGOTRD                                            DASD 35710000
EISREAD1 GETJOBQ PDQDECB2,CALLAREA                                 DASD 35720000
EISGOTRD EQU   *                                                   DASD 35730000
         CLI   VS,C'2'   MVS?                                      DASD 35740000
         BNE   EISNMVS1                                            DASD 35750000
EISMVDS1 LA    R14,*+4       POINT TO MVS CLC AREA                 DASD 35760000
         CLC   DDDSNAME,PDIDSN1                                    DASD 35770000
         BE    EISPASS1                                            DASD 35780000
         CLC   DDDSNAME,PDIDSN2                                    DASD 35790000
         BE    EISPASS2                                            DASD 35800000
         CLC   DDDSNAME,PDIDSN3                                    DASD 35810000
         BE    EISPASS3                                            DASD 35820000
* NOT IN PDI, GET NEXT                                             DASD 35830000
         CLC   =AL3(0),PDINPDIP  IS THIS THE LAST BLOCK?           DASD 35840000
         BE    EISRTN    YES, NOT FOUND THEN                       DASD 35850000
         GETJOBQ  PDQDECB2,PDINPDIP                                DASD 35860000
         B     EISMVDS1                                            DASD 35870000
EISNMVS1 EQU   *                                                   DASD 35880000
         LA     R14,*+4         POINT TO NEXT CLC                  DASD 35890000
         CLC   DDDSNAME,PDQDSN1                                    DASD 35900000
         BE    EISPASS1                                            DASD 35910000
         CLC   DDDSNAME,PDQDSN2                                    DASD 35920000
         BE    EISPASS2                                            DASD 35930000
         CLC   DDDSNAME,PDQDSN3                                    DASD 35940000
         BE    EISPASS3                                            DASD 35950000
* NOT IN THAT BLOCK,GET THE NEXT                                   DASD 35960000
         CLC   =AL3(0),PDQNPDQ LAST BLOCK IN PDQ ?                 DASD 35970000
         BE    EISRTN        YES,THERE-FORE COULDN'T FIND DSET     DASD 35980000
         MVC   CALLAREA,PDQNPDQ                                    DASD 35990000
         MVI   CALLAREA+3,0                                        DASD 36000000
*                                                                  DASD 36010000
         B     EISREAD1                                            DASD 36020000
EISPASS1 MVC   PDQDSNNO,=H'0'                                      DASD 36030000
         B     EISPDQB                                             DASD 36040000
EISPASS2 MVC   PDQDSNNO,=H'1'                                      DASD 36050000
         B     EISPDQB                                             DASD 36060000
EISPASS3 MVC   PDQDSNNO,=H'2'                                      DASD 36070000
EISPDQB  EQU   *                                                   DASD 36080000
* THERE USED TO BE A NOTE FOR JOBQ HERE, NOT NEC NOW               DASD 36090000
         ST    R1,APDQDIR       AND SAVE IT                        DASD 36100000
         ST    R14,EISR14       SAVE RETURN POINTER                DASD 36110000
         SR    R1,R1            CLEAN UP R1                        DASD 36120000
         IC    R1,EISDSN        LOAD SEARCH ARG                    DASD 36130000
         LA    R1,1(R1)         UP IT BY 1                         DASD 36140000
         STC   R1,EISDSN        PUT THE BUGGER BACK                DASD 36150000
         CLC   EISDSN,ISINPDQ   DO WE HAVE A HIT                   DASD 36160000
         BE    EISGOOD          ...YEP                             DASD 36170000
EISTRYA  EQU   *                                                   DASD 36180000
         L     R14,EISR14       RELOAD R14 WITH GOOOOD STUFF       DASD 36190000
* NOW RETURN TO THE NEXT COMPARE INSTRUCTION  HOPEFULLY            DASD 36200000
         CLC   PDQDSNNO,=H'0'                                      DASD 36210000
         BE    10(R14)                                             DASD 36220000
         CLC   PDQDSNNO,=H'1'                                      DASD 36230000
         BE    20(R14)                                             DASD 36240000
*        CLC   PDQDSNNO,=H'2'                                      DASD 36250000
         B     30(R14)                                             DASD 36260000
EISGOOD  EQU   *                                                   DASD 36270000
         CLI   VS,C'2'     MVS                                     DASD 36280000
         BNE   EISNMVS2                                            DASD 36290000
* GET SIOT FOR MVS SYSTEMS                                         DASD 36300000
         LH    R1,PDQDSNNO                                         DASD 36310000
         MH    R1,=AL2(PDILEN)                                     DASD 36320000
         LA    R14,PDISIOT1(R1)   GET SIOT ADDRESS LOCN            DASD 36330000
         MVC   CALLAREA,0(R14)                                     DASD 36340000
         B     EISGETSI         GO GET THE SIOT                    DASD 36350000
EISNMVS2 EQU   *                                                   DASD 36360000
         MVC   CALLAREA,PDQABLK                                    DASD 36370000
         MVI   CALLAREA+3,0                                        DASD 36380000
         GETJOBQ PDQDECB,CALLAREA                                  DASD 36390000
* NOW GET THE SIOT AS WELL                                         DASD 36400000
         LH    R1,PDQDSNNO     DATA SET NUMBER                     DASD 36410000
         MH    R1,=AL2(PDQBLKLN) LENGTH OF BLOCK                   DASD 36420000
         LA    R1,PDQASIOT(R1)   ABSOLUTE ADDRESS                  DASD 36430000
         MVC   CALLAREA(3),0(R1) SIOT TTR                          DASD 36440000
         MVI   CALLAREA+3,0                                        DASD 36450000
EISGETSI EQU   *                                                   DASD 36460000
         GETJOBQ SIOTDECB,CALLAREA                                 DASD 36470000
EISINPDQ EQU *                                                     DASD 36480000
* NOW JUST BECAUSE THE NAME APPEARS IN THE PDQ DOESN'T MEAN FOR    DASD 36490000
*    1 SECOND THAT IT HASN'T :-                                    DASD 36500000
*          1.  BEEN SCRATCHED                                      DASD 36510000
*          2.  BEEN ALREADY KEPT                                   DASD 36520000
         LH    R1,PDQDSNNO     1ST,2ND OR 3RD NAME IN PDQ ?        DASD 36530000
         CLI   VS,C'2'    IS IT AN MVS SYSTEM?                     DASD 36540000
         BNE   EISNMV3S  NO                                        DASD 36550000
* OK, MVS HAS DIFFERENT TYPE OF PASSED DATA SET Q                  DASD 36560000
         MH    R1,=AL2(PDILEN)                                     DASD 36570000
         LA    R14,PDITERM1(R1)                                    DASD 36580000
         B     EISNMVS3                                            DASD 36590000
EISNMV3S MH    R1,=AL2(PDQBLKLN)                                   DASD 36600000
         LA    R14,PDQTERM(R1)                                     DASD 36610000
EISNMVS3 EQU   *                                                   DASD 36620000
         TM    0(R14),X'C0'    OLD,DELETE ?                        DASD 36630000
         B     *+8             ****************                    DASD 36640000
         BO    EISAGN                                              DASD 36650000
         SPACE 3                                                   DASD 36660000
*** LAST BYTE OF JFCB TTR =0 IN SIOT                               DASD 36670000
         GETJOBQ JFCBDECB,SCTPJFCB  GET THE JFCB                   DASD 36680000
         CLI   JFCBVOLS,X'FF'  UNOPENED SCRATCH VOLUME ?           DASD 36690000
         BNE   EISNOTFF        GO WRITE BACK JFCB,SIOT             DASD 36700000
*          JOLERR 205,'DSID ''',DDDSID,''' DSNAME ''',#DSNAME,     DASD 36710000
*              ''' NOT KEPT:UNOPENED SCRATCH VOLUME'               DASD 36720000
         B     EISAGN                                              DASD 36730000
EISNOTFF EQU *                                                     DASD 36740000
         NI JFCBIND2,B'00011111' TELL OS AN OLD DATA SET            J60 36741006
*        NI    JFCBIND2,B'01111111' TELL OS AN OLD DATA SET        DASD 36750006
         OI    JFCBIND2,B'01000000'                                DASD 36760000
         PUTJOBQ JFCBDECB                                          DASD 36770000
         MVC   CALLAREA,SIOT                                       DASD 36780000
         MVI   CALLAREA+3,0                                        DASD 36790000
         GETJOBQ SIOTDECB,CALLAREA                                 DASD 36800000
         CLI   DDDISP+1,C'L'  LAST USE OF DATA SET ?               DASD 36810000
*                             IF WE CAN LET OS UNLOAD ?            DASD 36820000
         BNE   EISNLAST       NOT LAST USE                         DASD 36830000
* MARK SIOT AND LET IT THINK WE HAVE FINISHED WITH                 DASD 36840000
*  THE DATASET (WHICH WE HAVE, OF COURSE).                         DASD 36850000
*        NI    SCTSDISP,X'FF'-SIOTRETN-S3400DSP-PRIVATE            DASD 36860006
         NI    SCTSDISP,B'11100000'                                 j60 36861006
         OI    SCTSDISP,8     TURN KEEP ON                         DASD 36870000
         OI    SCTSBYT2,SCTRECVD MARK RECIEVED                     DASD 36880000
         B     EISMAKOL       MAKE IT OLD, RE-WRITE SIOT           DASD 36890000
EISNLAST EQU   *                                                   DASD 36900000
         OI    SCTSDISP,B'00001000'   SIOT = KEEP                  DASD 36910000
EISMAKOL OI    SCTSBYT4,1     MARK OLD                             DASD 36920000
         PUTJOBQ SIOTDECB                                          DASD 36930000
         SPACE 3                                                   DASD 36940000
* NOW PUT THE VOLSERS INTO DDVOLUME    NO DUPS OFCOURCE            DASD 36950000
         SR    R14,R14        CLEAR REG14                          DASD 36960000
         IC    R14,JFCBNVOL   INSERT JFCB VOLUME COUNT             DASD 36970000
         LA    R1,JFCBVOLS    POINT TO JFCB VOLSERS                DASD 36980000
EISLOADV LA    R15,DDVOLUME   POINT TO JOL VOLSER AREA             DASD 36990000
         CLC   0(6,R15),0(R1) EQUAL VOLUMES ?                      DASD 37000000
         BE    EISNMOVE       YEP DONT BOTHER TO ADD IT            DASD 37010000
EISLUP   CLC   0(6,R15),BLANKS BUCKET EMPTY FOR NEW GUY ?          DASD 37020000
         BE    EISMOVE        YEP GO DO IT                         DASD 37030000
         LA    R15,6(R15)     BUMP TO NEXT ENTRY                   DASD 37040000
         C     R15,=A(DDVOLUME+30) HOPE WE DONT HAVE TO MANY       DASD 37050000
         BNH   EISLUP         NOPE                                 DASD 37060000
         B     EISCVOL        ERROR HERE BETTER TELL SOMEONE       DASD 37070000
EISMOVE  MVC   0(6,R15),0(R1) INSERT NEW VOLSER                    DASD 37080000
EISNMOVE LA    R1,6(R1)       UP TO NEXT JFCB VOLSER               DASD 37090000
         BCT   R14,EISLOADV   RETURN TO LOOK                       DASD 37100000
EISCVOL  LA    R15,DDVOLUME   POINT TO JOL VOLSER AREA AGAIN       DASD 37110000
         LA    R14,5          STOP AFTER FIVE                      DASD 37120000
         SR    R1,R1          CLEAR COUNTER                        DASD 37130000
EISJFVOL CLC   0(6,R15),BLANKS END OF VOLSER LIST ?                DASD 37140000
         BE    EISTJFCB       YES SIR                              DASD 37150000
         LA    R1,1(R1)       UP COUNTER                           DASD 37160000
         LA    R15,6(R15)     UP POINTER                           DASD 37170000
         BCT   R14,EISJFVOL    RETURN                              DASD 37180000
EISTJFCB STC   R1,JFCBNVOL    STORE NEW VOLCOUNT IN JFCB VOL COUNT DASD 37190000
         ORG   *-4            +++++++++++ ************** ++++++++ 86211 37191005
         B     EISDVOL        ALLOW > 5 VOLS TO BE CATALOGUED     86211 37192005
         ORG                                                            37193005
EISDVOL  EQU   *                                                   DASD 37200000
         BAL   R14,E00FXVOL    SET UP VOLUME(S) IN #VOL            DASD 37210000
* NOW TO MARK THE PDQ                                              DASD 37220000
* TEST IF MVS, DIFFERENT...                                        DASD 37230000
         CLI   VS,C'2'   MVS?                                      DASD 37240000
         BNE   EISNMVS4  NOPE ->                                   DASD 37250000
* MVS SIOT CONTAINS THE UCB POINTER, MVT THE PDQ DOES              DASD 37260000
* CHECK IF XA, IF SO GET UCB ADDRESS FROM OFFSET 'B9', NOT SCTUTYPE     37270000
         L     R14,16        GET CVT ADDRESS POINTER                    37280000
*        L     R14,0(R14)    GET CVT ADDRESS                            37290005
         TM    116(R14),X'80' XA?                                       37300000
         BNO   EISNXA        NO -> OUT                                  37310000
         MVI   CALLAREA,0                                               37320000
         MVC   CALLAREA+1(3),SIOT+X'B9'                                 37330000
         L     R14,CALLAREA                                             37340000
         B     EISTUNIT                                            DASD 37350000
* THE SIOT IN MVS CONTAINS THE UCB POINTER, NOT THE PDQ                 37360000
EISNXA   LH    R14,SCTUTYPE                                        DASD 37370000
         B     EISTUNIT                                            DASD 37380000
EISNMVS4 EQU   *                                                   DASD 37390000
         MVC   CALLAREA,PDQABLK                                    DASD 37400000
         MVI   CALLAREA+3,0                                        DASD 37410000
         GETJOBQ PDQDECB,CALLAREA                                  DASD 37420000
         LH    R1,PDQDSNNO                                         DASD 37430000
         MH    R1,=AL2(PDQBLKLN)                                   DASD 37440000
         L     R14,PDQUCBS(R1) GET UCB POINTER FOR DEVICE TYPE     DASD 37450000
         MVC   SCTUTYPE,16(R14) MOVE IN UCB DEVICE TYPE            DASD 37460000
EISTUNIT EQU   *                                                   DASD 37470000
EISDA    NI    SCTUTYPE+1,X'FF'-UCBRR TURN OFF 'SHARE'             DASD 37480000
EISNOTDU EQU   *                                                   DASD 37490000
         SPACE 2                                                   DASD 37500000
         CLI   VS,C'2'  MVS AGAIN?                                 DASD 37510000
         BNE   EISNMVS5                                            DASD 37520000
         LH    R1,PDQDSNNO                                         DASD 37530000
         MH    R1,=AL2(PDILEN)                                     DASD 37540000
         LA    R14,PDITERM1(R1)                                    DASD 37550000
         B     EISMARK9                                            DASD 37560000
EISNMVS5 EQU   *                                                   DASD 37570000
         LA    R14,PDQTERM(R1)                                     DASD 37580000
EISMARK9 EQU   *                                                   DASD 37590000
         NI    0(R14),X'0F'     TURN OFF TOP 4 BITS                DASD 37600000
         CLI   DDDISP+1,C'L'   LAST USE,IE OLD,KEEP ?              DASD 37610000
         BNE   EISPASS                                             DASD 37620000
         OI    0(R14),B'01000000' OLD,KEEP                         DASD 37630000
         NI    0(R14),B'11000000'  INDICATE RECIEVED               DASD 37640000
         B     EISMARKD                                            DASD 37650000
EISPASS  OI    0(R14),B'11100000' OLD,PASS                         DASD 37660000
EISMARKD EQU   *                                                   DASD 37670000
         CLI   VS,C'2'    MVS AGAIN?????                           DASD 37680000
*        B     EISNMVS6     *** CVC JUL 17, 1985                        37690005
         BNE   EISNMVS6     *** CVC JUL 17, 1985   REQD FOR F4 ABEND050 37691005
         SH    R14,=H'44'            BACKUP TO DSNAME              DASD 37700005
         MVI   0(R14),C' '           WIPE OUT THE NAME IN PDQ      DASD 37710005
         PUTJOBQ  PDQDECB2                                         DASD 37720000
         B     EISRETN0                                            DASD 37730000
EISNMVS6 EQU  *                                                    DASD 37740000
         PUTJOBQ PDQDECB                                           DASD 37750000
         SPACE 3                                                   DASD 37760000
EISRETN0 EQU *                                                     DASD 37770000
         CLI   ICOMMAND,C'K'   IS THIS A KEEP INSTRUCTION?         DASD 37780000
         BNE   EISAGN       NO,SO NO MESSAGE,JUST RETURN           DASD 37790000
         JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            * :37800000
               ''' KEPT ON VOL(S) ',#VOL                           DASD 37810000
EISAGN   CLI   VS,C'2'        MVS                                  DASD 37820000
         BE    EISAGNVS       YES                                  DASD 37830000
         CLI   ISINPDQ,3        ARE WE ALL DONE HERE ?             DASD 37840000
         BE    EISRTN           .....YES, OUT                      DASD 37850000
         MVI   ISINPDQ,3        SET SEARCH TO DSN #3               DASD 37860000
         B     EISTRYA        GO BACK TO GET IT                    DASD 37870000
EISAGNVS CLI   ISINPDQ,2        ARE WE ALL DONE HERE               DASD 37880000
         BE    EISRTN           .....YES, OUT                      DASD 37890000
         MVI   ISINPDQ,2        SET SEARCH TO DSN #2               DASD 37900000
         B     EISTRYA        GO BACK TO GET IT                    DASD 37910000
EISRTN   MVI   ISINPDQ,C'1'     SET THIS BACK TO A ONE             DASD 37920000
         JOLRETN RC=0                                              DASD 37930000
EISR14   DS    F                                                   DASD 37940000
EISDSN   DS    1C                                                  DASD 37950000
         LTORG                                                     DASD 37960000
     TITLE 'UJEDEVNM:SEARCH DEVNAMET'                              DASD 37970000
          JOLSAVE CSECT=UJEDEVNM                                   DASD 37980000
*******************************************************************DASD 37990000
*  SEARCH THE SYSTEMS DEVICE NAME TABLE TO OBTAIN THE             *DASD 38000000
*  THE DEVICE TYPE NEEDED FOR A CAMLST FOR A SCRATCH              *DASD 38010000
*  OR  KEEP                                                       *DASD 38020000
*                                                                 *DASD 38030000
*  SEARCH ARGUMENT = DDUNIT IN INSTRUCT FILE                      *DASD 38040000
*  DEVNAMET FORMAT                                                *DASD 38050000
*  EACH ENTRY IS 12 BYTES                                         *DASD 38060000
*  BYTES 1-8 = UNIT NAME  ECT '3330-1' OR 'TAPE'                  *DASD 38070000
*  BYTES 9-12 = CODE    X'3070200D'                               *DASD 38080000
*                                                                 *DASD 38090000
*******************************************************************DASD 38100000
*                                                                 *DASD 38110000
* CHECK IF XA, IF SO USE THE XA ROUTINES INSTEAD OF DEVNAMET            38120000
         L     R14,16        GET CVT ADDRESS POINTER                    38130000
*        L     R14,0(R14)    GET CVT ADDRESS                            38140005
         TM    116(R14),X'80' XA?                                       38150000
         BNO   EDVNXA        NO -> OUT                                  38160000
*                                                                       38170000
* XA HERE ....                                                          38180000
*                                                                       38190000
**********************************************************              38200000
*                                                        *              38210000
*                                                        *              38220000
*         X A   SUPPORT                                  *              38230000
*                                                        *              38240000
*                                                        *              38250000
**********************************************************              38260000
         SPACE 3                                                        38270000
         MVC   DEVUNIT,DDUNIT   COPY INTO GOTTEN STORAGE                38280000
         MVC   ADEVATTR,=A(0)   SET UP NO RETURN OF ATTRIBUTES          38290000
* PREPARE TO SET UP MAIN PARAMETER ADDRESSES                            38300000
         LA    R14,DEVUNIT                                              38310000
         LA    R15,DEVFLAGS                                             38320000
         STM   R14,R15,DEV4UVP  STORE ADDRESSES FOR IEFAB4UV            38330000
         LA    R1,DEV4UVP       GET ADDRESS OF PARAMETERS               38340000
         LINK  EP=IEFEB4UV      LINK TO THE ROUTINE                     38350000
         LTR   R15,R15          IS IT A UNIT NAME?                      38360000
         BNZ   EDVDEAD          NO, RETURN AN ERROR CODE                38370000
         MVC   SCTUTYPE,DEVTYPE MOVE IN THE DEVICE TYPE                 38380000
         JOLRETN RC=0                                                   38390000
DEVFLAGS DC    B'0000001000000000' FLAGS FOR IEFAB4UV (FUNCTION 6)      38400000
*                                                                       38410000
* VS1 OR MVS AT THIS POINT                                              38420000
*                                                                       38430000
EDVNXA    LOAD EP=DEVNAMET   LOAD THE KNOW IT ALL                  DASD 38440000
          LTR  R1,R0         GET ADDRESS OF HIM                    DASD 38450000
          BZ   EDVDEAD       SORRY                                 DASD 38460000
          L    R15,0(R1)     LOAD NUMBER OF ENTRIES IN TABLE       DASD 38470000
          MH   R15,=H'12'    MULT BY TABLE ENTRRY SIZE             DASD 38480000
          LA   R1,4(R1)      ADD 4 TO START ADDRESS OF TABLE       DASD 38490000
          AR   R15,R1        CALC ENDD OF TABLE                    DASD 38500000
          LA   R14,12        INCREMENT                             DASD 38510000
          CLC  DDUNIT,0(R1)  HOPE ITS HERE                         DASD 38520000
          BE   EDVALIVE      GO DO THE SCRATCH NOW                 DASD 38530000
          BXLE R1,R14,*-10   ROUND ROBIN                           DASD 38540000
EDVDEAD   JOLRETN RC=4                                             DASD 38550000
EDVALIVE  EQU  *                                                   DASD 38560000
          MVC  SCTUTYPE,8(R1) MOVE IN THE DEVICE TYPE              DASD 38570000
          JOLRETN RC=0                                             DASD 38580000
* THE FOLLOWING AREAS ARE USED AS PARAMETERS TO IEFAB4UV                38590000
DEV4UVP  DS    A               MUST POINT TO UNIT PARAMETER BLOCK       38600000
ADEVFLG  DS    A               MUST POINT TO FLAGS HALFWORD             38610000
         SPACE 3                                                        38620000
DEVUNIT  DS    CL8             UNIT NAME MOVED HERE                     38630000
DEVTYPE  DS    F               SET TO DEVTYPE BY IEFEB4UV               38640000
ADEVATTR DS    A               ADDRESS OF ATTRIB AREA (SET TO 0)        38650000
         LTORG                                                     DASD 38660000
MSGSECT  DS    0D                                                 J50   38660105
E999A01  WTO   'UJE999A JOL IS NOT LICENSED TO BE USED ON THIS PROCESSOR38661005
               R',ROUTCDE=(1,2,11),DESC=11,MF=L                   J50   38662005
E999A02  WTO   'UJE999I JOL DEMONSTRATION VERSION',                    .38663005
               ROUTCDE=(1,2,11),MF=L DESC=11                      J50   38664005
E999A03  WTO   'UJE999A YOUR JOL LICENSE FOR THIS PROCESSOR HAS EXPIRED.38665005
               ',ROUTCDE=(1,2,11),MF=L DESC=11                    J50   38666005
E999A04  WTO   'UJE999A CANNOT VERIFY YOUR JOL LICENSE FOR THIS PROCESSO38667005
               R',ROUTCDE=(1,2,11),MF=L DESC=11                   J50   38668005
E999A05  WTO   'UJE999A INVALID JOL LICENSE DETAILS',                  .38669005
               ROUTCDE=(1,2,11),MF=L DESC=11                      J50   38669105
E999A06  WTO   'UJE999A YOUR JOL LICENSE FOR THIS PROCESSOR EXPIRED MORE38669205
                E THAN 30 DAYS AGO',ROUTCDE=(1,2,11),MF=L DESC=11 J50   38669305
*HKFLG   DC    P'0'                                               J50   38669405
       TITLE 'UJELOCAT:LOCATE CATALOG DATASET'                     DASD 38670000
         JOLSAVE CSECT=UJELOCAT                                    DASD 38680005
         L     R15,=V(E05VOLS)         LOAD CAMLIST ADDRESS        DASD 38690000
         USING VOLINFO,R15                                         DASD 38700000
         ST    R15,ELOLOCAT+12         POINT TO LOCATE AREA        DASD 38710000
         LA    R6,300(R15)             GO UP A FEW AND SAVE POINTERDASD 38720000
         MVC   0(44,R6),DSNAME         MOVE TO LOCATE AREA         DASD 38730000
         MVC   DSNAME,0(R6)            MOVE DSNAME IN              DASD 38740000
         LOCATE ELOLOCAT                                           DASD 38750000
         LTR   R15,R15                 DID LOACTE FIND ANYTHING ?? DASD 38760000
         BNZ   ELORETN4                NOPE                        DASD 38770000
         JOLRETN RC=0  WE FOUND OUR STIFF LETS LEAVE               DASD 38780000
ELORETN4 EQU *                                                     DASD 38790000
         MVC  DSNAME,0(R6)            MOVE BACK ORGINAL DATA SET NADASD 38800000
         JOLRETN RC=4                 TELL THE CALLER WE FAILED    DASD 38810000
ELOLOCAT CAMLST NAME,DSNAME,,0                                     DASD 38820000
         LTORG                                                     DASD 38830000
         DC C'COMPILE DATE=&SYSDATE.,TIME=&SYSTIME.'               DASD 38840005
         END   UJE00SH                                                  38850005
