$DYNSH4A TITLE 'JOL DYNAMIC TRANSIENT SCHEDULER/INSTRUCTION HANDLER'    00010009
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1971,1972,1973,1974,1975,1976  00020000
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1980,1981,1982.                00030000
* JOL COPYRIGHT CCS-JOL PTY LTD 1985, 1986, 1987, 1988                  00040023
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-E001.           00050000
         SPACE 3                                                        00060000
*                   J             000000            L                   00070000
*                   J            0      0           L                   00080000
*                   J           0        0          L                   00090000
*                   J          0          0         L                   00100000
*                   J         0            0        L                   00110000
*                   J         0            0        L                   00120000
*                   J         0            0        L                   00130000
*                   J         0            0        L                   00140000
*                   J         0            0        L                   00150000
*                   J         0            0        L                   00160000
*                   J         0            0        L                   00170000
*        J          J         0            0        L                   00180000
*         J        J           0          0         L                   00190000
*          J      J             0        0          L                   00200000
*           J    J               0      0           L                   00210000
*            JJJJ                 000000            LLLLLLLLLLL         00220000
           SPACE 3                                                      00230000
* LAST SOURCE UPDATE MAR 1982 BY J SUMMERFIELD                          00240000
*                                   OF KURRAWANG COMPUTER PROGRAMMING   00250000
*   CHANGES:-                                                           00260000
*     1. OSIV/X8 SUPPORT                                                00270000
* LAST SOURCE UPDATE 26/8/1981   BY CVC.                                00280000
*   CHANGES:-                                                           00290000
*     1. FIX 800 BPI TAPE PROBLEM                                       00300000
*     2. ALLOW JOL TO USE PROGRAMS IN LPALIB                            00310000
* FOLLOWING FIXES CODED, SEPT 7,1976                                    00320000
*                                                                       00330000
*CHG26028      PROVIDE SUPPORT FOR 'IF ERROR'                           00340000
*CHG30002      AS ABOVE                                                 00350000
*CHG30062      HIGHLIGHT ERROR MESSAGES ETC MORE                        00360000
*JOL30112      PROVIDE SUPPORT FOR DELETE GDGALL                        00370000
*JOL30114      ALLOW UP TO 5 LEVELS OF MACROS                           00380000
*JOL30115      CLOSE FILES BEFORE ABENDING                              00390000
*JOL30116      FIX DELETE TEMPORARY DATA-SETS                           00400000
* ALSO UPDATE CAMLIST,SCRATCH ETC MACROS FOR VS RETURN CODES            00410000
********************************************************************    00420000
*                                                                       00430000
*            JOL EXECUTE 'INITIATOR/SCHEDULER'                          00440000
*                                                                       00450000
*                                                                       00460000
*                                                                       00470000
*                                                                       00480000
*                                                                       00490000
*                                                                       00500000
* NOTE: MANY MACRO NAMES ARE THE SAME AS THOSE USED IN THE JOL          00510000
*     COMPILER,BUT THEIR GENERATED CODE DIFFERS VERY SLIGHTLY           00520000
*     FROM THE OTHER MODULES,EVEN THOUGH THE FUNCTION IS THE SAME       00530000
********************************************************************    00540000
           SPACE 1                                                      00550000
*********************************************************************** 00560000
*                                                                       00570000
*                                                                       00580000
* DUE TO THE FAILURE OF IBM JOBQ MANAGEMENT ROUTINES (EITHER TO MY      00590000
*    UNDERSTANGING OR IBM'S DOCUMENTATION) SOME 'EMERGENCY' TYPE        00600000
*    CODE ALTERATION IS GOING ON TO GET JOL TO FUNCTION UNDER           00610000
*    VS1. NOTE THAT MVS USES THE STANDARD IBM CODE.                     00620000
*                                                                       00630000
* CODE MARCH 7,1976: ALL MARKED '*****' IN COLS 67-71                   00640000
*    SEE ALSO  'UJEJOB' CSECT FOR CHANGES                               00650000
*                                                                       00660000
*********************************************************************** 00670000
         SPACE 3                                                        00680017
         MACRO                                                          00690017
         EYEBALL &A                                                     00700017
         DC    0D'0',4CL8'&A'                                           00710017
         MEND                                                           00720017
         SPACE 6                                                        00730017
         MACRO                                                          00731017
&L       CONCAT  &A                                                     00732018
         AIF   (T'&A EQ 'O').L                                   88036  00732118
         AIF   ('&A'(1,1) EQ '''').QM                            88036  00732218
         FIX   'REVIEW THIS CONCAT MACRO FOR &A'                 88036  00732318
         AGO   .L                                                88036  00732418
.QM      FIX   'REVIEW THIS CONCAT MACRO FOR '&A''               88036  00732518
.L       AIF   (T'&L EQ 'O').END                                        00733018
&L       DS    0H                                                88036  00733117
.END     MEND                                                           00734017
         SPACE 6                                                        00735017
         MACRO                                                          00740017
&NAME    JOLERR1 &STMT=STMT                                             00750017
.* THIS MACRO WILL PUT INTO A LOCATION A STRING OF CHARACTERS           00760000
.* THE STRING MAY BE IN A BUFFER OR JOL MAY ITSELF CONTROL              00770000
.*   THE WHERE-ABOUTS OF THE ERROR MESSAGE.                             00780000
.*                                                                      00790000
.* SYSLIST(1) IS TAKEN TO BE THE ERROR SEVERITY AND ALSO THE            00800000
.*   ERROR NUMBER.                                                      00810000
           LCLA &LITPOSN,&LITLEN                                        00820000
           LCLC &CSECT,&ERRNO                                           00830000
           LCLC &JOLERR,&CHAR1                                          00840004
           LCLA &LENGTH,&THIS,&NOVAR,&POSN,&L,&K,&STMTLEN               00850000
&STMTLEN   SETA 4                                                       00860000
&CSECT     SETC '&SYSECT'(3,3)                                          00870000
&ERRNO     SETC '&SYSLIST(1)'(2,K'&SYSLIST(1)-1)                        00880000
&CHAR1   SETC '&SYSLIST(1)'(1,1)                                        00890012
         AIF   ('&STMT' EQ 'STMT').ORDSTMT                              00900000
         MVC   S23STMT,&STMT MOVE NON-STANDARD STATEMENT NUMBER IN      00910012
.ORDSTMT ANOP                                                           00920012
*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-*   00930000
&NAME    BAL   14,UJS23EP&CHAR1 LINK TO APPROPRIATE ERROR POINT         00940012
&JOLERR  SETC '&CSECT-&ERRNO'                                           00950012
ER&CSECT&ERRNO MVC 0(8,1),=CL8'&JOLERR' ERROR CODE IN CROSS-REF LIST    00960004
E&SYSNDX EQU     ER&CSECT&ERRNO                                         00970012
&THIS    SETA  2                                                        00980012
.LUP4    ANOP                                                           00990012
         AIF   (&THIS GT N'&SYSLIST).END                                01000000
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '#').VAR2                     01010000
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '''').LIT2                    01020000
.* HERE IT SHOULD BE A CHAR VARIABLE                                    01030000
&L         SETA L'&SYSLIST(&THIS)                                       01040000
           MVC 0(&L,1),&SYSLIST(&THIS)         FIXED CHAR STRING        01050000
         AGO   .ADD3                                                    01060000
.LIT2      ANOP                                                         01070000
.* NOW LOOK FOR DOUBLE QUOTES IN STRING TO CALCULATE THE CORRECT        01080000
.*   LENGTH                                                             01090000
&LITPOSN   SETA 2                              START AFTER 1ST QOTE     01100000
&LITLEN    SETA K'&SYSLIST(&THIS)                                       01110000
&LITLEN  SETA &LITLEN-2                                                 01120012
.TQUOTE2 AIF   ('&SYSLIST(&THIS)'(&LITPOSN,2) NE '''''').NOTDBL2        01130000
&LITPOSN SETA &LITPOSN+1                                                01140012
&LITLEN  SETA &LITLEN-1                                                 01150012
.NOTDBL2 ANOP                                                           01160012
&LITPOSN SETA &LITPOSN+1                                                01170012
         AIF   (&LITPOSN LT K'&SYSLIST(&THIS)).TQUOTE2                  01180000
&K       SETA &LITLEN                                                   01190012
         MVC   0(&K,1),=C&SYSLIST(&THIS)       MOVE LITERAL STRING      01200012
&POSN    SETA  &POSN+&K                                                 01210012
         AGO   .ADD3                                                    01220000
.VAR2      ANOP                                                         01230000
           LA 15,&SYSLIST(&THIS)           LOAD ADDRESS VARYING STRING  01240000
.ADD3      ANOP                                                         01250000
&THIS      SETA &THIS+1                                                 01260000
         AGO   .LUP4                                                    01270000
.END       DC  H'0'                            END LIST                 01280000
*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-*   01290000
           MEND                                                         01300000
           SPACE 3                                                      01310000
         MACRO                                                          01320000
&NAME    JOLRETN &RC=0                                                  01330000
&NAME    L     R13,4(R13)      RESET SAVE ADDRESS                       01340000
         AIF   ('&SYSLIST(1)' EQ '').R1412                              01350000
         RETURN &SYSLIST(1),T,RC=&RC                                    01360000
         MEXIT                                                          01370000
.R1412   RETURN (14,12),T,RC=&RC                                        01380000
         MEND                                                           01390000
         SPACE 3                                                        01400000
         MACRO                                                          01410000
&NAME    JOLSAVE &AREA=,&CSECT=,&BASE=R11                               01420000
         GBLA &REGEQU                                                   01430000
.* SEE IF EQUATES SET UP FOR THIS RUN YET OR NOT                        01440000
         AIF   (&REGEQU NE 0).NOEQU                                     01450000
&CSECT   CSECT                                                          01460000
R0       EQU   0                                                        01470000
R1       EQU   1                                                        01480000
R2       EQU   2                                                        01490000
R3       EQU   3                                                        01500000
R4       EQU   4                                                        01510000
R5       EQU   5                                                        01520000
R6       EQU   6                                                        01530000
R7       EQU   7                                                        01540000
R8       EQU   8                                                        01550000
R9       EQU   9                                                        01560000
R10      EQU   10                                                       01570000
R11      EQU   11                                                       01580000
R12      EQU   12                                                       01590000
R13      EQU   13                                                       01600000
R14      EQU   14                                                       01610000
R15      EQU  15                                                        01620000
&REGEQU  SETA 1                                                         01630000
         AGO   .NOCSECT                                                 01640000
.NOEQU   ANOP                                                           01650000
         AIF   ('&CSECT' EQ '').NOCSECT                                 01660000
         LTORG                                                          01670000
         DS    0D                                                       01680000
&CSECT   CSECT                                                          01690000
.NOCSECT ANOP                                                           01700000
&NAME    SAVE (14,12),,&CSECT.-&SYSDATE.:&SYSTIME                       01710000
         AIF   (N'&BASE EQ 1).ONEBASE                                   01720000
         USING &CSECT,&BASE(1),&BASE(2)                                 01730000
         LR    &BASE(1),R15                                             01740000
         LA    &BASE(2),2048(R15)                                       01750000
         LA    &BASE(2),2048(&BASE(2))                                  01760000
         AGO   .HOUSE                                                   01770000
.ONEBASE ANOP                                                           01780000
         USING &CSECT,&BASE                                             01790000
         LR    &BASE,R15                                                01800000
.HOUSE   AIF   ('&AREA' EQ '').GENAREA                                  01810000
         MNOTE 12,'AREA NOW UNSUPPORTED'                                01820000
         AGO   .HOUSE2                                                  01830000
.GENAREA CNOP 0,4                                                       01840000
         BAL   R15,*+76         BRANCH AROUND SAVE AREA                 01850000
         DC    18F'-1'                                                  01860000
.HOUSE2  ST    R15,8(,R13)                                              01870000
         ST    R13,4(,R15)                                              01880000
         LA    R13,0(,R15)     IT MAY BE NECESSARY TO CLEAR HIGH-BYTE   01890000
         MEND                                                           01900000
         EJECT                                                          01910000
* THESE NEXT TWO MACROS ARE USED FOR READING AND WRITING JOBQ.          01920000
*    IF THE SYSTEM IS VS,THE VS JOBQ ROUTINES ARE CALLED,OTHERWISE      01930000
*    A STRAIGHT READ OR WRITE OPERATION IS PERFORMED.                   01940000
         MACRO                                                          01950000
&NAME    GETJOBQ &DECB,&TTR                                             01960000
         GBLC  &JOLOS                                                   01970000
         AIF   ('&JOLOS' NE 'X8').OK                                    01980000
         MNOTE 12,'GETJOBQ IS NOT SUPPORTED ON OSIV/X8'                 01990000
         MEXIT                                                          02000000
.OK      ANOP                                                           02010000
&NAME    LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS                   02020000
         L   R1,&TTR         LOAD ADDRESS OF AREA WITH TTR FOR POINT    02030000
         BAL R14,GETJOBQ     BRANCH AND LINK TO POINT,READ,CHECK RTN    02040000
         MEND                                                           02050000
         SPACE                                                          02060000
         MACRO                                                          02070000
&NAME    PUTJOBQ &DECB,&TTR                                             02080000
         GBLC  &JOLOS                                                   02090000
         AIF   ('&JOLOS' NE 'X8').OK                                    02100000
         MNOTE 12,'PUTJOBQ IS NOT SUPPORTED ON OSIV/X8'                 02110000
         MEXIT                                                          02120000
.OK      ANOP                                                           02130000
&NAME    LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS                   02140000
         AIF   ('&TTR' EQ '').NOTTR                                     02150000
         L   R1,&TTR         LOAD R1 WITH TTR REQUIRED                  02160000
         AGO   .BAL                                                     02170000
.NOTTR     SR  R1,R1           NO TTR,CLEAR REGISTER 1                  02180000
.BAL       BAL R14,PUTJOBQ     BRANCH AND LINK TO POINT,WRITE CHECK RTN 02190000
           MEND                                                         02200000
         SPACE 3                                                        02210000
         MACRO                                                          02220000
&L       UJE22UPD &P1,&P2,&DDN                                          02230086
.* P1 IS ADDRESS OF DSNAME                                              02240000
.* P2 IS ADDRESS OF VOLUME SERIAL NUMBER(S)                             02250000
&L       DS    0H                                                88036  02251034
         AGO   .END                                              88036  02252034
         LA    R0,E22PARM     SET UP PARAMETER LIST                     02260000
         ST    R0,CALLAREA                                              02270000
         MVC   E22DSN,&P1     COPY DSNAME                               02280000
         MVC   E22VOL,&P2      AND VOLUME INFO                          02290000
         FIX   'I AM NOT VERY  SURE WHAT THIS DDNAME IS FOR'     88036  02290111
         AIF   (T'&DDN NE 'O').DDN                               88036  02290212
         MVI   E22DDN,C'?'                                       88036  02290312
         MNOTE 4,'WARNING: MISSING DDNAME'                       88036  02290411
         AGO   .DDDUN                                            88036  02290511
.DDN     MVC   E22DDN,&DDN     AND DDNAME INFO                          02291013
.DDDUN   ANOP                                                    88036  02292011
         LA    R1,CALLAREA    ADDRESS PARAMETER AREA                    02300000
         OI    0(R1),X'80'    THE FINAL TOUCH                           02310011
         CALL  UJE22UPD       CALL MR FIXIT                             02320000
.END     MEND                                                           02330034
         TITLE 'JOL SCHEDULER MAIN-LINE'                                02340000
         PUNCH '  PAGE UJE00MN '                                        02341006
         GBLA  &RSVDRC,&RETNSIZ                                         02350000
*        GBLC  &JOLOS                                                   02360022
*        GBLC  &TYPE                                                    02370022
         COPY  JOLGLOBL                                          88036  02371022
*        LCLB  &X8                                                      02380022
         LCLC  &C,&C1,&C2,&C3,&C4,&C5,&C6,&DDPRT,&DDINST                02390000
&TYPE    SETC  'SCHED'                                                  02400000
         $UJEPARM                                                       02410000
&RETNSIZ SETA  2560          SIZE OF RETURN-CODE AREA                   02420000
&X8      SETB  ('&JOLOS' EQ 'X8')                                       02430000
&RSVDRC  SETA  4000*(1-&X8)+50*&X8                                      02440000
&DDPRT   SETC  (&X8)'JOLPRINT'.(1-&X8)'$$PRNT'                          02450000
&DDINST  SETC  (&X8)'JOLINST'.(1-&X8)'$$INST'                           02460000
         PRINT ON,DATA                                                  02470000
*********************************************************************** 02480000
*                                                                     * 02490000
* CODE FOR IF ERROR IS INCORPORATED IN THIS DESCRIPTION OF THE MAIN-  * 02500000
*  LINE ROUTINE                                                       * 02510000
*                                                                     * 02520000
*        CALL  UJE98INI;      /* IF ANY ERRORS (NO DD'S FOR SCHEDUER, * 02530000
*                                  ETC),                              * 02540000
*                             OR IF PROBLEM PROGRAM RETURNED A VALUE  * 02550000
*                             THAT CAUSES JOB TO BE FLUSHED,          * 02560000
*                             A NON-ZERO RETURN CODE IS GIVEN, AND    * 02570000
*                             THE JOB WILL BE FLUSHED.                * 02580000
*                        NOTE:- ABENDS DO NOT CAUSE AN ERROR HERE.    * 02590000
*                             */                                      * 02600000
*        IF R15,=0 THEN                                               * 02610000
*        DO;                                                          * 02620000
*           SET GOBACK /* TO OS */ ON;                                * 02630000
*           RETURN 4000;                                              * 02640000
*        END;                                                         * 02650000
*                                                                     * 02660000
*        CALL  UJE50RD;       /* READ A STMT FROM 'INSRUCT' FILE */   * 02670000
*        IF R15>=0 GO TO EOF; /* GO TO END OF JOB */                  * 02680000
*                                                                     * 02690000
*        SET  R4=COND(LEVEL*8 + NEST);                                * 02700000
*                                                                     * 02710000
*        IS INSTRUCT='IF' ?                                           * 02720000
*        YES, DO;                                                     * 02730000
*                                                                     * 02740000
*              SET 0(R4)='T';                                         * 02750000
* E00CLIF:     CALL IF;                                               * 02760000
*              IF TRUE        /* CHECKS FOR ABEND, AND IF 'ERROR' */  * 02770000
* NEW          THEN DO;                                               * 02780000
* NEW               CALL UJE50RD;                                     * 02790000
* NEW               IF R15>=0,                                        * 02800000
* NEW               GO TO EOF;                                        * 02810000
* NEW               IF 'IF' GO TO E00CLIF; /* TEST NEXT IF IN CHAIN*/ * 02820000
* NEW               ELSE GO TO E00EXECI;(EXECUTE INSTRUCTION) ;       * 02830000
*              END;                                                   * 02840000
* SKIP:        ELSE SKIP TILL MATCHING END ETC;                       * 02850000
*                                                                     * 02860000
*        END;                                                         * 02870000
*                                                                     * 02880000
* NEW    IF ABEND OCCURED                                             * 02890000
* NEW      AND CURRENT LEVEL,NEST                                     * 02900000
* NEW      <=  ERROR LEVEL,NEST (LEVEL,NEST ABEND OCCURED AT)         * 02910000
* NEW      THEN DO;           /* IE, SKIP INSTRUCTION BECAUSE ABEND*/ * 02920000
* NEW          CLEAR INERROR  /* CLEAR ERROR LOOP INDICATOR*/         * 02930000
* NEW          GO TO SKIP;    /* ALLOWS FOR IF ERROR, DO; */          * 02940000
* NEW      END;               /* ETC */                               * 02950000
*    /* NO ABEND */                                                   * 02960000
* EXECUTE-INSTRUCTION:        /* BRANCHED TO BY 'IF TRUE'             * 02970000
*                             ROUTINE ABOVE, THEREBY SKIPPING         * 02980000
* NEW                         THE 'IF ABEND AND LEVELS' ABOVE.        * 02990000
* NEW                                                                 * 03000000
* NEW                         HENCE, IF ERROR WILL FUNCTION */        * 03010000
*                                                                     * 03020000
*                                                                     * 03030000
*        IF A 'DO'                                                    * 03040000
*        THEN DO;                                                     * 03050000
*              NEST=NEST+1; GO TO READ;                               * 03060000
*        END;                                                         * 03070000
*                                                                     * 03080000
*        IF AN 'END'                                                  * 03090000
*        THEN  DO;                                                    * 03100000
*              NEST=NEST-1;                                           * 03110000
*              IF NEST=0                                              * 03120000
*              THEN LEVEL=LEVEL-1;                                    * 03130000
*              GO TO READ;                                            * 03140000
*        END;                                                         * 03150000
*        IS IT AN 'ELSE' ?                                            * 03160000
*        YES, DO;                                                     * 03170000
*              IS 0(R4)='T'                                           * 03180000
*              YES, ELSE MUST BE FALSE, GO TO SKIPLOOP;               * 03190000
*              NO,GO TO READ;                                         * 03200000
*        END;                                                         * 03210000
*                                                                     * 03220000
*  /* OTHER */                                                        * 03230000
*                                                                     * 03240000
*        BRANCH TO PROCESSING ROUTINE                                 * 03250000
*                                                                     * 03260000
*                                                                     * 03270000
*                                                                     * 03280000
*********************************************************************** 03290000
         SPACE                                                          03300000
         JOLSAVE CSECT=UJE00MN,BASE=R12                                 03320000
         EXTRN UJTNUM,UJEJOBQ      HELPS THE LINKAGE EDITOR FIND THINGS 03321006
         ENTRY UJESCHED                                                 03330000
UJESCHED EQU   UJE00MN                                                  03340000
         L     R3,0(R1)                 ADDRESS OUR PARAMETER AREA      03350000
         USING PARMAREA,R3                                              03360000
         L     R5,=A(TABLES)                                            03370000
         USING TABLES,R5                                                03380000
E00VSSTR DS    0H                                                 74365 03390000
         CALL  UJE98INI                 CALL INITIALISE ROUTINES        03400000
         LTR   R15,R15                  INIT FAIL OR USER ABEND ?       03410000
         BZ    E00FIRST                                                 03420000
BADRETN  DS    0H                                                       03430000
         CALL  UJE94CLN                CLEAN UP OUTSTANDING ALLOCATIONS 03440000
         MVI   GOBACK,C'1'                                              03450000
         BAL   R11,UJEFILES            GO CLOSE ALL FILES               03460000
         JOLRETN RC=&RSVDRC            CANCEL JOB NOW                   03470000
E00FIRST DS    0H                                                       03480000
E00READ  DS    0H                                                       03490000
E00MAINL DS    0H                      THIS IS THE MAIN-LINE.           03500000
         CALL  UJE50RD                 READ NEXT STATEMENT              03510000
         LTR   R15,R15                 READ OK (EOF MAYBEE)             03520000
         BNZ   E00EOF                  EOF,RETURN AFTER SETTING END JOB 03530000
*                                      INDICATORS.                      03540000
         LH    R4,LEVEL                LEVEL INDICATOR                  03550000
         SLL   R4,3                    *8 (WE ALLOW 8 NESTS PER LEVEL)  03560000
         LH    R0,NEST                                                  03570000
         AR    R4,R0                                                    03580000
         LA    R4,COND(R4)             THERE,NOW WE CAN LOOK AT 'CONDS' 03590000
         CLI   LABEL,C' '                                               03600000
         BNE   E00LABOK                                                 03610000
         MVC   LABEL(2),=C'$$'                                          03620000
         MVC   LABEL+2(4),STMT                                          03630000
E00LABOK DS    0H                                                       03640000
         CLC   =C'IF ',ICOMMAND  IF?                                    03650000
         BNE   E00TDO                  NO,GO TEST FOR A DO              03660000
* OK,CALL THE IF PROCESSOR AND TEST FOR TRUE OR FALSE                   03670000
         MVI   0(R4),C'T'              SET COND INITIALLY 'TRUE'        03680000
         CALL  UJE04IF                                                  03690000
         LTR   R15,R15                 IF 0,IT WAS A TRUE 'IF'          03700000
         BNZ   E00IFRD0       FALSE, SKIP INSTRUCTION(S) CHG26028 76200 03710000
* IF IS TRUE HERE                                        CHG26028 76200 03720000
         CALL  UJE50RD        READ NEXT INSTRUCTION      CHG26028 76200 03730000
         LTR   R15,R15        GET IT ?                   CHG26028 76200 03740000
         BNZ   E00EOF         NO, GO TO EOF ROUTINE      CHG26028 76200 03750000
         B     E00EXECI       YES, GO AND PERFORM IT     CHG26028 76200 03760000
           SPACE 3                                                      03770000
* NOW THE 'IF' IS FALSE                                                 03780000
E00IFRD0   MVI 0(R4),C'F'      SET COND TO 'FALSE'                      03790000
E00IFRD1   CALL UJE50RD        READ THE NEXT INSTRUCTION                03800000
           LTR R15,R15                                                  03810000
           BNZ E00EOF                                                   03820000
           SPACE                                                        03830000
E00SKIP  DS    0H                                        CHG26028 76200 03840000
         CLC   =C'IF ',ICOMMAND  IF THEN... IF THEN SITUATION?          03850023
         BE    E00IFRD1        YES,SO SKIP THIS ONE NOW                 03860000
         CLC   =C'MACRO ',ICOMMAND   IS IT A MACRO HEADER ?             03870000
         BE E00IFLUP           START SKIPPING UNTIL MATCHING 'END'      03880000
         CLC   =C'DO ',ICOMMAND IS IT A 'DO;                            03890000
           BE E00IFLUP         START SKIPPING UNTIL MATCHING 'END'      03900000
* HERE IT IS AN ORDINARY INSTRUCTION,AND WE HAVE 'SKIPPED ' IF          03910000
*     WE GO AND READ A NEW ONE NOW                                      03920000
           B  E00READ                                                   03930000
           SPACE 3                                                      03940000
E00IFLUP DS    0H                                                       03950000
* NOW WE HAVE FOUND A MACRO OR A DO                                     03960000
         LA R4,1               SET NUMBER OF OUTSTANDING ENDS TO 1      03970000
E00IFRD  DS      0H                                                     03980000
         CALL UJE50RD          GET THE NEXT INSTRUCTION                 03990000
         LTR   R15,R15                                                  04000000
           BNZ E00EOF          END OF INPUT FILE                        04010000
           CLC =C'END ',ICOMMAND                                        04020000
           BNE E00TIFMC        GO TEST IF INNER MACRO OR DO             04030000
           SH R4,=H'1'         -1 FROM END COUNTER                      04040000
           BZ  E00READ         GOOD OH,REACHED END OF FALSE LOOP        04050000
           B  E00IFRD                                                   04060000
           SPACE 3                                                      04070000
E00TIFMC DS    0H                                                       04080000
         CLC   =C'MACRO ',ICOMMAND                                      04090000
         BE    E00ADD1                                                  04100000
         CLC   =C'DO ',ICOMMAND                                         04110000
         BNE   E00IFRD                                                  04120000
E00ADD1  LA R4,1(R4)           UP THE NUMBER OF OUTSTANDING 'ENDS'      04130000
           B  E00IFRD          AND READ A NEW INSTRUCTION               04140000
*  END IF PROCESSING                                                    04150000
           SPACE 3                                                      04160000
E00TDO   DS    0H                                                       04170000
E00TERR  CLI   ERRORIND,0     HAS AN ABEND OCCURED ?     CHG26028 76200 04180000
         BE    E00TDO2        NO, NOT YET                CHG26028 76200 04190000
* AN ABEND HAS BEEN DETECTED SOMEWHERE.                  CHG26028 76200 04200000
*******************************************************************DASD 04210000
*  IF ERROR SWITCH SETTINGS USING FIELD "INERRORL"                *DASD 04220000
*                                                                 *DASD 04230000
*  BYTES 0-3 ON = IF ERROR LOGIC IN PROCRESS                      *DASD 04240000
*           OFF = NO IF ERROR LOGIC REACHED AS YET OR             *DASD 04250000
*                 CURRENTLY RUNNING IF ERROR AT ABEND LEVEL       *DASD 04260000
*  BYTES 4-7 ON = IF ERROR LOGIC REACHED AND ABEND OCCURED        *DASD 04270000
*           OFF = NO ABEND OCCURED WITHIN IF ERROR LOGIC          *DASD 04280000
*******************************************************************DASD 04290000
         TM     INERRORL,X'0F' IF ERROR ON WITH AND ABEND ?        DASD 04300000
         BZ     E00SKIP      NOPE   LETS SKIP ANY RUNNING AFTER ABEDASD 04310000
         CLC   LEVEL(L'LEVEL+L'NEST),ERRLEVEL            CHG26028 76200 04320000
         BH    E00TDO2        OK, IF ERROR THEN DO LOOP  CHG26028 76200 04330000
         MVI   INERRORL,X'0F' TURN OFF 'IN ERROR LOOP'   CHG26028  DASD 04340000
         B     E00SKIP        SKIP INSTRUCTION(S)        CHG26028 76200 04350000
E00TDO2  DS    0H                                        CHG26028 76200 04360000
E00EXECI DS    0H                                        CHG26028 76200 04370000
         SPACE 2                                         CHG26028 76200 04380000
           CLC =C'DO ',ICOMMAND IS IT A 'DO'                            04390000
           BNE E00TMAC         NO,TEST IF 'MACRO'                       04400000
           LH  R1,NEST         ADD                                      04410000
           LA  R1,1(R1)            1 TO                                 04420000
           CH  R1,=H'8'                NEST                             04430000
           BH  E00DOERR            IF NOT                               04440000
           STH R1,NEST         T00 BIG                                  04450000
           B   E00READ         AND READ A NEW RECORD                    04460000
E00DOERR   JOLERR 505,'TOO MANY DOS'   (THIS ABENDS,U0001)              04470004
           SPACE 3                                                      04480000
E00TMAC    CLC =C'MACRO ',ICOMMAND                                      04490000
           BNE E00TEND                                                  04500000
           LH  R1,LEVEL                                                 04510000
           LA  R1,1(R1)                                                 04520000
         CH    R1,=H'7'                                  JOL30114 76200 04530000
           BL  E00MACOK                                                 04540000
           JOLERR 508,'TOO MANY LEVELS'  (ABENDS TOO)                   04550004
E00MACOK   STH R1,LEVEL                                                 04560000
           LA R1,SAVENEST(R1)                                           04570000
           MVC 0(1,R1),NEST+1 SAVE THE NEST SO WE CAN RESET AT MACRO    04580000
*                              END SO AS NOT TO LOSE OURSELVES          04590000
           XC  NEST,NEST                                                04600000
           B   SETMACRO        TRUE 'LOOP',SET UP MACRO START           04610000
           SPACE 3                                                      04620000
E00TEND    CLC =C'END ',ICOMMAND WELL,PERHAPS IT IS AN 'END'            04630000
           BNE E00TELSE        NOPE,GO TEST IF IT IS AN'ELSE' THEN      04640000
           SPACE                                                        04650000
           LH  R1,NEST         NOW REDUCE 'NEST'                        04660000
           SH  R1,=H'1'                                                 04670000
           BM  E00ENDMC        IF <0 IF IS A 'MACRO' END                04680000
           STH R1,NEST                                                  04690000
           B   E00READ        *********************** MARCH 12 76       04700000
           BCTR R4,0           -1 FROM R4                         75311 04710000
           MVI 0(R4),C' '      CLEAR COND                         75311 04720000
           B   E00READ                                                  04730000
           SPACE 3                                                      04740000
E00ENDMC DS    0H                                                       04750000
* NOW THE'MACRO END' REQUIRES SPECIAL ATTENTION BECAUSE WE MUST         04760000
*     STORE THE HIGHEST RETURN CODE FROM THE PROGRAMS EXECUTED          04770000
*     BY THE MACROS.                                                    04780000
           LH R1,LEVEL                                                  04790000
           LA R15,SAVENEST(R1)                                          04800000
           SH R1,=H'1'                                                  04810000
           BNM E00MACEN                                                 04820000
           JOLERR 506,'TOO MANY ENDS'  (ABENDS)                         04830004
           SPACE 3                                                      04840000
E00MACEN  DS    0H                                                      04850000
           STH R1,LEVEL                                                 04860000
           MVC NEST+1(1),0(R15)                                         04870000
           SPACE 3                                                      04880000
** STORE THE HIGHEST RETURN CODE FROM THE MACRO                         04890000
           LA R7,IDSTART                                                04900000
           LH R1,NOIDS                                                  04910000
           MH R1,=H'18'                                                 04920000
           LR R15,R7                                                    04930000
           AR R7,R1                                                     04940000
           LH R14,=H'-18'                                               04950000
           LR R1,R7                                                     04960000
           USING IDOVLY,R1                                              04970000
           MVC DBL,IDRETN                                               04980000
           L R7,DBL                                                     04990000
**** CHECK FOR A DEAD MACRO HEADER WITH A -1 RETURN CODE AND BYPASSDASD 05000000
           CLC  DBL(4),=F'-1'                                      DASD 05010000
           BNE E00LUP10                                                 05020000
           SR R7,R7                                                     05030000
E00LUP10   CLC IDNAME,=CL8'MACRO'                                       05040000
           BE  E00GMAC                                                  05050000
           MVC DBL,IDRETN                                               05060000
**** CHECK FOR A DEAD MACRO HEADER WITH A -1 RETURN CODE AND BYPASSDASD 05070000
           CLC  DBL(4),=F'-1'                                      DASD 05080000
           BE   E00BXH1                                            DASD 05090000
           C R7,DBL                                                     05100000
           BH  E00BXH1                                             DASD 05110000
*          BL  E00BXH1                                             DASD 05120000
           L   R7,DBL                                                   05130000
E00BXH1    BXH R1,R14,E00LUP10                                          05140000
         JOLERR 507,'NO MACRO START'                                    05150004
E00GMAC  ST    R7,CALLAREA                                              05160000
         MVC   IDRETN,CALLAREA                                          05170000
         MVC   IDNAME,=CL8' '  TO GET RIGHT EFFECT FOR NESTED MACROS    05180000
         B     E00READ                                                  05190000
         SPACE 3                                                        05200000
E00TELSE DS    0H                                                       05210000
* NOW THE 'ELSE' MUST BE TESTED                                         05220000
           CLC =C'ELSE ',ICOMMAND                                       05230000
           BNE E00TFALS                NOT ELSE,TEST IF FALSE 'LOOP'    05240000
           CLI 0(R4),C' '              WAS AN 'IF' JUST PROCESSED ?     05250000
           BNE E00ELSOK                                                 05260000
           JOLERR 402,'ELSE IGNORED'                                    05270004
           SPACE 3                                                      05280000
E00ELSOK DS    0H                                                       05290000
           CLI 0(R4),C'F'              LAST FALSE?                      05300000
           BNE E00TLTRU                                                 05310000
           MVC 0(2,R4),=C'  '          TURN OFF COND CODE ALTOGETHER    05320000
           B  E00READ                                                   05330000
E00TLTRU   B  E00IFRD1                 GO JOIN 'IF' FALSE PROCESSOR     05340000
           SPACE 3                                                      05350000
E00TFALS DS    0H                                                       05360000
E00ORD   DS    0H                                                       05370000
           CLEAR ISRUN                                                  05380000
           L   R1,=A(JE00TBL1) LOAD ADDRESS OF TABLE WITH THE           05390000
*                              INSTRUCTION NAMES AND THE ADDRESSES      05400000
*                              OF THE ROUTINES TO HANDLE THEM.          05410000
           LM  R7,R9,0(R1)     LOAD BXLE ADDRESS CONSTANTS FOR          05420000
*                              THE ABOVE TABLE.                         05430000
E00FINDR DS    0H                                                       05440000
           CLC ICOMMAND,0(R7)   COMPARE INSTRUCTION TO THAT IN TABLE    05450000
           BE  E00GOTRT        GOT THE ROUTINE TO HANDLE IT.            05460000
           BXLE  R7,R8,E00FINDR                                         05470000
E00ERROR DS    0H                                                       05480000
           JOLERR 503,'INVALID INSTRUCTION ''',ICOMMAND,               *05490004
               ''' IN SCHED'                                            05500000
           SPACE 3                                                      05510000
E00GOTRT   L   R15,8(R7)       LOAD ROUTINE ADDRESS                     05520000
           BALR R14,R15                                                 05530000
           CLI ISRUN,C'1'      WAS A RUN JUST PROCESSED ?               05540000
           BE  E00FNDRN        YES,TWAS A RUN                           05550000
           LTR R15,R15         DID PROCESSOR HANDLE NORMAL INSTRUCTION  05560000
*                              (EG TYPE,DELETE ETC??)                   05570000
           BZ  E00MAINL        YES,SO TRY NEXT INSTRUCTION.             05580000
* HERE AN INSTRUCTION WAS EXECUTED,BUT RETURNED A NON-ZERO              05590000
*     CODE.                                                             05600000
           CH  R15,=H'4'       RETURN TO OS AFTER SKIPPING TO           05610000
*                              THE RIGHT JOB STEP ?                     05620000
           BE E00STPON         STEP ON TO A NEW OS STEP.                05630000
           CH R15,=H'&RSVDRC'  STOP ETC EXECUTED ?                      05640000
           BE BADRETN                                                   05650000
E00CLRC    MVC 0(2,R4),=CL2' '                                          05660000
           B  E00MAINL                                                  05670000
           B  *+4                                                       05680000
           B  *+4                                                       05690000
           B  *+4                                                       05700000
           B  *+4                                                       05710000
*     SET THE INDICATOR WHICH TELLS OUR CALLER (THE MONITOR)            05720000
*     TO  RETURN TO OS SO IT CAN SKIP STEPS (OR CANCEL THE JOB)         05730000
           SPACE 3                                                      05740000
RETURN   DS    0H                                                 74365 05750000
E00EOF   DS    0H                                                       05760000
* WE HAVE READ AN EOF ON THE INSTRUCTION FILE,SO WE WANT TO             05770000
*     GET TO THE END OF THE JOB                                         05780000
*                                                                       05790000
* IF AN ABEND HAS OCCURED, WE SHOULD SET A RETURN OF                    05800000
*  4000 SO THAT THE JOB WILL TERMINATE WITH AN ERROR CONDITION.         05810000
         SPACE 1                                         CHG26028 76200 05820000
         CLI   ERRORIND,0     DID AN ERROR OCCUR ?       CHG26028 76200 05830000
         BE    E00EOF2        NO, SO TERMINATE NICELY    CHG26028 76200 05840000
*                             (IF SLOWLY...)             CHG26028 76200 05850000
         MVC   LASTCC+2(2),=H'&RSVDRC' FLUSH THE JOB     CHG26028 76200 05860000
         B     RETNNOW        CLOSE FILES, RETURN.       CHG26028 76200 05870000
E00EOF2  LA    R11,1            SET EOF INDICATOR ON                    05880000
         B     RETNNOW                                                  05890000
         SPACE 3                                                        05900000
E00STPON DS    0H                                                       05910000
         SR    R11,R11         SET EOF INDICATOR OFF                    05920000
         SPACE 3                                                        05930000
E00GOTRS DS    0H                                                       05940000
E00TEST  DS    0H                                                       05950000
         POINT RETN,TTR$RETN                                            05960000
         WRITE E00RET2,SF,RETN,READAREA,'S'                             05970000
         CHECK E00RET2                                                  05980000
         SPACE 3                                                        05990000
RETNNOW  DS    0H                                                       06000000
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS     06010000
         MVI GOBACK,C'1'                                                06020000
         BAL     R11,UJEFILES   GO CLOSE ALL FILES                 DASD 06030000
         L     R15,LASTCC                                         82200 06050000
         JOLRETN RC=(15)                                                06060009
E00FNDRN DS    0H                                                       06090000
         LTR R15,R15           DO WE HAVE TO SKIP TO A NEW              06100000
         BNZ E00STPON          OS STEP FOR THIS RUN ?                   06110000
         SPACE 3                                                        06120000
SETMACRO DS    0H                                                       06130000
* RUN IT NOW                                                            06140000
         LH    R1,NOIDS                                                 06150000
         LA    R1,1(R1)                                                 06160000
         CH    R1,MAXIDS                                                06170000
         BL    MUVNAME                                                  06180000
*        LH    R1,MAXIDS                                                06190001
*        CVD   R1,DBL                                                   06200001
*        UNPK  DDPRIM,DBL                                               06210001
*        OI    DDPRIM+L'DDPRIM-1,X'F0'                                  06220001
****************************************************************** DASD 06230001
* NOW BEFORE ABENDING WE WILL TAKE A LOOK AT THE RETN TABLE FOR A* DASD 06240001
* USED MACRO HEADER AND OVERLAY IT MAKING ROOM FOR 1 NEW GUY     * DASD 06250001
****************************************************************** DASD 06270001
         LH    R15,NOIDS      LOOK THIS MANY TIMES                 DASD 06280000
         LA    R1,18                                               DASD 06290000
         LA    R1,IDSTART(R1) START LOOKING HERE                   DASD 06300000
         USING IDOVLY,R1                                           DASD 06310000
SLIDELOP CLC   IDNAME,=CL8'MACRO' IS THIS GUY USED ?               DASD 06320000
         BNE   SLIDEUP        YEA MOVE IT UP                       DASD 06330000
         LA    R1,18(R1)      UP TO NEXT GUY                       DASD 06340000
         BCT   R15,SLIDELOP                                        DASD 06350000
* WELL GUY WHAT NOW ???????                                        DASD 06360000
         JOLERR 501,'MAX ',MAXIDS,' STEPS EXCEEDED'                     06370004
SLIDEUP  MVC   0(18,R1),18(R1) SLIDE THE REST UP 1                 DASD 06380000
         LA    R1,18(R1)      INCR TO NEXT SLOT                    DASD 06390000
         BCT   R15,SLIDEUP    LETS DO EM ALL                       DASD 06400000
         LH    R1,NOIDS       NOW LOAD NO OF IDS AGAIN             DASD 06410000
MUVNAME  STH   R1,NOIDS                                                 06420000
         MH    R1,=H'18'                                                06430000
         LA    R1,IDSTART(R1)                                           06440000
         USING IDOVLY,R1                                                06450000
         MVC   IDSTMT,STMT                                              06460000
         OC    IDSTMT,=C'0000'                                          06470000
         MVC   IDNAME,TASKLABL                                          06480000
         MVC   IDNEST,NEST                                              06490000
         MVC   IDLEVEL,LEVEL                                            06500000
         MVC   IDRETN,=F'-1'                                            06510000
         CLC   =CL8'MACRO',ICOMMAND                                     06520000
         BNE   NOTMACH                                                  06530000
         MVC   IDNAME,=CL8'MACRO'                                       06540000
         B     E00MAINL                                                 06550000
NOTMACH  DS    0H                                                       06560000
         AIF   (&X8).X8050                                              06570000
* WE MUST NOW WRITE THE PROGRAM NAME IN THE PGM FIELD OF THE SCT        06580000
*    SO THAT SMF WILL BE OK                                             06590000
*CVC       GETJOBQ SCTDECB,JCTSSTR GET SCT,AFTER POINT                  06600000
*CVC       CLC =C'$JOLMN',SCTPGMNM    FIRST PROGRAM GETS SMF RECORD 3.1 06610000
*CVC       BNE E00SMF1                                                  06620000
*CVC       MVC SCTPGMNM,RUNNAME                                         06630000
E00SMF1  DS    0H                                                       06640000
*CVC       PUTJOBQ SCTDECB     RE-WRITE SCT                             06650000
* OK LET'S XCTL                                                         06660000
         AGO   .NX8050                                                  06670000
.X8050   ANOP                                                           06680000
         FIX   'FIDDLE SMF RECORDS HERE'                                06690000
.NX8050  ANOP                                                           06700000
         POINT    RETN,TTR$RETN                                         06710000
         WRITE DECBRET1,SF,RETN,READAREA,'S'                            06720000
         CHECK    DECBRET1                                              06730000
         AGO   .VS050                                                   06740000
         SPACE 1                                                  74365 06750000
         CLI   VS,C' '         ARE WE RUNNING UNDER VS ?          74365 06760000
* IF WE ARE,WE WILL ATTACH NOW RATHER THAN XCTLING AND CLOSING    74365 06770000
*          AS THIS IS FASTER AND VS CAN ROLL US OUT QUICKLIY      74365 06780000
           BNE E00ISVS         IS VS,DO THINGS DIFFERENTLY        74365 06790000
           CLI IBMRTN,C' '     ARE WE USING AN IBM ROUTINE TO     ***** 06800000
*                              ACCESS JOBQ ?                      ***** 06810000
           BE  E00NDEL2                                           ***** 06820000
           DELETE EPLOC=IBMRTN YES, DELETE IT                     ***** 06830000
E00NDEL2 DS    0H                                                 ***** 06840000
*          CLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ)                    *DASD 06850000
           BAL   R11,UJEFILES   GO CLOSE ALL FILES                 DASD 06860000
           MVC DBL(4),STMT    SAVE STATEMENT NUMBER WHILE         75128 06870000
*                              PROBLEM PROGRAM IS EXECUTING             06880000
           L   R1,ATASKPRM                     LOAD ADDR OF PARAMETER   06890000
           ST R1,CALLAREA                                               06900000
           MVI CALLAREA,X'80'                                           06910000
           L   R13,4(R13)                      RESET SAVE ADDR          06920000
           L   R14,12(R13)                     RESET RETURN ADDR        06930000
           XCTL (2,12),DE=RUNNAME,DCB=0,MF=(E,CALLAREA)                 06940000
.VS050     SPACE 3                                                75311 06950000
*********************************************************************** 06951022
*                                                                       06951122
*        M V S  / F 4 ATTACH OR RETURN TO MONITOR                       06951222
*                                                                       06951322
*********************************************************************** 06952022
E00ISVS    MVC DBL,STMT        SHIFT STATEMENT NUMBER             75311 06960000
* 3.0 - MVS CODE                                                  75311 06970000
*                                                                       06980022
* IF A JOBLIB WAS ALLOCATED, WE MUST RETURN TO THE MONITOR,       87150 06990027
* AND LET HIM OPEN IT, OTHERWISE WE WILL ATTACH THE PROBLEM       87150 07000022
* PROGRAM HERE.                                                   87150 07010022
*                                                                       07011022
* LATER, WHEN THIS CODE IS RE-ENTRANT, IT WILL BE MORE            75311 07020000
* EFFICENT TO ATTACH IT HERE, BUT VS1 IS A BIT OF A PROBLEM       75311 07030000
* BECAUSE IT DOESN'T HAVE 16MEGABYTES TO PLAY WITH.               75311 07040000
         BAL   R11,UJEFILES     GO CLOSE ALL FILES                 DASD 07050000
         CLI   JOBLBDD,X'00'   JOBLIB ALLOCATED IN THIS STEP?     87150 07051022
*FIX     BE    E00ATTAC        NO, SO ATTACH FROM HERE.           87150 07052030
         JOLRETN RC=0          UJEMON WILL LOOK AT 'VS' TOO.      75311 07060022
E00ATTAC MVC   CALLAREA(4),ATASKPRM                               87150 07070022
         MVI   CALLAREA,X'80'                                     87150 07080022
         XC    TASK2ECB,TASK2ECB                                  87150 07090022
         LA    R1,CALLAREA                                        87150 07100022
         ATTACH DE=RUNNAME,ECB=TASK2ECB            74365          87150 07110022
         LR    R11,R1          SAVE TCB ADDRESS                   87150 07120022
         WAIT  1,ECB=TASK2ECB                                     87150 07130022
         MVC   TASKRETN(1),X'1D'(R11) SHIFT IN ABEND CODE         87150 07140022
         MVC   TASKRETN+1(3),TASK2ECB+1 AND RETURN CODE           87150 07150022
         ST    R11,CALLAREA                                       87150 07160022
         DETACH CALLAREA                                          87150 07170022
         B     E00VSSTR        BACK TO MAINLINE                   87150 07180022
         SPACE                                                          07190000
*************************************************************      DASD 07220000
*  CLOSE ANY OPEN FILES BEFORE RETURNING TO THE MONITOR     *      DASD 07230000
*        MVS  WILL ABEND-C03                                *      DASD 07240000
*************************************************************      DASD 07250000
         FIX 'CLOSE TOGETHER'                                           07260000
UJEFILES DS    0H                                                  DASD 07270000
*        FIX 'DON''T CLOSE'                                             07280049
*        BR    R11   **** DON'T CLOSE FOR DYNAMIC SCHEDULER             07290047
         ST    R11,CALLAREA+4                                           07300000
         LA    R10,INSTRUCT                                        DASD 07310000
         BAL   R11,UJEFCLSE                                        DASD 07320000
         LA    R10,PRINT                                           DASD 07330000
         BAL   R11,UJEFCLSE                                        DASD 07340000
         LA    R10,RETN                                            DASD 07350000
         BAL   R11,UJEFCLSE                                        DASD 07360000
         AIF   (&X8).X8060                                              07370010
         LA    R10,JOBQ                                            DASD 07380000
         BAL   R11,UJEFCLSE                                        DASD 07390000
.X8060   ANOP                                                    88036  07391010
         L     R11,CALLAREA+4                                           07400000
         BR    R11                                                 DASD 07410000
UJEFCLSE DS    0H                                                  DASD 07420000
         TM    48(R10),X'10'  IS FILE OPEN ??                      DASD 07430000
         BZ    0(R11)         NOPE  RETURN                         DASD 07440000
         JOLCLOSE ((R10)),MF=(E,CALLAREA) CLOSE THIS GUY           DASD 07450000
         BR    R11            RETURN                               DASD 07460000
         LTORG                                                          07470000
         SPACE                                                          07480000
ISRUN    DC    C' '                                                     07490000
RETNBLKS DS    H                                                        07500000
GOTOLAB  DS    CL8                                                      07510000
         SPACE 3                                                        07520000
LABEL    DS    CL8                                                      07530000
COMMAND  DS    CL8                                                      07540000
CURRTIME DS    CL8                                                      07550000
ZERO     DC    F'0'                                                     07560000
GETATKN  LA    R1,TKNX                                                  07570000
         L     R15,=V(UJCGETKN)                                         07580000
         BR    R15                                                75128 07590000
         SPACE 3                                                        07600000
E00FXVOL DS    0H          CLEAR TO BLANKS                         DASD 07610001
         MVC   VOL,BLANKS                                          DASD 07620001
         LA R1,VOL-1                                              74365 07630000
         LA R15,DDVOLUME                                          74365 07640000
E00SHFTC MVI 0(R1),C','       SHIFT IN COMMA TO SEPARATE VOLS    74365  07650000
         MVC 1(6,R1),0(R15)    SHIFT IN A VOLUME                  74365 07660000
         LA    R1,6(R1)        STEP OVER ',VOLUME'                 DASD 07670000
         LA R15,6(R15)         STEP OVER VOLUME                   74365 07680000
         CLI 0(R1),C' '        DROP EXTRA BLANKS (IF L'VOL<6)     74365 07690000
         BNE *+8               NOT BLANK                          74365 07700000
         BCT R1,*-8            IS BLANK,DROP R1 BY 1              74365 07710000
         LA    R1,1(R1)        SKIP TO NEXT POSITION              75311 07720000
         CLI 0(R15),C' '       LAST VOL ?                         74365 07730000
         BE    E00SETVL        YEP, OUT WE GO (NEARLY)            74365 07740000
         C     R15,=A(DDVOLUME+30)     END LIST                   74365 07750000
         BNH   E00SHFTC                                                 07760000
E00SETVL S     R1,=A(VOL-1)                                       75003 07770000
         STH   R1,#VOL                                                  07780000
         BR    R14                                                74365 07790000
         AGO   .NOEPS                                                   07791000
UJS23EP5 LA    R1,5                                                     07800000
         B     UJS23SET                                                 07810000
UJS23EP4 LA    R1,4                                                     07820000
         B     UJS23SET                                                 07830000
UJS23EP3 LA    R1,3                                                     07840000
         B     UJS23SET                                                 07850000
UJS23EP2 LA    R1,2                                                     07860000
         B     UJS23SET                                                 07870000
UJS23EP1 LA    R1,1                                                     07880000
         B     UJS23SET                                                 07890000
UJS23EP0 SR    R1,R1                                                    07900000
UJS23SET DS    0H                                                       07910000
         L     R15,=V(UJS23ER)                                          07930000
         BR    R15                                                      07940000
.NOEPS   ANOP                                                           07941000
* WILL EVENTUALLY RETURN TO R14 ADDRESS                                 07950000
#S23MAX  DC    H'92'               MAX WTO OR LREC SIZE           76200 07960000
#S23LNE2 DS    H                   LINE 2 LENGTH                  76200 07970000
S23LNE2  DS    CL100               LINE 2 WORK AREA               76200 07980000
S23STMT  DC    XL4'00000000'                                            08000002
#S23BLKS DS    H                                                        08010002
         DS    H                                                        08020002
#S23LREC DS    H                                                        08030002
#S23MSSG DS    H                                                        08040002
S23MSSG  DS    CL150                                              74365 08050002
         DS    F                                                  75003 08060002
#VOL     DC    H'0'                                               75311 08070002
VOL      DC    CL120' '        SPACE FOR 20 VOLUMES               87150 08080018
TASK2ECB DC    F'0'                                               74365 08090002
         DS    F               SPARE                                    08100002
RUNBLDL  DS    0D                                                       08110002
         DC    H'1'                                                     08120002
         DC    H'68'                                                    08130002
RUNNAME  DS    CL8                                                      08140002
RUNTTRK  DS    CL4                                                      08150002
RUNZ1    DS    CL1                                                      08160002
RUNC1    DS    CL1                                                      08170002
RUNUSDTA DS    CL68                                                     08180002
UJ00ANS  DS    3F                                                       08190002
UJE00DDM DC    CL8'$$PRNT'                                              08200002
         ENTRY RETN,INSTRUCT,PRINT    ******FOR LINK MAP ******   75128 08220002
RETN     DCB   DDNAME=&DDINST,DSORG=PO,MACRF=W,                  80290 *08230002
               DEVD=DA,RECFM=FB,LRECL=80,                              *08240002
               BLKSIZE=&RETNSIZ                                    DASD 08250002
INSTRUCT DCB DDNAME=&DDINST,DSORG=PO,MACRF=(R,W),DEVD=DA                08260002
PRINT    DCB DDNAME=&DDPRT,DSORG=PS,DEVD=DA,RECFM=VB,LRECL=132,        *08270002
               BLKSIZE=136,MACRF=W                                      08280002
JOLCOIN    DCB DDNAME=JOLCOIN,DSORG=PS,MACRF=PM,                80290  *08290000
               DEVD=DA,RECFM=FB,LRECL=80,                              *08300000
               BLKSIZE=800                                              08310000
         AIF   (&X8).X8120                                              08320000
JOBQ       DCB DDNAME=$$JOBQ,DSORG=PS,MACRF=(WP,RP),DEVD=DA       ***** 08330000
           ENTRY JOBQ                                             ***** 08340000
.X8120   ANOP                                                           08341011
TEMPDCB  DCB   DDNAME=&DDINST,DSORG=PO,MACRF=R,          JOL30116 76200*08350000
               DEVD=DA,EXLST=TEMPEXIT                    JOL30116 76200 08360000
TEMPEXIT DC    A(JFCBDSNM+X'87000000')                   JOL30116 76200 08370000
           PRINT GEN                                                    08380000
ERRNUM1  DS    CL5                                                      08391000
ERRNUM2  DS    CL5                                                      08392000
ERRNUM3  DS    CL5                                                      08393000
ERRNUM4  DS    CL5                                                      08394000
ERRNUM5  DS    CL5                                                      08395000
ATCB       DS  A               ADDRESS OF TCB                           08410000
         AIF   (&X8).X8140                                       88036  08410121
ATIOT      DS  A                                                        08411021
AQMRAW     DC  A(0)            ADDRESS OF JOB Q ACCESS RTN              08420000
IBMRTN     DC  CL8' '          NAME OF ROUTINE THAT ACCESSES JOBQ       08430000
JCTTTR     DC  A(0)            ADDRESS | TTR OF THE JCT (EACH     ***** 08440000
*                              SYSTEM IS A LITTLE DIFFERENT)      ***** 08450000
.X8140   ANOP                                                    88036  08451021
           SPACE 3                                                      08460000
* THIS TABLE IS USED BY THE SCRATCH AND CATLG ROUTINES                  08470000
*     ALTHOUGH THE JOL PROCESSOR KNOWS WHAT TYPE OF UNIT A 'DD' CARD    08480000
*     IS FOR,TO SAVE SPACE IN THE PROCESSOR IT IS NOT CONVERTED         08490000
*     TO A FULL IBM UNIT (AND OF COURSE THE USER MAY SPECIFY HIS        08500000
*     OWN GENERIC UNIT)                                                 08510000
* THIS TABLE IS USED ONLY WHEN A SCRATCH OR CATALOG WAS GIVEN           08520000
*     AND THE USER DID NOT CREATE THE DATA-SET IN THIS JOB,AND          08530000
*     THERE-FORE OS MAY NOT HAVE CONVERTED IT INTO A NICE LOOKING       08540000
*     UMIT FOR US.                                                      08550000
HEXUNITS   DC A(*+12)                                                   08560000
           DC A(5)                                                      08570000
           DC A(HEXUNITE-5)                                             08580000
         COPY  UNITABLE                                            DASD 08590000
HEXUNITE DS    0H                                                       08600000
           SPACE 3                                                      08620000
         PRINT GEN                                                      08630000
HEX      EQU *-240                                                75311 08640000
         DC  C'0123456789ABCDEF'                                  75311 08650000
         SPACE 3                                                        08660000
DYNCONC  DC    X'80',AL3(CONCRB)                                        08660142
CONCRB   DC    AL1(20,3)       CONCATENATION                            08660240
         DC    H'0'            FLAGS1                                   08660340
CONCERR  DC    F'0'            ERROR AND INFO CODES                     08660440
         DC    A(ATUCPARM)                                              08660540
         DC    F'0'            RESERVED                                 08660640
         DC    H'0'            FLAGS2                                   08660740
         DC    H'0'            END OF REQUEST BLOCK                     08660840
ATUCPARM DC    X'80',AL3(TUCONCAT)                                      08660940
TUCONCAT DC    AL2(1,2)        TEXT UNIT 1, 2 DDNAMES TO CONCAT         08661040
#DDNAME  DC    H'8'           USED IN SCRATCH AND CATLG ETC             08670000
DDNAME   DS    CL8                                                      08680000
#ERETDDN DC    H'8'          RETURNED DDNAME FROM ALLOCATION            08680140
ERETDDN  DS    CL8                                                      08680240
         SPACE 3                                                        08680340
#ERETDSN DS    H             RETURNED DSNAME FROM ALLOCATION            08681040
ERETDSN  DS    CL44                                                     08682040
#DSNAME  DS    0H                                                       08690000
#DSN     DC    H'10'         INITED ONLY FOR TESTS                      08700000
DSN      DS    0CL44                                                    08710000
DSNAME   DC    CL44'NOT INIT'                                           08720000
#ERETVOL DS    H             RETURNED VOLUME FROM ALLOCATION            08721066
ERETVOL  DS    CL6                                                      08722066
           SPACE 3                                                      08780000
RETN8    LA    R15,8                                                    08790000
         B     RETRN                                                    08800000
RETN4    LA    R15,4                                                    08810000
         B     RETRN                                                    08820000
RETN0    SLR   R15,R15                                                  08830000
RETRN    JOLRETN RC=(15)                                                08840000
           SPACE 3                                                      08850000
          DC    80S(*)                                                  08860000
           LTORG                                                        08870000
RETNAREA DS    0D                                                       08880000
READAREA DS    XL&RETNSIZ                                          DASD 08890000
         ORG   READAREA                                                 08900000
TTR$RETN DS    F               CONSTRUCTED BY BLDL IN UJESCHED          08910000
TTR$INST DS    F               CONSTRUCTED BY BLDL IN UJESCHED          08920000
NOIDS    DS    H          CURRENT NO OF IDS                             08930000
LEVEL    DC   H'0'                                                      08940000
NEST     DC   H'0'                                                      08950000
COND     DC    CL50' '                                                  08960000
ERRORIND DC    X'00'          SET ON IF ABEND            CHG26028 76200 08970000
INERRORL DC    X'00'          ON IF CURRENTLY DOING ERRORCHG26028 76200 08980000
* NOTE:- DO NOT SEPARATE NEXT TWO LOCATIONS              CHG26028 76200 08990000
ERRLEVEL DC    H'0'           SET BY 'UJE04IF' WHEN -    CHG26028 76200 09000000
ERRNEST  DC    H'0'           'IF ERROR' FOUND           CHG26028 76200 09010000
SAVENEST   DC  XL6'00'                                                  09020000
         EYEBALL MAXCC                                                  09030000
MAXCC      DC  F'0'                                                     09040000
LASTCC     DC  F'0'                                                     09050000
JOLSVC     DC  X'0A00'         SVC FROM 'OPTION' INSTRUCTION      75311 09060000
IDSTART  DS    0X                                                       09070000
         ORG                                                            09080000
           SPACE 3                                                      09090000
VOLDETS  CSECT                                                          09100000
#VOLLIST DC    H'0'                                                     09110000
VOLLIST  DS    256CL6                                                   09120000
           SPACE 3                                                      09130000
TABLES CSECT                                                            09140000
*        PRINT OFF                                                      09150000
         COPY  DDDSNDET                                           75128 09160000
         ORG                                                            09170000
DDDETLN  EQU   *-DDDSNDET     LENGTH OF THE AREA                        09180000
         ORG   DDDSNDET                                           75128 09190000
         COPY  PGMDETS                                            75128 09200000
         SPACE 3                                                  75128 09210000
         ORG                                                            09220000
         DS    0H                                                       09230000
MAXIDS   DC    AL2((READAREA+L'READAREA-IDSTART)/18)                    09240000
         DC    AL2(0)                                                   09250000
BLANKS   DC    CL80' '                                                  09260001
         LTORG                                                          09270000
         AIF   (&X8).X8180                                       88036  09271010
         PRINT NOGEN                                                    09280000
         EYEBALL JCT                                                    09290000
JCT      DS    0D                                                       09300000
         IEFAJCTB                                                       09310000
           EYEBALL SCT                                                  09320000
SCT        DS  0D                                                       09330000
         IEFASCTB                                                       09340000
           EYEBALL SIOT                                                 09350000
SIOT     DS    0D                                                       09360000
         IEFASIOT                                                       09370000
         ORG                                                            09380000
         EYEBALL JFCB                                                   09390000
         IEFJFCBN   LIST=YES                                      76200 09400000
         PRINT GEN                                                      09410000
         EYEBALL QMPA                                                   09420000
QMPA     DS    0D              USED FOR VS CURRENTLY                    09430000
QMPAJOB  DS    CL8             JOB NAME OR NO-WORK-CHAIN ELEMENT        09440000
QMPAFUNC DS    CL1             FUNCTION CODE                            09450000
QMPAFLTR DS    CL2             NN OF 1ST LOGL TRACK ASSIGNED TO ENTRY   09460000
QMPANOTR DS    CL1             NUMBER OF RECORDS ASSIGNED IN THIS TRACK 09470000
QMPANXTL DS    CL2             NN OF NEXT LOGICAL TRACK                 09480000
QMPANOLT DS    CL1             NUMBER OF LOGICAL TRACKS ASSIGNED        09490000
QMPAJBCD DS    CL1             JOB TYPE CODE                            09500000
QMPAJBST DS    CL1             JOB STATUS CODE                          09510000
QMPAPRTY DS    CL1             JOB PRIORITY                             09520000
QMPANXTQ DS    CL2             NN OF NEXT QUEUE ENTRY                   09530000
QMPAQID  DS    CL2             QUEUE ENTRY IDENTIFICATION               09540000
QMPAORCL DS    CL1             ORIGIN CLASS ID                          09550000
QMPARES1 DS    CL1             RESERVED                                 09560000
QMPATRKS DS    A               ADDRESS TRACK STACKING PARM LIST         09570000
QMPAIND  DS    CL1                                                      09580000
         ORG   QMPAIND                                                  09590000
QMPAAECB DS    A               ADDRESS OF USERS ECB/IOB                 09600000
QMPANORC DS    CL1             1ST 4 BITS=NO OF RECORDS TO ASSIGN       09610000
*                              2ND 4 BITS=NO OF RECORDS TO READ/WRITE   09620000
QMPAAEXT DS    AL3             ADDRESS OF EXTERNAL PARAMETER AREA       09630000
IEFQATCB DS    A               ADDRESS OF TCB                           09640000
IEFQAREC DS    A               ADDRESS OF RECORD BUFFER                 09650000
IEFQAQMP DC    A(QMPA)         ADDRESS OF QMPA                          09660000
IEFQTTR  DS    A               TTR OF REQUESTED RECORD                  09670000
IEFQRCLN DC    AL2(176)                                                 09680000
IEFQFUNC DC    AL2(0)                                                   09690000
IEFQDECB DS    A               WORK AREA(NOT REQUIRED BY IEFQMMAC)      09700000
IEFQRETN DS    A               RETURN ADDRESS                           09710000
.X8180   ANOP                                                           09720000
         AIF   (NOT &X8).NX8200                                  88036  09721013
         TITLE 'JOB FILE CONTROL BLOCK'                                 09722013
         KDJJFCBN   LIST=YES,DSECT=NO                                   09723013
         TITLE ' '                                               88036  09724013
.NX8200  ANOP                                                    88036  09725013
         EYEBALL INST                                                   09730000
INST     DS    H                               INSTRUCTIONS USE THIS    09740000
*                                              AREA AS WORK AREA AND    09750000
*                                              THEY ARE WRITTEN FROM    09760000
*                                              HERE                     09770000
         ORG   INST                                                     09780000
ILENGTH  DS    H                               LENGTH OF RECORD         09790000
         DC    H'0'                            FOR VB RECORD DESCRIPTOR 09800000
II       DC    C'I'                            RECORD TYPE              09810000
ILABEL   DS    CL8                             STATEMENT LABEL          09820000
ISTMT    DS    CL4                             STATEMENT NUMBER         09830000
ILEVEL   DS    CL1                                                      09840000
INEST    DS    CL1                                                      09850000
ICOMMAND DS    CL8                             INSTRUCTION EG 'TYPE'    09860000
IBODY    EQU   *-ILENGTH                       LENGTH OF FIXED          09870000
*                                              PART OF RECORD           09880000
ITEXT    DS    CL150                                              75128 09890000
         SPACE 3                                                        09900000
         EYEBALL TKNX                                                   09910000
         COPY  TKNX                                                     09920000
         ORG TKNSTRG-IBODY-2                                            09930000
INSTRDA  DS    0C                                                       09940000
         ORG                                                            09950000
         LTORG                                                          09960000
         DS    0D                                                       09970000
INSCSECT CSECT                                                          09980000
JE00TBL1 DC    A(JE00TBL2)                                              09990000
         DC    A(12)                                                    10000000
         DC    A(JE00END2-12)                                           10010000
JE00TBL2 DC    CL8'RUN     ',V(UJE20RUN)                                10020000
         DC    CL8'C       ',V(UJE05CAT)        CATLG                   10030000
         DC    CL8'U       ',V(UJE06UNC)        UNCATLG                 10040000
         DC    CL8'K       ',V(UJE07KEE)        KEEP                    10050000
         DC    CL8'S       ',V(UJE08SCR)        SCRATCH                 10060000
         DC    CL8'D       ',V(UJE09DEL)        DELETE                  10070000
         DC    CL8'RETURN  ',V(UJE23RET)                          74365 10080000
         DC    CL8'STOPWHEN',V(UJE13WHN)                          87150 10081046
         DC    CL8'TYPE    ',V(UJE10TYP)                                10090000
         DC    CL8'DISPLAY ',V(UJE11DIS)                                10100000
         DC    CL8'SIGNAL  ',V(UJE12SIG)                                10110000
         DC    CL8'STOP    ',V(UJE13STP)                                10120000
         DC    CL8'F       ',V(UJE14FRE)        FREE                    10130000
         DC    CL8'OPTIONS ',V(UJE31OPT)                          75311 10140000
JE00END2 DS    0C                                                       10150000
         AIF   (&X8).X8220                                       88036  10151023
         EJECT                                                          10160000
UCBS     DSECT ,                                            FIX-X 76200 10180000
         IEFUCBOB  LIST=YES                                 FIX-X 76200 10190000
         SPACE 3                                                        10200000
.X8220   ANOP                                                           10201023
PARMAREA DSECT                                                          10220000
         COPY  UJECOMM                                                  10230000
IDOVLY   DSECT                                                          10240000
IDSTMT   DS   CL4                                                       10250000
IDNAME   DS   CL8                                                       10260000
IDRETN   DS   CL4                                                       10270000
IDLEVEL  DS   CL1                                                       10280000
IDNEST   DS   CL1                                                       10290000
********  VOLINFO DSECT USED TO REFERENCE A CAMLST *************   DASD 10300000
VOLINFO  DSECT                                                     DASD 10310000
NOVOLS   DS    H                                                   DASD 10320000
CATDEV   DS    XL4  )                                              DASD 10330000
CATVOL   DS    CL6  )   REPEATS NOVOLS TIMES                       DASD 10340000
CATLABEL DS    H    )                                              DASD 10350000
         LTORG                                                          10360000
         JOLSAVE  CSECT=GETTIME                                         10370000
         TIME                                                           10380000
         STM   R0,R1,DBL            AND STORE                           10390000
         UNPK  TIMEWORK(16),DBL     UNPACK TIME AND DATE                10400000
         MVC   CURRTIME(2),TIMEWORK+1 HOURS                             10410000
         MVI   CURRTIME+2,C'.'                                          10420000
         MVC   CURRTIME+3(2),TIMEWORK+3 MINS                            10430000
         MVI   CURRTIME+5,C':'                                          10440000
         MVC   CURRTIME+6(2),TIMEWORK+5 SECS                            10450000
         SPACE 3                                                        10460000
         JOLRETN                                                        10470000
TIMEWORK DS    CL16                                                     10480000
*        PRINT OFF                                                      10490000
         COPY     UJE04IF                                               10500000
*        PRINT ON                                                       10510000
         LTORG                                                          10520000
*        COPY UJDDISP                                                   10530000
         TITLE 'UJE05CAT:CATALOG DATA SET'                              10540000
         JOLSAVE CSECT=UJE05CAT                                         10550000
* THIS ROUTINE DOES THE CATALOGUING                                     10560000
*                                                                       10570000
* NOW:- WE FACE MANY PROBLEMS WHEN DOING A 'CATLG' (OR A KEEP)          10580000
* FIRST, WE SHALL CALL THE TALLOC ROUTINE WHICH READS THE ODD           10590000
*     JFCB,FIXES VOLUME LISTS ETC                                       10600000
         CLI   ICOMMAND,C'U'   UNCATALOG CALLING ME TO PRINT            10610000
*                              ERROR MESSAGES ?                         10620000
*        BNE   E05DOCAT                                                 10630000
         BE    E05PRNTE                                                 10640000
         CLI   ICOMMAND,C'D'   DELETE CALLING ME TO PRINT ERR?          10650000
         BE    E05PRNTE                                                 10660000
E05DOCAT DS    0H                                                       10670000
         SPACE 3                                                        10680000
         CALL  UJE48TAL      TEST IF THE DATA SET IS ALLOCATED TO US    10690000
         LTR   R15,R15                                                  10700000
         BZ    E05TVOLS      YES, IT WAS ALLOCATED TO US                10710000
         BNE   E05KEEPE      NO,THERE WAS A REAL ERROR                  10720000
         JOLRETN RC=4                                                   10730000
E05KEEPE LA  R2,32                                                      10740000
E05UNSUC DS    0H                                                       10750000
          JOLERR 202,                                                  *10760004
               'DSID ''',DDDSID,''' DSNAME ''',#DSNAME,''' KEPT ON VOL(*10770000
               S) ',#VOL,' BUT NOT CATALOGED BECAUSE:-'           74365 10780000
         B     E05PRNTE                                                 10790000
E05TVOLS DS    0H                                                       10800000
         ST    R15,TASKRETN    SAVE FOR LASTC TESTS                     10801033
         FIX ' CHECK THIS'                                              10802033
         CALL  UJE49VOL      GET DATA SET VOLUMES                       10810000
* NOW TEST RE-CATLG FUNCTION                                            10820000
         IFNULL DDLABTYP,E05NALWA                                       10830000
* ALWAYS HERE                                                           10840000
         MVI E05CAT,X'54'  TURN ON RE-CATLG BIT                   75311 10850000
E05NALWA DS    0H                                                       10860000
E05FREE  DYNPARM DSN=(44,#DSN),ID=E05CAT,DDNAME=(8,#DDNAME),      ******10870099
               VRB=UN,DISP=(CATLG) DEBUG=YES                            10880000
         LTR     R15,R15   DID WE RECATLG IT?                     75311 10890000
         BZ   E05SUCES YES                                        75311 10900000
* NOW RECATLG FAILED, SO ATTEMPT STRAIGHT CATLG THEN              75311 10910000
         MVI   E05CAT,X'64'                                       75311 10920000
* E05NALWA DS    0H                                                     10930010
         $CTLG E05CAT                    DO THE CATALOG                 10940012
         LTR R15,R15                                                    10950000
         BNZ E05ERR                                                     10960000
E05SUCES DS   0H                                                        10970000
* NOW WE MUST CHECK AGAIN FOR GREATER THAN 5 VOLUMES BECAUSE       DASD 10980000
* ALL OF THE VOLUMES MIGHT NOT FIT ON 1 MESSAGE                    DASD 10990000
         LH    R14,E05#VOLS         LOAD VOL COUNT                 DASD 11000000
         XC    E05#VOLS,E05#VOLS    CLEAR VOL COUNT                DASD 11010000
         CH    R14,=H'5'            > 5 VOLUMES                    DASD 11020000
         BNH   E05SUCE2             NO   LETS DOIT THE OLD WAY     DASD 11030000
         SH    R14,=H'5'            SUBTRACT 5                     DASD 11040000
         STH   R14,E05#VOLS         STORE BACK FOR LATER           DASD 11050000
         MVI   DDVOLUME,C' '        MOVE IN JUST THE 1ST FIVE      DASD 11060000
         MVC   DDVOLUME+1(L'DDVOLUME-1),DDVOLUME                   DASD 11070000
         MVC   DDVOLUME(L'JFCBVOLS),JFCBVOLS                       DASD 11080000
         BAL   R14,E00FXVOL         MOVE TO #VOL,VOL EDITTED       DASD 11090000
         L     R15,=A(E05UNIT+60)   POINT TO 6TH VOLSER IN CAMLST  DASD 11100000
         ST    R15,E05START         SAVE FOR LATER                 DASD 11110000
E05SUCE2 DS    0H                                                  DASD 11120000
         JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',                   *11130004
               #DSNAME,''' CATALOGED ON VOL(S) ',#VOL             74365 11140000
          LH    R14,E05#VOLS        LOAD NUMBER OF VOLS LEFT       DASD 11150000
          LTR   R14,R14             ALL DONE                       DASD 11160000
          BZ    E05GOODR            YES SIR LETS GO                DASD 11170000
E05LMSGS DS    0H                                                  DASD 11180000
          L     R15,E05START        POINT TO NEXT AREA             DASD 11190000
          MVI   DDVOLUME,C' '       CLEAR CONSTRUCT AREA           DASD 11200000
          MVC   DDVOLUME+1(L'DDVOLUME-1),DDVOLUME                  DASD 11210000
          LA    R1,DDVOLUME         POINT TO CONSTRUCT AREA        DASD 11220000
          LA    R2,5                LETS STOP AFTER 5              DASD 11230000
E05LMSG   MVC   0(6,R1),4(R15)      MOVE IN NEXT VOLUME SERIAL     DASD 11240000
          LA    R1,6(R1)            BUMP DDVOLUME BY 6             DASD 11250000
          LA    R15,12(R15)         BUMP CAMLST BY 12              DASD 11260000
          SH    R14,=H'1'           BACKOFF VOL COUNT BY 1         DASD 11270000
          BZ    E05LMSGD            IF ALL DONE GET OUT EARLY      DASD 11280000
          BCT   R2,E05LMSG          RETURN FOR THE REST            DASD 11290000
E05LMSGD DS    0H                                                  DASD 11300000
          STH   R14,E05#VOLS        SAVE # OF VOLS LEFT            DASD 11310000
          ST    R15,E05START        STORE NEXT AREA ADDRESS        DASD 11320000
          BAL   R14,E00FXVOL        MOVE TO #VOL,VOL EDITTED       DASD 11330000
          B     E05SUCE2            GO PRINT THE  MESSAGE          DASD 11340000
E05GOODR DS    0H                                                  DASD 11350000
          JOLRETN                                                       11360000
E05ERR     LR  R2,R15                                                   11370000
           B   E05UNSUC                                                 11380000
           SPACE 3                                                      11390000
E05PRNTE DS    0H                                                       11400000
           B  E05RETNC(R2)                                              11410000
E05RETNC   B   E05SUCES                                                 11420000
           B   E05RET4                                                  11430000
           B   E05RET8                                                  11440000
           B   E05RET12                                                 11450000
           B   E05RET16                                                 11460000
           B   E05RET20                                                 11470000
           B   E05RET24                                                 11480000
           B   E05RET28                                                 11490000
           B   E05RET32                                                 11500000
           B   E05RET36                                                 11510000
E05RET4    JOLERR 203,'CATALOG VOLUME NOT MOUNTED'                      11520004
           B  E05RETN0                                                  11530000
         FIX  'NOTE R0=0 IF C AND ALREADY CATLGD'           FIX-X 76200 11540000
         FIX  'NOTE R0=60 IF U/D AND YSAM'                  FIX-X 76200 11550000
E05RET8    JOLERR 204,'DATA SET NAME FOUND AT LOWER LEVEL'              11560004
           B  E05RETN0                                                  11570000
E05RET12 DS    0H                                                       11580000
           JOLERR 205,'CATLG RETN''D 12'                                11590004
           B  E05RETN0                                                  11600000
E05RET16   JOLERR 206,'NO INDEX LEVEL FOR DATA SET'                     11610004
           B  E05RETN0                                                  11620000
E05RET20   JOLERR 407,'CATALOG DATA SET IS FULL'                        11630004
           B  E05RETN0                                                  11640000
E05RET24   JOLERR 208,'INVALID GENERATION NAME'                         11650004
           B  E05RETN0                                                  11660000
E05RET28   JOLERR 409,'PERMANENT I/O ERROR ON CATALOG DATA SET'         11670004
           B  E05RETN0                                                  11680000
E05RET32   JOLERR 210,'KEEP FAILED FOR DATA SET'                        11690004
           B  E05RETN0                                                  11700000
E05RET36   JOLERR 211,'NO VOLUMES WERE SUPPLIED'                        11710004
         B      RETN0                                                   11720010
E05CAT   CAMLST CAT,0,,E05VOLS                                          11730010
         SPACE 3                                                        11740000
* WHILE HERE, COPY THE VOLUME SERIAL NUMBERS TO RESOLVE FUTURE VOLREFS  11750000
         SPACE 2                                                        11760000
         CLEAR DDVOLUME                                                 11770000
         CALL  UJE49VOL             GET THE DATA SET VOLUMES            11780000
         SPACE 2                                                        11790000
E05CVC9  BAL   R14,E00FXVOL         COPY VOLS TO #VOLS                  11800000
         SPACE                                                          11810000
         UJE22UPD DDDSNAME,DDVOLUME,DDDDNAME FIX VOLUME REFERENCES      11820085
         MVI   DDDISP+1,C'L' LAST USE                                  .11830000
                                (A LIE OF COURSE, BUT HE WON'T KNOW)    11840000
*        MVC   DDDDNAME,FCTACSN    ENSURE HE USES THE CORRECT DDNAME    11850000
*        CALL  UJE14FRE            FREE THE DATASET                     11860000
         B     RETN0                                                    11870000
E05NVCT  JOLERR 212,                                                   .11880004
               'DSID ',DDDSID,' NOT CATALOGED, HAS NO VOLUMES  '        11890000
.NX8220  ANOP                                                           11910000
E05RETN0 B     RETN0                                                    11920000
E05NOFCT CLC   DDVOLUME,=C'     '     DOES IT HAVE A VOLUME             11930000
         BNE   E05CVC9                YES                               11940000
         JOLERR 213,                                                   .11950004
               'DSID ',DDDSID,' NOT CATALOGED, IS NOT ALLOCATED'        11960000
         B     RETN0                                                    11970000
         LTORG                                                     DASD 11980000
         DC    80S(*)                                              DASD 11990000
         AIF   (&X8).X8240                                              12000000
JFCXDECB DC    F'0'                                                DASD 12010000
          LA       R1,JFCBXTTR                                     DASD 12020000
          SPACE 3                                                  DASD 12030000
          EYEBALL  JFCX                                            DASD 12040000
          IEFJFCBX                                                 DASD 12050000
JFCBETTR  DC       F'0' JFCB EXTENSION POINTER                     DASD 12060000
.X8240   ANOP                                                           12080000
E05START  DC       F'0' AREA ADDRESS WORK AREA                     DASD 12081011
          ENTRY E05VOLS                                            DASD 12090000
E05VOLS   DS 0D                                                         12100000
E05#VOLS  DS H                                                          12110000
E05UNIT   DS CL4                                                        12120000
E05VOLX   DS CL6                                                        12130000
E05LABEL  DS CL2                                                        12140000
          PRINT NODATA SAVE SOME PAPER                                  12150000
          DC    254CL12' '          EXTENDED WORK AREA FOR 255 VOLUDASD 12160000
          PRINT DATA WASTE MORE PAPER FOR CLEM                          12170000
E05ETBL   EQU   E05VOLS+100                                        DASD 12180000
*RECAT B'0001'                                                          12190000
*CAT   B'0010'                                                          12200000
*UNACT B'00001000'                                                      12210000
*BLD   B'0100'                                                          12220000
*DELETE INDEXES B'00001100'                                             12230000
********* ALL THE ABOVE APPLY TO BYTE 0                                 12240000
*  +2  (3RD) B'00000001'=VSAM                                           12250000
* .X8240   ANOP                                                         12260000
         LTORG                                                          12270027
         TITLE 'UJE06UNC:UNCATALOG DATA SET'                            12280027
         JOLSAVE CSECT=UJE06UNC                                         12290027
*        AIF   (&X8).X8260                                              12300000
         CALL  UJE48TAL      TEST IF THE DATA SET IS ALLOCATED TO US    12310000
         LTR   R15,R15                                                  12320000
         FIX   '*****************'                                      12330000
*        BZ    E05TVOLS      YES, IT WAS ALLOCATED TO US                12340000
         LA    R1,DSNAME                                                12350000
         ST    R1,E06REMUV+4                                            12360000
         ST    R1,E06REMDT+4   REMOVE INDEXES,TOO                       12370000
****************************************************************   DASD 12380000
* NEW 8-1-77 "UNCATLG GDGALL"   NO JCL NEED   ITS ALL DONE HERE*   DASD 12390000
****************************************************************   DASD 12400000
         CLI   DDCATLGS,104    UNCAT GDG ALL ?                     DASD 12410000
         BE    E06GDGAL        GO DO IT                            DASD 12420000
         CLI   DDMBR,C'+'      GDG ?                                    12430000
         BE    E06NODLT        YES,DON'T DELETE INDEX                   12440000
         CLI   DDMBR,C'('      GDG ?                                    12450000
         BE    E06NODLT        YES,DON'T DELETE INDEX                   12460000
         $CTLG E06REMDT    DO THE UNCATALOG AND REMOVE INDEXES          12470012
         LTR   R15,R15         ERROR ?                                  12480000
         BNZ   E06FAIL         YES,PRINT ERROR MESSAGES                 12490000
         B     E06SUCES                                                 12500000
E06NODLT DS    0H                                                       12510000
         $CTLG E06REMUV                                                 12520012
         LTR   R15,R15                                                  12530000
         BNZ E06FAIL                                                    12540027
E06SUCES DS     0H                                                      12550027
         JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',                   *12560004
               #DSNAME,''' UNCATALOGED'                                 12570000
         B     E06RETN                                                  12580027
E06FAIL  DS    0H                                                       12590000
         LR    R2,R15          SAVE UNCATLG RETURN CODE                 12600027
         JOLERR 202,                                                   *12610027
               'UNCATLG FOR DSID ''',DDDSID,                           *12620000
               ''' NAME ''',#DSNAME,''' FAILED BECAUSE:-'               12630000
         CALL UJE05CAT       LET IT PRINT WHY                           12640000
E06RETN  JOLRETN   RC=0                                            DASD 12650000
E06GDGAL L     R15,=V(E05VOLS)         LOAD CAMLIST ADDRESS        DASD 12660000
         ST    R15,E06LOCAT+12         POINT TO LOCATE AREA        DASD 12670000
         MVC   #DSNAME(2),=H'44'       SET DSNAME TO THE BIGGIE    DASD 12680000
         LA    R6,300(R15)             GO UP A FEW AND SAVE POINTERDASD 12690000
         LA    R1,DSNAME               POINT TO DSNAME             DASD 12700000
         LA    R15,43(R1)              POINT TO END OF DSNAME      DASD 12710000
         LA    R14,1                   INCR BY 1                   DASD 12720000
E06FIND  CLI   0(R1),C' '              END OF DSNAME YET           DASD 12730000
         BE    *+8                     YEP LETS MOVE               DASD 12740000
         BXLE  R1,R14,E06FIND          RETURN                      DASD 12750000
         MVC   0(3,R1),=C'(0)'         LOOK FOR RELATIVE GDG 0     DASD 12760000
         MVC   0(44,R6),DSNAME         MOVE TO LOCATE AREA         DASD 12770000
E06LOOK  MVC   DSNAME,0(R6)            MOVE DSNAME IN              DASD 12780000
         $LOCATE E06LOCAT                                          DASD 12790012
         LTR   R15,R15                 DID LOACTE FIND ANYTHING ?? DASD 12800000
         BNZ   E06RETN                 NOPE THAT ALL               DASD 12810000
         $CTLG E06REMUV                                            DASD 12820012
         LTR   R15,R15                 DID THIS WORK OK            DASD 12830000
         BNZ   E06FAIL                 NOPE SOMETHINGS WRONG       DASD 12840000
         JOLERR 103,'DSID ''',DDDSID,''' DSNAME ''',                   *12850004
               #DSNAME,''' GDGALL UNCATALOGED'                     DASD 12860000
         B     E06LOOK                 RETURN TO LOOK FOR MORE GDGADASD 12870000
E06LOCAT CAMLST NAME,DSNAME,,0                                     DASD 12880000
E06REMUV CAMLST UNCAT,0                                                 12890029
         DC    A(E05VOLS)                                        88036  12891029
E06REMDT CAMLST UCATDX,0          UNCATLG,REMOVE INDEXES                12900029
         DC    A(E05VOLS)                                        88036  12901029
.X8260    ANOP                                                          12910000
         JOLRETN                                                        12920000
         SPACE 2                                                        12930000
         DC    80S(*)                                                   12940000
           LTORG                                                        12950000
           TITLE 'UJE07KEE:KEEP DATA SET'                               12960000
           JOLSAVE CSECT=UJE07KEE                                       12970000
* A KEEP INSTRUCTION IS TO BE EXECUTED.                                 12980000
*        AIF   (&X8).X8280                                              12990000
* THE KEEP IS A PRETTY EASY INSTRUCTION TO DO, AS BASICALLY             13000000
*    ALL WE HAVE TO DO IS FREE IT WILL KEEP.                            13010000
*                                                                       13020000
* THE ONLY COMPLICATION THAT CAN ARISE IS THAT WE WOULD (ON OCCASIONS)  13030000
*    LIKE THE VOLUME TO BE UNLOADED(OR SET INTO AN UN-LOADABLE          13040000
*    STATUS                                                             13050000
*                                                                       13060000
* PERMANENT,RETAINED,'JOL PREFERRED' ETC VOLUMES DO NOT HAVE TO         13070000
*    HAVE THEIR STATUS SET SO THEY MAY BE UNLOADED AND THIS IS          13080000
*    LEFT TO THE OPERATORS DISCRETION.                                  13090000
* IF IT IS A TAPE OR A NON-PREFERRED,(PRIVATE IN OTHER WORDS)           13100000
*    VOLUME AND IT IS NOT RETAINED,IT SHOULD BE DISMOUNTED.             13110000
          CLC DDDSNAME,=C'*DUMMY  '                                     13120000
          BNE  E07NOTDM                           74365                 13130000
          JOLERR 206,'DSID ''',DDDSID,''' DSNAME ''',#DSN,             *13140004
               ''' NOT KEPT:- DUMMY DATA SET'                    75003  13150000
          JOLRETN RC=16                                                 13160000
E07NOTDM DS    0H                                                       13170000
         CALL  UJE48TAL      TEST IF THE DATA SET IS ALLOCATED TO US    13180000
         LTR   R15,R15                                                  13190000
         BZ    E07ISALL      YES, IT WAS ALLOCATED TO US                13200000
           CLI ICOMMAND,C'K'   KEEP ?                                   13210000
           BE  E07ERR1         YES,FLAG IT AS AN ERROR THEN             13220000
           CLC =C'*.',DDVOLUME VOLUME REFERENCE SPECIFIED,BUT DATA SET  13230000
* NOT CREATED ? THIS CAN OCCUR IF THE CREATING STEP WAS BYPASSED        13240000
           BE  E07ERR1         GO FLAG AS AN ERROR                      13250000
           CLI DDVOLUME,C' '   VOL SPECIFIED ?                          13260000
           BE  E07RETNF        NO,SO ERROR                              13270000
           CLI DDUNITYP,C' '   UNIT SPECIFIED ?                         13280000
           BE  E07RETNF        NO,ERROR TOO                             13290000
* WELL A UNIT AND VOLUME WERE SPECIFIED,SO WE SHALL CONVERT             13300000
*     THE UNIT TO AN IBM TYPE OF NAME AND GENTLY RETURN                 13310000
* (THE USER CODED 'CATLG DSN X UNIT Y VOL Z')                           13320000
          SPACE                                                         13330000
E07FIXU   DS    0H                                                      13340000
           B  E07RETN0                                                  13350000
E07ERR1  DS    0H                                                       13360000
           JOLERR 204,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *13370004
               '''',                                                   *13380000
               ' NOT YET CREATED:-KEEP IGNORED'                         13390000
E07RETNF DS    0H                                                       13400000
           JOLRETN RC=16                                                13410000
           SPACE 3                                                      13420000
E07ISALL DS    0H                                                       13430000
E07FREE  DYNPARM DSN=(44,#DSN),ID=E07KEEP,                        ******13440000
               VRB=UN,DISP=KEEP DEBUG=YES                               13450000
*                                                           FIX-X 76200 13460000
* THE NEXT FEW LINES ARE NEW IN 3.1 AND ARE CODED IN        FIX-X 76200 13470000
*  THE HOPE THAT WE CAN HAVE THE OPERATING SYSTEM UNLOAD    FIX-X 76200 13480000
*  THE VOLUME FOR US AT STEP TERM.                          FIX-X 76200 13490000
* IN ADDITION, THE DSNAME SHOULD BE TAKEN OFF THE PASSED    FIX-X 76200 13500000
*  DATA SET QUEUE. CURRENTLY, AT JOB TERMINATION, A NUMBER  FIX-X 76200 13510000
*  OF UNNECESSARY MESSAGES ARE DISPLAYED INDICATING THAT    FIX-X 76200 13520000
*  DATA SETS HAVE BEEN KEPT. THESE SHOULD NO LONGER OCCUR.  FIX-X 76200 13530000
*                                                           FIX-X 76200 13540000
*                                                           FIX-X 76200 13550000
         CLI   DDDISP+1,C'L'  LAST USE OF DATA SET ?        FIX-X 76200 13560000
*                             IF WE CAN LET OS UNLOAD ?     FIX-X 76200 13570000
*        BNE   E07NLAST       NOT LAST USE                  FIX-X 76200 13580000
* MARK SIOT AND LET IT THINK WE HAVE FINISHED WITH          FIX-X 76200 13590000
*  THE DATASET (WHICH WE HAVE, OF COURSE).                  FIX-X 76200 13600000
E07NLAST DS    0H                                           FIX-X 76200 13610000
           SPACE 3                                                      13620000
           MVC DDVOLUME,JFCBVOLS                                        13630000
           BAL R14,E00FXVOL    SET UP VOLUME(S) IN #VOL           74365 13640000
E07TUNIT DS    0H                                                       13650000
         SPACE 3                                                        13660000
E07RETN0  DS    0H                                                      13670000
           CLI ICOMMAND,C'K'   IS THIS A KEEP INSTRUCTION?        74365 13680000
           BNE E07RETNO W      NO,SO NO MESSAGE,JUST RETURN       74365 13690000
           JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *13700004
               ''' KEPT ON VOL(S) ',#VOL                          74365 13710000
E07RETNO  DS    0H                                                      13720000
E07RTN     JOLRETN RC=0                                            DASD 13730000
E07LETOS DS    0H                                                       13740000
           JOLRETN RC=4                                                 13750000
           SPACE 3                                                      13760000
E07DELET DS    0H                                                       13770000
           JOLERR 203,'DSID ''',DDDSID,''' DSNAME ',                   *13780004
               ''' PREVIOUSLY DELETED :- KEEP IGNORED'                  13790000
           JOLRETN RC=16                                                13800000
E07NOKPT DS    0H   NO ENTRIES MARKED KEEP                              13810000
         JOLERR 202,'DSID ',DDDSID,' NOT KEPT, IS NOT ALLOCATED'        13820004
         B     RETN0                                                    13830000
         SPACE 3                                                        13840000
         DC    80S(*)                                                   13850000
           LTORG                                                        13860000
         TITLE 'UJE08SCR:SCRATCH DATA SET'                              13870000
         JOLSAVE CSECT=UJE08SCR                                         13880000
* SCRATCH INSTRUCTION IS TO BE EXECUTED.                                13890000
*        AIF   (&X8).X8300                                              13900000
*    NOW IF IT IS A DISC,WE ISSUE A SCRATCH.                            13910000
*          IF THE VOLUME IS NOT MOUNTED,WE MOUNT IT AND SCRATCH IT.     13920000
           SPACE                                                        13930000
*    IF IT IS A TAPE,AND IT CAN BE FREED NOW (NOT RETAINED)             13940000
*          IT MUST BE GIVEN A DISPOSITION OF DELETE                     13950000
*                                                                       13960000
*    IF IT IS RETAINED,THE PDQ IS MARKED DELETE,UNLESS WE HAVE          13970000
*          TIOT ENTRY,IN WHICH CASE IT IS MARKED DELETE,AND OS WILL     13980000
*          PROBABLY REMOVE THE VOLUME.                                  13990000
           SPACE 3                                                      14000000
* PUT INTO LOGICAL TERMS,THE CODE COES LIKE THIS:-                      14010000
*                                                                       14020000
*          IF ALLOCATED                                                 14030000
*          THEN DO;                                                     14040000
*              FREE WITH SCRATCH (DELETE).                              14050000
*          END;                                                         14060000
*  /* NOT ALLOCATED */                                                  14070000
*                                                                       14080000
*          IF VOL & UNIT ^=''                                           14090000
*          THEN DO;                                                     14100000
*              ALLOCATE IT.                                             14110000
*              FREE WITH SCRATCH (DELETE).                              14120000
*          END;                                                         14130000
* NOT_HERE?:                                                            14140000
*                                                                       14150000
*                                                                       14160000
*          IF IS MAG TAPE THEN GO TO E08MAGTP                           14170000
* /* DISC HERE */                                                       14180000
*          SCRATCH;                                                     14190000
*          RETURN;                                                      14200000
* E08MAGTP:                                                             14210000
*          MARK DELETE; /* IF OLD,MARK NEW,DELETE*/                     14220000
*          IF VOLUME TO BE RETAINED                                     14230000
*          THEN RETURN;                                                 14240000
*          GO TO LETOS;        /*UNLESS IN THIS STEP*/                  14250000
*                                                                       14260000
*                                                                       14270000
* THE SITUATION THEN BASICALLY MEANS THAT IF A SCRATCH IS ISSUED        14280000
*    FOR A DISC,AND THE DISC/IS NOT MOUNTED, MOUNT IT.                  14290000
*                                                                       14300000
* IF A TAPE IS TO BE SCRATCHED,AND IT CAN BE UNLOADED (IE OTHER         14310000
*    DATA SETS ARE STILL BEING USED ON IT) NO REAL ACTION OCCURRS       14320000
*    BUT IF IT CAN BE UNLOADED A NEW OS STEP IS INITIATED.              14330000
           SPACE 3                                                      14340000
* NOW IF THE NAME IS A TEMPORARY DSNAME,WE MUST FIDDLE AROUND UNTIL WE  14350000
*    HAVE THE PART OF THE NAME THAT OS PUT IN FRONT OF OURS,AND PUT     14360000
*    OURS AT THE BACK. THIS THEN GIVES US A REAL DSNAME WHICH SHOULD    14370000
*    BE IN THE PASSED DATA SET QUEUE.                                   14380000
*                                                        JOL30112 76200 14390000
* IF THE CATLG INDICATOR HAS 104,IT MEANS THAT THE       JOL30112 76200 14400000
* COMPILER FOUND GDGALL.                                                14410000
*                                                                       14420000
*                                                        JOL30112 76200 14430000
         CLI   DDCATLGS,104   GDGALL ?                   JOL30112 76200 14440000
         BNE   E08TTEMP       NO,TEST TEMPORARY THEN     JOL30112 76200 14450000
           JOLERR 112,'DSID ',DDDSID,' DSNAME ',#DSN,                  *14460004
               ' IS GDGALL, THE OPERATING SYSTEM WILL DELETE IT'        14470000
         JOLRETN RC=4                                    JOL30112 76200 14480000
E08TTEMP CLI   DDDSNAME,C'&&' TEMPORARY ?                JOL30112 76200 14490000
           BNE E08NTEMP        NO,SO FORGET THIS BIT OF PROCESSING      14500000
*                                                        JOL30116 76200 14510000
* NOW READ THE JFCB OF THE $$INST FILE AND               JOL30116 76200 14520000
* FIND OUT WHAT DSN HAS BEEN GIVEN TO                    JOL30116 76200 14530000
* TEMPORARY DATA SETS                                    JOL30116 76200 14540000
*                                                        JOL30116 76200 14550000
         LA    R1,TEMPDCB                                               14560000
         USING IHADCB,R1                                                14570000
         MVC   DCBDDNAM,=CL8'&DDINST'                                   14580000
         DROP  R1                                                       14590000
         RDJFCB TEMPDCB       GET DSNAME                 JOL30116 76200 14600000
* NOW FIND LAST DOT,AND SHIFT IN OUR TEMP NAME (&&WORK000I FOR EXAMPLE) 14610000
         LA    R15,JFCBDSNM+43 GET END OF DSNAME         JOL30116 76200 14620000
E08FSTOP   CLI 0(R15),C'.'     GOT THE LAST '.' ?                       14630000
           BE  E08GOTST        YES                                      14640000
           BCT R15,E08FSTOP    FIND STOP LOOP                           14650000
           JOLERR 508,'INTERNAL ERROR:NO ''.'' IN TEMP DSN'             14660004
           SPACE                                                        14670000
E08GOTST CLI   DDDSNAME+1,C'&&' DOUBLE & CODED ?         JOL30116 76200 14680000
         BNE   E08ONEA                                   JOL30116 76200 14690000
         MVC   DDDSNAME+1(8),DDDSNAME+2 DROP 2ND         JOL30116 76200 14700000
E08ONEA  MVC   1(8,R15),DDDSNAME+1 SET UP REAL DSNAME    JOL30116 76200 14710000
         MVC   DDDSNAME,JFCBDSNM   SHIFT BACK            JOL30116 76200 14720000
E08NTEMP DS    0H                                                       14730000
         CALL  UJE48TAL      TEST IF THE DATA SET IS ALLOCATED TO US    14740000
         LTR   R15,R15                                                  14750000
           BNZ E08NOTHR        NOT IN PDQ                               14760000
* NOW IT WAS ALLOCATED                                                  14770000
*    GO TO THE SCRATCH ROUTINES.                                        14780000
          CALL UJE49VOL                                                 14790000
         NI DDUNITYP,B'10011111'                                        14800000
           B   E08NOSTP        DO THE SCRATCH ETC                       14810000
E08NOTHR DS   0H                                                        14820000
         DYNPARM DSN=(44,#DSN),ID=SCRT,DISP=OLD, GET AS OLD IF POSS ****14821004
               DDNAME=$$JOLSCR                                          14822004
         LTR   R15,R15                                                  14823004
         BZ    E08SCR$$        GOT IT, SO GO DO THE DELETE NOW.         14824004
         JOLERR   209,'DSID ''',DDDSID,''' DSNAME ''',#DSN,''' NOT ALLO*14830004
               CATED, SCRATCH IGNORED'                                  14840000
         JOLRETN                                                        14850000
E08ERR2  DS    0H              NOT IN PDQ AND NO VOL/UNIT SPECIFIED     14860000
           JOLERR 215,'DSID ''',DDDSID,''' DSNAME ''',#DSN,''' ALREADY *14870004
               SCRATCHED'                                               14880000
           JOLRETN RC=16                                                14890000
           SPACE 3                                                      14900000
E08NOSTP DS    0H              NOT USED IN THIS STEP                    14910000
* NOW THIS SITUATION IS JUST A FRACTION MORE DIFFICULT THAN THE         14920000
*    OTHERS.                                                            14930000
* IF THE DATA SET IS ON DISK,ISSUE A SCRATCH                            14940000
           CLI SCTUTYPE+2,X'80' MAG TAPE ?                              14950000
           BE  E08MAGTP                                                 14960000
* DISK,LETS ISSUE THE SCRATCH AFTER SETTING THINGS UP                   14970000
           BAL R14,E00FXVOL    SET UP VOLUME LIST IN #VOL         74365 14980000
           SR  R0,R0                                                    14990000
           MVI   E08SCRA+2,X'40'  RESET SCRATCH (LAST ALWAYS?)          15000000
           IFNULL DDLABTYP,E08NALWA                                     15010000
* ALWAYS                                                                15020000
           MVI   E08SCRA+2,X'50'  OVER-RIDE PURGE DATE                  15030000
E08NALWA DS    0H                                                       15040000
*          SCRATCH E08SCRA                                              15050000
E08FREE  DYNPARM DSN=(44,#DSN),ID=SCRT,DISP=OLD, GET AS OLD IF POSS ****15060003
               DDNAME=$$JOLSCR                                          15070003
E08SCR$$ DYNPARM DSN=(44,#DSN),ID=E08SCR,DDNAME=$$JOLSCR,         ******15071004
               VRB=UN,DISP=(DELETE) DEBUG=YES                           15072000
           LTR R15,R15                                                  15080000
           BNZ E08WHAT                                                  15090000
E08SUCC  DS    0H                                                       15091004
           JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *15100004
               ''' SCRATCHED FROM ',#VOL                          74365 15110007
*        DYNPARM DSN=(44,#DSN),VRB=UN MSG=NO                            15110102
E08MAGTP DS    0H                                                       15120000
           JOLRETN                                                      15130000
           SPACE 3                                                      15140000
E08WHAT  DS    0H                                                       15150000
* SCRATCH FAILED                                                        15160000
* WHY ??                                                                15170000
         AGO .SKIPSCR                                                   15180000
         CH   R15,=H'8'  DID WE BUILD A BAD CAMLIST ENTRY ??       DASD 15190000
         BH   E08BADCM   BETTER TELL SOMEONE ABOUT THIS            DASD 15200000
           SPACE 2                                                      15210000
* IF FAILURE OCCURRED BECAUSE THE VOLUMES WEREN'T MOUNTED,              15220000
*    I KNOW THAT THERE IS A JCL STEP BELOW WHICH WILL MOUNT             15230000
*    THE VOLUMES AND PERFORM THE SCRATCHES,SO LETS GO.                  15240000
           LA  R1,E08SEQ+1+(0*(L'E08UNIT+L'E08VOL+L'E08SEQ))            15250000
           BAL R2,E08ERR                                                15260000
           LA  R1,E08SEQ+1+(1*(L'E08UNIT+L'E08VOL+L'E08SEQ))            15270000
           BAL R2,E08ERR                                                15280000
           LA  R1,E08SEQ+1+(2*(L'E08UNIT+L'E08VOL+L'E08SEQ))            15290000
           BAL R2,E08ERR                                                15300000
           LA  R1,E08SEQ+1+(3*(L'E08UNIT+L'E08VOL+L'E08SEQ))            15310000
           BAL R2,E08ERR                                                15320000
           LA  R1,E08SEQ+1+(4*(L'E08UNIT+L'E08VOL+L'E08SEQ))            15330000
           BAL R2,E08ERR                                                15340000
           B   E08RETNF                                                 15350000
E08ERR   DS    0H                                                       15360000
* CALLED BECAUSE WE HAVE TO ANALYSE THE REASON WHY A SCRATCH FAILED     15370000
           CLI 0(R1),0         IS THIS ONE A ZERO ?                     15380000
           BE  0(R2)           YES,SO JUST RETURN TO CALLER.            15390000
           CLI 0(R1),5         UNABLE TO MOUNT COS NO DEVICE ?          15400000
           BE  E08NPACK        LET OS DO SCRATCH (STEP DOWN TO RIGHDASD 15410000
*                              STEP)                                    15420000
           CLI 0(R1),6         DIDN'T OPERATOR WANT TO MOUNT VOL ?      15430000
           BE  E08NPACK                                            DASD 15440000
           CLI 0(R1),1         NOT IN VTOC ?                            15450000
         BNE   E08TRET2                                     FIX-X 76200 15460000
           JOLERR 204,'DSID ''',DDDSID,''' DSNAME ''',                 *15470004
               #DSN,''' NOT FOUND IN VOLUME :-SCRATCH IGNORED'          15480000
           BR  R2                                                       15490000
E08TRET2 CLI   0(R1),2                                      FIX-X 76200 15500000
         BNE   E08TRET3                                     FIX-X 76200 15510000
         JOLERR 410,'DSID ''',DDDSID,''' DSNAME ''',#DSN,   FIX-X 76200*15520004
               ''' IS A VSAM DATA SPACE OR ',               FIX-X 76200*15530000
               'INCORRECT PASSWORD SUPPLIED'                FIX-X 76200 15540000
         BR    R2                                           FIX-X 76200 15550000
E08TRET3   CLI 0(R1),3         RETENTION PERIOD ?                       15560000
           BNE E08TRET4                                                 15570000
           JOLERR 205,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *15580004
               ''' NOT SCRATCHED,CONTAINS RETENTION DATE'               15590000
         BR    R2                                           FIX-X 76200 15600000
E08TRET4   CLI 0(R1),4         I/O ERROR ?                              15610000
         BNE   E08TRET7                                     FIX-X 76200 15620000
           JOLERR 406,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *15630004
               ''' NOT SCRATCHED,I/O ERROR ON VTOC'                     15640000
         BR    R2                                           FIX-X 76200 15650000
E08TRET7 CLI   0(R1),7                                      FIX-X 76200 15660000
         BNE   E08ERRXY                                     FIX-X 76200 15670000
         JOLERR 411,'DSID ''',DDDSID,''' DSNAME ''',#DSN,   FIX-X 76200*15680004
               ''' IS BEING USED BY SOMEONE ELSE:-'         FIX-X 76200*15690000
               'TRY AGAIN LATER'                            FIX-X 76200 15700000
         BR    R2                                           FIX-X 76200 15710000
E08ERRXY SR    R2,R2                                        FIX-X 76200 15720000
         IC    R2,0(R1)                                     FIX-X 76200 15730000
         JOLERR 507,'SCRATCH RETURNED INVALID CODE;SEE REG 2'   X 76200 15740004
E08BADCM DS    0H                                                  DASD 15750000
         JOLERR 213,'DSID ''',DDDSID,'''DSNAME ''',#DSN,               *15760004
               ''' ON VOLS ',#VOL,' NOT SCRATCHED',                    *15770000
               'CATALOGE INVALID DEVICE UNIT=',                        *15780000
               DDUNIT                                              DASD 15790000
          B   E08LETOS                                             DASD 15800000
E08NPACK  DS    0H                                                 DASD 15810000
         JOLERR 214,'DSID ''',DDDSID,'''DSNAME ''',#DSN,               *15820004
               ''' ON VOLS ',#VOL,' NOT SCRATCHED',                    *15830000
               'PACK NOT MOUNTED, UNIT=',                              *15840000
               DDUNIT                                              DASD 15850000
           SPACE 3                                                      15860000
.SKIPSCR  ANOP                                                          15870000
E08LETOS  DS    0H                                                      15880000
* IT HAS BEEN DECIDED THAT,FOR NO DOUBT AN EXTREMELY GOOD REASON,       15890000
*    WE MUST STEP DOWN TO THE STEP THAT SHOULD BE THERE TO              15900000
*    HAVE THE VOLUME MOUNTED SO THE SCRATCH MAY BE PERFORMED.           15910000
           JOLRETN RC=4                                                 15920000
E08RETNF  DS    0H JOLRETN RC=16                                   DASD 15930000
*******************************************************            DASD 15940000
*    PDQ RECORDS NOT DELETED IF SCRATCH FAILS         *            DASD 15950000
*******************************************************            DASD 15960000
* WHEN A PROGRAMMER SAYS TO DELETE A DATASET BEFORE   *            DASD 15970000
* THE FIRST STEP OF THE JOB,  JOL WILL GENERATE A STEP*            DASD 15980000
* WITH A DDCARD REFERENCE TO THE DATASET TO BE DELETED*            DASD 15990000
* IF THE DATASET IS CATALOGED BUT NOT ON THE PACK THE *            DASD 16000000
* THIS SCRATCH ROUTINE WILL RETURN WITHOUT REMOVING   *            DASD 16010000
* THE PDQ RECORD.     ANY REFERENCE TO THIS DATASET   *            DASD 16020000
* LATER ON WILL ADD NEW PDQ RECORDS BUT WILL POINT    *            DASD 16030000
* TO THE FIRST ENTRY RESULTING IN ABEND=213           *            DASD 16040000
*******************************************************            DASD 16050000
E08NFRPQ JOLRETN RC=16                                             DASD 16060000
****************************************************************   DASD 16070000
* IF DOING A DELETE CHECK THE CATALOGE  TO SEE IF THE DATASET  *   DASD 16080000
* IS CATALOGED AND IF SO RETURN TO THE SCRATCH                 *   DASD 16090000
*                                                              *   DASD 16100000
* THE FOLLOWING MESSSAGE IS ONLY ISSUED WHEN THE DATASET       *   DASD 16110000
* IS NOT ON THE PDQ                                            *   DASD 16120000
*                                                              *   DASD 16130000
* HERE AT STANDARD OIL A MODIFICATION EXISTS WHERE IF THE      *   DASD 16140000
* SCRATCH FAILED THE UNCATLG WILL STILL RUNS                   *   DASD 16150000
****************************************************************   DASD 16160000
E08NOPDQ NOP   E08PDQMG    TURN THIS ON TO SHUT OFF THIS CODE      DASD 16170000
         CLI   ICOMMAND,C'D'     DELETE STMT ?                     DASD 16180000
         BNE   E08PDQMG          NO---ISSUE THE MESSAGE            DASD 16190000
         CALL  UJELOCAT          CALL LOCATE MODULE                DASD 16200000
         LTR   R15,R15           ARE WE IN LUCK ?                  DASD 16210000
         BNZ   E08PDQMG          NOPE NOT TODAY                    DASD 16220000
         MVC   JFCBDSNM,DSNAME  COPY DATA SET NAME TO JFCB         DASD 16230000
         L     R15,=V(E05VOLS)  POINT TO CAMLST                    DASD 16240000
         USING VOLINFO,R15       GET SOME ADDDRESSILITY            DASD 16250000
         MVC   JFCBNVOL,NOVOLS+1 # VOLUMES                         DASD 16260000
         MVC   SCTUTYPE,CATDEV   UNIT TYPE                         DASD 16270000
         LH    R1,NOVOLS         # VOLUMES AGAIN                   DASD 16280000
         CH    R1,=H'5'          MORE THAN WE CAN HANDLE ?         DASD 16290000
         BNH   *+8               NO                                DASD 16300000
         LA    R1,5              ADJUST # VOLUMES FOR US           DASD 16310000
         LA    R14,JFCBVOLS      MOVE TO HERE                      DASD 16320000
         MVI   JFCBVOLS,C' '                                       DASD 16330000
         MVC   JFCBVOLS+1(L'JFCBVOLS-1),JFCBVOLS   CLEAR JFCB      DASD 16340000
E08LPVOL DS    0H                                                  DASD 16350000
         MVC   0(6,R14),CATVOL   MOVE VOL SER                      DASD 16360000
         LA    R15,12(R15)       POINT TO NEW CAMLST ENTRY         DASD 16370000
         LA    R14,6(R14)        UP TO NEXTBUCKET IN JFCB          DASD 16380000
         BCT   R1,E08LPVOL       GET ALL OF THE VOLUMES            DASD 16390000
         B     E08NOSTP          LETS DO THE SCRATCH AGAIN         DASD 16400000
         DROP  R15                                                 DASD 16410000
E08PDQMG   JOLERR 203,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *16420004
               ''' NOT YET CREATED:-SCRATCH IGNORED'                    16430000
           B  E08RETNF                                                  16440000
           SPACE 3                                                      16450000
E08SCRA    CAMLST SCRATCH,JFCBDSNM,,E08NOVOL                            16460000
E08NOVOL   DS  H                                                        16470000
E08UNIT    DS  CL4                                                      16480000
E08VOL     DS  CL6                                                      16490000
E08SEQ     DS  H                                                        16500000
         DS  ((L'JFCBVOLS/6)*12)C                                       16510000
E08SCREN DS    0H                                                       16520000
E08RETN0 DS    0H                                                       16530000
         B     RETN0                                                    16540000
E08NOKPT DS    0H   NO ENTRIES MARKED                                   16550000
         SPACE 3                                                        16560000
* IT SEEMS WE NEED TO ALLOCATE THE DATASET                              16570000
         SPACE 1                                                        16580000
         TM    DDUNITYP,X'80'  IF IT'S A TAPE, FORGET IT                16590000
         BZ    E08NOSCR                                                 16600000
         SPACE 1                                                        16610000
         MVC   DDDDNAME,=C'JOL00000' HOPE NOBODY ELSE USES THIS         16620000
         OI    E21FLAG,E21CONT       TELL ALLOC NOT TO ABEND US         16630000
         CALL  UJE21ALL              ALLOC THE DATASET                  16640000
         LTR   R15,R15                                                  16650000
         BZ    E08ALLOK             IT WENT WELL                        16660000
         JOLERR 316,'DATASET ',#DSN,' IS NOT SCRATCHED'                 16670004
         B     E08NOSCR                                                 16680000
E08ALLOK DS    0H                                                       16690000
         B     E08FREE              NOW IT'S ALLOCATED, GO BACK         16700000
*                                    AND FREE IT WITH DELETE            16710000
E08NOSCR DS    0H                                                       16720000
         B     RETN0                                                    16730000
         SPACE 3                                                        16740000
         AGO .NX8300                                                    16750000
E08FFCT  DS    0H    FOUND AN FCT TO "FIX"                              16760000
         $TELL (R4)                                                     16770000
         MODESET  KEY=ZERO                                              16780000
         OI    FCTSTS1,FCTS1DLT            TURN DELETE ON               16790000
         OI    FCTFDST1,X'FF'-FCTFSNFD      "    "    "                 16800000
         NI    FCTFLG2,X'FF'-FCTF2KEP      TURN KEEP OFF                16810000
*        OI    FCTFLG3,FCTF3UCT+FCTF3CTR   UNCAT + CAT REF              16820000
         NI    FCTFLG3,X'FF'-FCTF3CAT      SINCE WE ARE SCRATCHING,     16830000
*                                           DON'T CATALOG IT            16840000
         SPACE 2                                                        16850000
*  WELL, THAT SHOULD BE ALL                                             16860000
         SPACE                                                          16870000
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY              16880000
         BR    R2             GO AND SEE IF THERE AREA ANY MORE         16890000
         SPACE 3                                                        16900000
.NX8300  ANOP                                                           16910000
         SPACE 3                                                        16920000
         DC    80S(*)                                                   16930000
         TITLE 'UJE09DEL:DELETE DATA SET'                               16940000
         AIF   (&X8).X8320                                              16950000
JSCBOFFS   EQU 180                                                      16960000
CVT        EQU 16                                                       16970000
JCTTTRA    EQU 261                                                      16980000
.X8320   ANOP                                                           16990000
           LTORG                                                        17000000
         JOLSAVE CSECT=UJE09DEL                                         17010000
         CALL  UJE08SCR                                                 17020000
         LTR   R15,R15                                                  17030000
*        BZ    E09RETN0        DYNAMIC ALLOCATION UNCATLGS        87150 17031007
         BZ    E09UNCAT  O.K. GUYS THE SCRATCH WORKED KEEP GOING   DASD 17040007
* STANDARD OIL REQUESTED THIS MOD                                  DASD 17050000
* THEY WANTED THE UNCATLG TO ALWAYS RUN EVEN IF THE SCRATCH FAILED DASD 17060000
         CLI   DDCATLGS,104   GDGALL ?                             DASD 17070000
         BNE   E09UNCAT   LET THE UNCATLG RUN THEN                 DASD 17080000
         JOLRETN RC=(15)                                                17090000
E09UNCAT DS    0H                                                 76200 17100000
*        CLI   #DSN+2,C'&&'   TEMPORARY DATA SET ?                76200 17110000
*        BE    E09RETN0                                           76200 17120000
         CLI   DDTYPE,DDREALDS    Q... TEMPORARY DATASET?               17130000
         BL    E09RETN0           A... YES                              17140000
         CALL  UJE06UNC                                           76200 17150000
E09RETN0 B     RETN0                                              76200 17160000
         LTORG                                                          17170000
*        COPY UJE10TYP                                                  17370000
         TITLE 'UJE10TYP:TYPE A MESSAGE'                                17380000
         JOLSAVE CSECT=UJE10TYP                                         17390000
* THIS ROUTINE DOES THE TYPING                                          17400000
           L   R7,=A(#TKN)                                              17410000
           USING #TKN,R7                                                17420000
           JOLERR 301,#TKN                                              17430004
           JOLRETN                                                      17440000
          TITLE 'UJE11DIS:DISPLAY A MESSAGE'                            17450000
           JOLSAVE CSECT=UJE11DIS                                       17460000
           L   R7,=A(#TKN)                                              17470000
           USING #TKN,R7                                                17480000
* DISPLAY HANDLER                                                       17490000
           JOLERR 101,#TKN                                              17500004
           JOLRETN                                                      17510000
          TITLE 'UJE12SIG:SIGNAL AN ERROR MESSAGE'                      17520000
          FIX  'USE SOMETHING LIKE THIS TO TERMINATE JOB INSTEAD OF STEP17521000
                ABEND'                                                  17522000
           JOLSAVE CSECT=UJE12SIG                                       17530000
* SIGNAL ERROR ROUTINE                                                  17540000
           L   R7,=A(#TKN)                                              17550000
           USING #TKN,R7                                                17560000
           SR R2,R2                                                     17570000
           NI TKN,X'0F'        DROP 'F' FROM SEVERITY NUMBER            17580000
           IC R2,TKN           AND SAVE SEVERITY NUMBER                 17590000
           GETTKN 3            GET MESSAGE TEXT                         17600000
           CH R2,=H'3'                                                  17610000
           BL  SIGONLY                         ONLY WARNINGS            17620000
           BE  SIGWTOR                         WTOR                     17630000
* HERE A TERMINAL ERROR TO BE RASIED                                    17640000
           JOLERR 407,'TERMINAL ERROR ',#TKN,' SIGNALLED'               17650004
SIG&RSVDRC MVC TASKRETN,=F'&RSVDRC'                                     17660000
           MVI  GOBACK,C'1'                                             17670000
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS     17680000
SIGTERM    JOLERR 406,'JOB TERMINATING'                                 17690004
           JOLRETN RC=&RSVDRC                                           17700000
           SPACE 3                                                      17710000
SIGONLY  DS    0H                                                       17720000
           CH R2,=H'2'                                                  17730000
           BL SIGERR1                                                   17740000
         JOLERR 202,'SEVERE ERROR ',#TKN,'SIGNALLED'        FIX-X 76200 17750004
           B  SIGRETN                                                   17760000
SIGERR1  JOLERR 101,'MINOR ERROR ',#TKN,' SIGNALLED'        FIX-X 76200 17770004
SIGRETN    JOLRETN                                                      17780000
           SPACE 3                                                      17790000
SIGWTOR  DS    0H                                                       17800000
*        JOLERR 403,'MAJOR ERROR ',#TKN,' SIGNALLED'                    17810004
         CLC   #TKN,=H'70'     IS MESSAGE TOO LONG                      17820000
         BNH   E12WTOR1        NO                                       17830000
         MVC   #TKN,=H'70'     YES SO ADJUST LENGTH                     17840000
E12WTOR1 EQU   *               JOLERR WONT ACCEPT A LABEL??             17850004
         JOLERR 403,#TKN,': REPLY GO OR STOP '                          17860004
*  JOLERR SETS JOBNAME ETC UP IN #S23LREC                               17870004
         LA    R1,#S23LREC-8                                            17880000
         MVI   0(R1),4         LENGTH OF REPLY                          17890000
         MVC   1(3,R1),=AL3(SIGREPLY) ADDRESS OF REPLY AREA             17900000
         MVC   4(4,R1),=A(SIGECB) ADDR OF ECB TO WAIT ON                17910000
SIGRETRY CLEAR SIGREPLY                                                 17920000
         XC    SIGECB,SIGECB                                            17930000
*ERE1204 DS     0H                                                      17940000
*     WTOR 'JOLE12-04 REPLY GO OR STOP',SIGREPLY,4,SIGECB,DESC=(2)      17950000
         LA    R1,#S23LREC-8                                            17960000
         SVC   35                  ISSUE WTOR                           17970000
         WAIT ECB=SIGECB                                                17980000
         OC    SIGREPLY(4),=C'    '     TO UP CASE                      17990000
         CLC   =C'GO  ',SIGREPLY                                        18000000
         BE    SIGCONT                                                  18010000
         CLC   =C'STOP',SIGREPLY                                        18020000
         BE    SIGTERM                                                  18030000
         B     SIGRETRY                                                 18040000
         SPACE 3                                                        18050000
SIGECB   DS    F                                                        18060000
SIGREPLY DS CL4                                                         18070000
         SPACE 3                                                        18080000
SIGCONT  DS    0H                                                       18090000
         JOLERR 405,'JOB CONTINUING'                                    18100004
         B   SIGRETN                                                    18110000
         TITLE 'UJE13STP:STOP HANDLER'                                  18120000
         JOLSAVE CSECT=UJE13STP                                         18130000
* STOP EXECUTER                                                         18140000
         L     R7,=A(#TKN)                                              18150000
         USING #TKN,R7                                                  18160000
         JOLERR 401,'STOP ''',#TKN,''' EXECUTED'                        18170004
STPRETN  MVI   GOBACK,C'1'                                              18180000
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS     18190000
         MVC   TASKRETN,=F'&RSVDRC'                                     18200000
         JOLRETN RC=&RSVDRC                                             18210000
         DROP  R7                                                       18210147
         TITLE 'UJE13WHN:STOP WHEN SET UP HANDLER'                      18211047
         JOLSAVE CSECT=UJE13WHN                                         18212047
* STOP WHEN HANDLER                                                     18213047
* STOPWHEN IS PASSED BY THE COMPILER AND STORED IN #WHEN.               18213147
*     IT IS EXECUTED AT THE END OF EVERY STEP BY 'UJE04IF'.             18213247
         L     R7,=A(#TKNSTRG)                                          18214047
         USING #TKNSTRG,R7                                              18215047
         CLC   #TKNSTRG,=AL2(L'WHEN)                                    18216148
         BH    E13ERRL         TOO BIG, ABEND...                        18217047
         LH    R15,#TKNSTRG     GET LENGTH                              18218058
         SH    R15,=H'10'       DROP 'STOP WHEN'                        18218158
         BNP   E13ERR2                                                  18218258
         STH   R15,#WHEN        STORED                                  18218358
         MVC   #WHEN+2(255),#TKNSTRG+12  MOVE PART                      18218460
         JOLRETN RC=0                                                   18219147
E13ERRL  JOLERR 502,'STOP WHEN TOO LARGE'                               18219247
         JOLRETN RC=0                                                   18219347
E13ERR2  JOLERR 503,'STOP WHEN TOO SMALL'                               18219459
         JOLRETN RC=0                                                   18219558
*        COPY UJD14FRE                                                  18220000
         TITLE 'UJE14FRE:FREE (MARK NOT IN USE) DATASETS'               18230000
         JOLSAVE CSECT=UJE14FRE                                         18240000
         MVC   D14ACTN,=CL8'** ERROR'                                   18241027
         CALL  GETTIME                                                  18250000
         CLC   =C'STEPLIB ',DDDDNAME Q... STEPLIB ?                     18251028
         BNE   E14NSTEP              A... NO                            18252029
         MVI   DDDDNAME+7,C'$' MAKE STEPLIB$                            18253028
E14NSTEP MVC   D14DETME,CURRTIME                                        18260028
         MVC   TEMPDDN2,DDDDNAME                                        18270000
         MVC   D14DDNAM,DDDDNAME                                        18280000
         MVC   D14DSID,DDDSID                                           18290000
         CLI   DDTYPE,DDPUNCH   Q... SYSIN, SYSOUT OF SOME KIND?        18300000
         BNH   E14FREE          A... YES, FREE IT NOW                   18310000
         CLC   =C'JOBLIB  ',DDDDNAME Q... JOBLIB?                       18311027
         BE    E14JOBL               A... YES                           18312027
*        TM    DDUNITYP,X'80'  IF IT'S A TAPE, FREE FILE ALWAYS         18320044
*        BO    E14TDISP                                                 18330044
* PROPOGATE THE TAPE VOLUME NOW, AS IT MAY BE USED LATER                18340000
*  IN VOLUME REFERENCES OR CATALOG STATEMENTS.                          18350000
*        CALL  UJE30VOL       PROPOGATE VOLS DOWN JOL 'JOBQ'            18360000
*        B     E14FREE                    FREE IT NOW                   18370045
*        CLI   DDDISP+1,C'L'  LAST USE?                                 18380000
E14TDISP CLI   DDDISP+1,C'P'  LAST USE?                                 18390000
         BE    E14DISUS        NO, JUST MAKE MARKS                      18400000
E14FREE  DS    0H                                                       18410031
         CLI   TEMPDDN2,C' '                                            18410132
         BE    E14DDBL1                                                 18410231
         DYNPARM DDNAME=(8,TEMPDDNM),VRB=UN DEBUG=YES UNALLOC=YES       18410335
         B     E14TRC1                                                  18410431
E14DDBL1 DS    0H                                                       18411035
         DYNPARM DSN=(44,#DSN),VRB=UN                                   18412043
E14TRC1  LTR   R1,R15                                                   18420031
         BZ    E14FREED                                                 18430000
         CVD   R15,DBL                                                  18440000
         MVC   TASKSSI(4),=X'40202120'                                  18450000
         ED    TASKSSI,DBL+6                                            18460000
         JOLERR 102,'DSID ',DDDSID,''',DDNAME ',                       .18470004
               DDDDNAME,' NOT UNALLOCATED DUE TO RETURN CODE ',        .18480000
               TASKSSI                                                  18490000
         B     E14RETN                                                  18500000
E14FREED DS    0H                                                       18510000
         MVC   D14ACTN,=CL8'FREED'                                      18520000
E14RETN  DS    0H                                                       18530000
         WRITE D141DECB,SF,PRINT,D14DEALL WRITE THE ALLOCN HEADER       18540000
         CHECK D141DECB                   WAIT TILL IT GOES             18550000
         B     RETN0                                                    18560000
E14DISUS DS    0H                                                       18570000
         CLI   TEMPDDN2,C' '                                            18571032
         BE    E14DDBL2                                                 18572031
         DYNPARM  DDNAME=(8,TEMPDDNM),VRB=UN,UNALLOC=REMOVE.IN.USE      18580000
         B     E14JOBL                                                  18581031
E14DDBL2 DS    0H                                                       18582035
         DYNPARM DSN=(44,#DSN),VRB=UN,UNALLOC=REMOVE.IN.USE             18583043
E14JOBL  DS    0H                    LEAVE JOBLIB, ISSUE 'PASSED' 87150 18591027
         MVC   D14ACTN,=CL8'PASSED'                                     18600000
         WRITE D142DECB,SF,PRINT,D14DEALL WRITE THE ALLOCN HEADER       18610000
         CHECK D142DECB                   WAIT TILL IT GOES             18620000
         B     RETN0                                                    18630000
         AGO   .NOTFRE                                                  18640000
         B     FIXCONCAT                                                18650000
         CLC   =CL8' ',DDDDNAME      Q... CONCATENATED FILE?            18660000
         BE    E14NXFCT              A... YES                           18670000
         MVC   SAVEDD,DDDDNAME       COPY THE DDNAME                    18680000
         SPACE                                                          18690000
E14FFCT  DS    0H    FOUND AN FCT TO "FIX"                              18700000
         AP    DDCTR,=P'1'          ADD TO MY COUNTER                   18710000
         $TELL (R4)                                                     18720000
         MODESET  KEY=ZERO                                              18730000
*        NI    FCTACSN,X'BF'        MAKE MY MARK FOR "NOT IN USE"       18740000
**CVC    MVC   FCTACSN(4),=C'$JOL'  MAKE MY MARK FOR "NOT IN USE"       18750000
**CVC    UNPK  FCTACSN+4(4),DDCTR                                       18760000
         SPACE                                                          18770000
* WHILE I AM HERE, LET'S HAVE A LOOK AT SOME OTHER BITS                 18780000
         SPACE                                                          18790000
         LR    R2,R4                 SAVE THIS ADDRESS                  18800000
         TM    FCTFLG6,FCTF6CF       Q... CONCATENATED?                 18810000
         BZ    E14NOCAT              A... NO                            18820000
         NI    FCTFLG6,X'FF'-FCTF6CF TURN THAT OFF                      18830000
E14NXTCF DS    0H                                                       18840000
         L     R1,FCTCFNO            ADDRESS NEXT IN THIS CHAIN         18850000
         XC    FCTCFNO(4),FCTCFNO    CLEAR THIS FIELD                   18860000
         LA    R4,0(,R1)             CLEAR THE HIGH ORDER BYTE          18870000
         LTR   R4,R4                 Q... ANYTHING THERE?               18880000
         BZ    E14NOCAT              A... NO                            18890000
         CLC   FCTACSN,DDDDNAME      CHECK THIS, JUST IN CASE           18900000
         BNE   E14NOCAT              UM, ER, I'LL SEE YOU LATER         18910000
         NI    FCTFLG6,X'FF'-FCTF6CF TURN OFF CONCAT FLAG               18920000
         B     E14NXTCF              LET'S PLAY WITH THE NEXT ONE TOO   18930000
E14NOCAT DS    0H                                                       18940000
         LR    R4,R2                 ADDRESS OF THE ORIGINAL            18950000
         SPACE 2                                                        18960000
*  WELL, THAT SHOULD BE ALL                                             18970000
         SPACE 3                                                        18980000
.NOTFRE  ANOP                                                           18990000
         JOLERR 005,                                                   .19000004
               'DSID ',DDDSID,                                         .19010000
               ' DDNAME ',DDDDNAME,                                    .19020000
               ' CALLED IN FREE'                                        19030000
         B     RETN0                                                    19040000
TEMPDDNM DC    H'8'                                                     19050000
TEMPDDN2 DC    CL8' '                                                   19060000
* THE FOLLOWING LINES ARE USED TO PRINT OUT DE-ALLOCATION MESSAGES      19070000
*     FOR THE DYNAMIC ALLOCATION VERSION OF JOL.                        19080000
D14DEALL DC    AL2(D14END1-*,0)                                         19090000
         DC    AL2(D14END1-*,0),C' '                                    19100032
D14DETME DC    CL8' '                  TIME GOES HERE                   19110000
         DC    C' '                                                     19120000
D14DSID  DC    CL8' '                                                   19130000
         DC    C'  '                                                    19140000
D14DDNAM DC    CL8' '                                                   19150000
         DC    C'    '                                                  19160000
D14ACTN  DC    CL8' '                   PASSED ETC                      19170000
D14END1  EQU   *                                                        19180000
          SPACE                                                         19190000
          LTORG                                                         19200000
          PRINT NOGEN                                                   19210000
          DCBD  DSORG=PS                                                19220000
          PRINT GEN                                                     19230000
*        COPY UJD20RUN                                                  19240000
         TITLE 'UJ20RUN:PERFORM A RUN INSTRUCTION'                      19250000
         JOLSAVE CSECT=UJE20RUN                                         19260000
* HANDLE RUN STATEMENT                                                  19270000
         MVI   ISRUN,C'1'                                               19280000
         MVC   RUNNAME,PGM                                              19290000
         MVC   TASKNAME,PGM                                             19300000
         MVC   TASKLABL,PGMLABEL                                        19310000
         MVC   D20PRGN,PGM                                              19320000
         MVC   D20STEPN,PGMLABEL                                        19330000
         MVC   D20STMT,STMT                                             19331017
         CALL  UJE97SPC                   SPACE UP                      19340000
         CALL  UJE97SPC                   SPACE UP                      19350000
         CALL  UJE97SPC                   SPACE UP                      19360000
* GET THE SSI FOR PRINTING PURPOSES                                     19370000
         BLDL  0,RUNBLDL                                                19380000
         B     RUNBLD(R15)                                              19390000
RUNBLD   B     RUNBLD0                                                  19400000
         B     RUNBLD4                                                  19410000
         B     RUNBLD8                                                  19420000
RUNBLD4  DS    0H                                                       19430000
         MVC   TASKSSI,=X'00000000'         CLEAR THE SSI INFO          19440000
         MVC   D20SSI,=C'00000000'          CLEAR THE SSI INFO          19450000
         B     E20PHD1                      PRINT HEADER                19460000
RUNBLD8  JOLERR 402,'PERMANENT I/O ERR FINDING ',RUNNAME                19470004
E20806   DS    0H                                                       19480000
         B     E20PHD1                      PRINT HEADER                19490000
         SPACE 3                                                        19500000
RUNBLD0  LA    R15,RUNNAME                                        85199 19510000
         USING PDS2,R15                                           85199 19520000
         LA    R9,PDSBCEND+1           END OF BASIC SECTION       85199 19530000
         TM    PDS2FTB1,PDS2SSI        IS THERE AN SSI FIELD?     85199 19540000
         BNO   E20NOSSI                NO, MAKE IT ZEROS          85199 19550000
         TM    PDS2ATR1,PDS2SCTR       SKIP SCATTER FIELD?        85199 19560000
         BNO   E20NSCAT                YES                        85199 19570000
         LA    R9,PDSS01LN(R9)         ADD TO AVOID WRONG FIELD   85199 19580000
E20NSCAT TM    PDS2INDC,PDS2ALIS       ALIAS FIELD?               85199 19590000
         BNO   E20NALIA                YES                        85199 19600000
         LA    R9,PDSS02LN-1(R9)       ADD TO AVOID WRONG FIELD   85199 19610000
E20NALIA MVC   TASKSSI,0(R9)                                      85199 19620000
         B     E20SSI                                                   19630000
E20NOSSI MVC   TASKSSI,=X'00000000'         CLEAR THE SSI INFO          19640000
E20SSI   UNPK  CALLAREA(9),TASKSSI(5)                                   19650000
         TR    CALLAREA(8),HEX                                          19660000
         MVC   D20SSI,CALLAREA                                          19670000
E20PHD1  CALL  GETTIME                                                  19680000
         MVC   D20PRGT,CURRTIME                                         19690000
         WRITE D201DECB,SF,PRINT,D20PRGP  WRITE THE PROGRAM HEADER      19700000
         CHECK D201DECB                   WAIT TILL IT GOES             19710000
         CALL  UJE97SPC                   SPACE UP                      19720000
         WRITE D202DECB,SF,PRINT,D20HEAD1 WRITE THE ALLOCN HEADER       19730000
         CHECK D202DECB                   WAIT TILL IT GOES             19740000
* NOW SEE IF A PARM IS USED IN THIS RUN                                 19750000
*                                                                       19760000
* NOW BEFORE XCTL TO THE USER PROGRAM,WE MUST DETERMINE WHETHER         19770000
*     OR NOT THERE ARE ANY DD-CARDS REFERRING TO THIS PROGRAM           19780000
*     OR IF THERE IS A PARM FIELD OR NOT.                               19790000
*                                                                       19800000
* IF THERE ARE NO DD-CARDS,WE MAY XCTL NOW,OTHERWISE WE                 19810000
*     MUST CHECK THAT THIS IS THE CORRECT OS STEP OR NOT                19820000
*          L  R2,TTR$INST      SAVE TTR OF NEXT INSTRUCTION             19830000
*                              BECAUSE IF WE DECIDE NOT TO DO           19840000
*                              THE USERS PROGRAM HERE WE WILL           19850000
*                              HAVE TO RESET THE TTR SO THE             19860000
*                              NEXT OS STEP THAT IS EXECUTED            19870000
*                              WILL START AT THE CORRECT STEP           19880000
*          CLC PGMNODDS,=A(0)    ARE THERE ANY DDCARDS?           75128 19890000
*        BNE   E20AREDD        YES                                      19900000
         CALL  UJE50RD        READ NEXT STATEMENT                       19910000
         LTR   R15,R15        EOF PERHAPS ?                             19920000
         BZ    E20TPARM                                                 19930000
* NO DD'S  AND NO PARM,RETURN A 0,SO WE WILL XCTL TO                    19940000
*     PROBLEM PROGRAM.                                                  19950000
         $NOTE INSTRUCT       SAVE ADDRESS SO THAT 94CLN CAN WORK       19960035
         ST    R1,TTR$INST                                              19970000
         MVI   TTR$INST+3,0    SO WE RE-READ THE LAST STATEMENT         19980000
E20RETN0 DS    0H                                                       19990000
E20RETN  CALL  UJE97SPC                   SPACE UP                      20000000
         JOLRETN RC=0                                                   20010000
         SPACE                                                          20020000
E20TPARM DS    0H                                                       20030000
         $NOTE INSTRUCT      SAVE THIS ADDRESS, TO REPROCESS THE DDS    20040035
         ST    R1,TTR$INST                                              20050000
         MVI   TTR$INST+3,0       CONTINUE WITH THIS RECORD IF NOT PARM 20060000
         CLC   =C'PARM ',ICOMMAND                                       20070000
         BNE   E20TDD            NOT PARM, TRY DD                       20080000
         MVI   TTR$INST+3,1       CONTINUE WITH THE NEXT RECORD         20090000
* FIX UP USER'S PARM FIELD                                              20100000
         L     R1,ATASKPRM                                              20110000
         L    R15,=A(#TKNSTRG)                                          20120000
         USING  #TKNSTRG,R15                                            20130000
         MVC   0(256,R1),#TKNSTRG                                       20140000
         CLC   =X'00027D7D',0(R1)  FIX FOR BUG IN COMPILER              20150000
         BNE   E20T10                                                   20160000
         XC    0(6,R1),0(R1)                                            20170000
E20T10   DS    0H                                                       20180000
         DROP  R15                                                      20190000
         SPACE  3                                                       20200000
E20AREDD DS    0H                                                       20210000
* THE USER'S PROGRAM HAS DD-CARDS AND WE MUST DILIGENTLY                20220000
*   ALLOCATE THEM                                                       20230000
         SPACE                                                          20240000
E20READD DS    0H                                                       20250000
         CALL  UJE50RD                                                  20260000
         LTR   R15,R15                                                  20270000
         BNZ   E20RETN0                                                 20280000
E20TDD   DS    0H           TEST FOR DD                                 20290000
         CLI   DDDD1,C'D'                                               20300000
         BNE   E20NOTDD                                                 20310000
         CALL  GETTIME                                                  20320000
         MVC   D20DDNT,CURRTIME                                         20330000
* IF NEW PASS, ALLOCATE WITHOUT A DDNAME SO WE CAN KEEP IT              20340000
         MVC   D20WDSN,BLANKS              BLANK THE DSNAME WORK AREA   20341080
         MVC   D20WVOL,BLANKS              BLANK THE DSNAME WORK AREA   20342080
         TM    DDUSE,B'11000000'    NEW OR MOD?                         20350000
         BZ    E20NAL22             NO, SO SKIP THIS                    20360000
         CLI   DDDISP+1,C'P'        PASS ?                              20370000
         BNE   E20NAL22                                                 20380000
         CALL  UJE49VOL             READS JBCB'S, GETS VOLUMES ETC      20381096
         MVC   D20TDDN,DDDDNAME      SAVE FOR NEW DATA SETS             20390000
         MVC   D20RDISP,DDDISP      SAVE JOL'S DISP(1) FIELD            20400000
         MVC   DDDDNAME,=CL8' '     BLANK DDNAME SO WE GET A SYSNNN     20410000
         CALL  UJE21ALL             ALLOCATE THE DD AS NEW              20420000
         MVC   DDDDNAME,D20TDDN     RESTORE DDNAME                      20430000
         NI    DDDISP,B'00111111'   SET TO OLD FOR 2ND ALLOCATE         20440000
         CALL  UJE21ALL             ALLOCATE THE DD AS OLD              20450000
         MVC   DDDISP,D20RDISP      RESTORE JOL'S DISP FIELD            20460000
         MVI   DDDISP+1,C'P'        RESTORE JOL'S DISP FIELD            20470000
         TM    DDDISP,B'01000000'        NEW?                           20490000
         BO    E20JNEWD                    YES                          20500000
         OI    JFCBIND2,B'10000000' NO, MUST BE MOD - SET FOR PRINTING  20510000
         B     E20PDDDN             GO PRINT DDNAME ETC                 20520000
E20JNEWD MVI   JFCBIND2,B'11000000'      SET TO NEW FOR PRINTING        20530000
         B     E20PDDDN             GO PRINT DDNAME ETC                 20540000
E20NAL22 DS    0H                                                       20550000
         CALL  UJE21ALL             ALLOCATE THE DD                     20560000
         CALL  UJE49VOL             READS JBCB'S, GETS VOLUMES ETC      20560196
         CLC   DDDDNAME,BLANKS      CONCATENATED?                       20561035
         BNE   E20GVOL                                                  20562035
         MVC   DDNAME,SAVEDD                                            20562135
         MVC   #DDNAME,=H'8'                                            20562240
*        DYNPARM DDNAME=((8,#DDNAME,#ERETDDN)),VRB=C                    20563040
         LA    R1,DYNCONC                                               20564040
         DYNALLOC                                                       20565040
*                                                                       20565140
*  CHECK TO SEE IF ERRORS OCCURED.                                      20565240
*                                                                       20565340
         LTR   R15,R15                                                  20565540
         BNZ   D20ERR                RETURN CODE ZERO                   20565640
         L     R0,CONCERR            TEST ERR AND INFO CODE             20565740
         LTR   R0,R0                 ERROR ?                            20565840
         BZ    E20GVOL                                                  20565940
D20ERR   LA    R1,DYNCONC                                               20566540
         LR    R0,R15          R15                                      20566640
         $CALL UJD03ERR                                                 20566740
E20GVOL  CALL  UJE49VOL             READS JBCB'S, GETS VOLUMES ETC      20570000
E20PDDDN MVC   D20DDN,DDDDNAME      SAVE FOR NEW DATA SETS              20580000
         MVC   D20DSID,DDDSID                                           20590000
         CLI   DDTYPE,DDWORKDS                                          20600000
         BNL   E20ISDSN                                                 20610000
* HERE, IT IS A PRINTER OR SPECIAL FILE                                 20620000
         CLEAR  D20DSN                                                  20630000
         CLI   DDTYPE,DDSYSIN                                           20640000
         BE    E20SYSIN                                                 20650000
* HERE, IT IS A PRINTER OR PUNCH FILE                                   20660000
         CLI   DDTYPE,DDSYSOUT                                          20670000
         BE    E20SYSOU                                                 20680000
* HERE, IT IS A PUNCH FILE                                              20690000
         MVC   D20DSN(11),=C'PUNCH FILE='                               20700000
         MVC   D20DSN+11(1),DDDSNAME                                    20710000
         B     E20PDISP                                                 20720000
E20SYSOU MVC   D20DSN(7),=C'SYSOUT='                                    20730000
         MVC   D20DSN+7(1),DDDSNAME                                     20740000
         B     E20PDISP                                                 20750000
E20SYSIN MVC   D20DSN(16),=C'CARD IMAGE FILE='                          20760000
         MVC   D20DSN+16(8),DDDSNAME                                    20770000
         B     E20PDISP                                                 20780000
E20ISDSN DS    0H                                                       20790000
* AFTER ALLOCATION, DDDSNAME MAY HAVE THE (GDG) NUMBER.                 20800000
* SET UP PROPER LENGTH DSNAME FOR MESSAGES NOW, AFTER ALLOC.            20810000
         MVC   DSNAME,DDDSNAME                                          20820000
         LA    R15,L'DDDSNAME-1                                         20830000
E20TEDSN DS    0H                                                       20840000
         LA    R14,DDDSNAME(R15)                                        20850000
         CLI   0(R14),C' '                                              20860000
         BNE   E20DSNOK                                                 20870000
         BCT   R15,E20TEDSN                                             20880000
E20DSNOK DS    0H                                                       20890000
         LA    R15,1(R15)                                               20900000
         STH   R15,#DSN                                                 20910000
         MVC   D20WDSN,BLANKS              BLANK THE DSNAME WORK AREA   20920016
         LA    R15,1(R15)                  PREPARE TO EXECUTE MVC       20920116
         EX    R15,E20DSMVC                SHIFT IT.                    20920216
         B     E20TGDG                                                  20920316
E20DSMVC MVC   #D20WDSN(*-*),#DSNAME       COPY FIXED DSNAME            20921016
E20TGDG  CLI   DDMBR,C'('                  GDG ?                        20930016
         BE    E20GDG1                     YES, FIND GEN NUMBER         20940000
         CLI   DDMBR,C'+'                  GDG ?                        20950000
         BE    E20GDG1                     YES, FIND GEN NUMBER         20960000
         CLI   DDMBR,C' '                  NO MEMBER, NO GDG ?          20970000
         BE    E20IGNRX                    YES, SO LEAVE IT.            20980000
         B     E20PMBR                     ELSE PRINT MEMBER NAME.      20990000
E20GDG1  DS    0H                                                       21000000
* HERE WE HAVE A GENERATION DSNAME TO PRINT.                            21010000
*                                                                       21020000
* TO SAVE PAPER ETC, SET UP DSNAME LIKE THIS :-                         21030000
*   PAYROLL.MASTER(0):-G0045V00                                         21040000
*                                                                       21050000
         LH    R15,#D20WDSN                GET LENGTH                   21060000
         LA    R14,D20WDSN(R15)            POINT TO END                 21070000
         LA    R15,10(R15)                 RESET LENGTH ** NOW **       21080000
         STH   R15,#D20WDSN                  SO WE HAVE A FREE REGISTER 21090000
         LH    R15,#ERETDSN                GET LENGTH OF SVC 99 DSN     21100000
         LA    R15,ERETDSN-8(R15)          POINT TO G0000V00 NUMBER     21110000
         MVC   1(2,R14),=C':-'             SET UP SEPERATOR             21120000
         MVC   3(8,R14),0(R15)             SHIFT IN G0000V00            21130000
         B     E20PDSN                     GO PRINT THE DSNAME NOW      21140000
         SPACE 3                                                        21150000
E20PMBR  DS    0H                                                       21160000
* HERE WE HAVE A MEMBER NAME TO ADD TO THE DSNAME FOR PRINTING          21170000
         MVC   #D20WDSN(46),#DSNAME        COPY RETURNED DSNAME         21180000
         LH    R15,#D20WDSN                GET ITS LENGTH               21190000
         LA    R14,D20WDSN-0(R15)          POINT TO END OF DSN          21200016
         MVI   0(R14),C'('                 MEMBER START IND             21210000
         MVC   1(8,R14),DDMBR              COPY IN MEMBER NAME          21220000
         LA    R14,9(R14)                  POINT TO LAST CHAR MBR       21230000
E20FENDM CLI   0(R14),C' '                 BLANK ?                      21240000
         BNE   E20ENDMB                    END OF MEMBER                21250000
         SH    R14,=H'1'                                                21260000
         B     E20FENDM                    FIND MEMBER END              21270000
E20ENDMB DS    0H                          GOT IT                       21280000
         MVI   1(R14),C')'                 SHIFT IN ')'                 21290000
         LA    R15,D20WDSN                 CALCULATE LENGTH             21300000
         SR    R14,R15                     GOT IT                       21310000
         STH   R14,#D20WDSN                SET LENGTH IN WORK DSN       21320000
E20IGNRX DS    0H                                                       21330000
E20PDSN  DS    0H                          PRINT THE DSNAME NOW         21340000
         MVC   D20DSN,D20WDSN              SHIFT FIRST 30 CHARACTERS    21350000
* PRINT DISP FIELDS                                                     21360000
E20PDISP MVC   D20DISP1(8),=CL8' '                                      21370000
         TM    JFCBIND2,B'11000000'        NEW?                         21380000
         BO    E20NEWDS                    YES                          21390000
         TM    JFCBIND2,B'01001000'        SHR?                         21400000
         BO    E20SHRDS                    YES                          21410000
         TM    JFCBIND2,B'01000000'        OLD?                         21420000
         BO    E20OLDDS                    YES                          21430000
         TM    JFCBIND2,B'10000000'        MOD?                         21440000
         BO    E20MODDS                    YES                          21450000
         B     E20TREST                    TEST DISP(2)                 21460000
E20NEWDS MVC   D20DISP1,=C'NEW'                                         21470000
         B     E20TREST                    TEST DISP(2)                 21480000
E20SHRDS MVC   D20DISP1,=C'SHR'                                         21490000
         B     E20TREST                    TEST DISP(2)                 21500000
E20OLDDS MVC   D20DISP1,=C'OLD'                                         21510000
         B     E20TREST                    TEST DISP(2)                 21520000
E20MODDS MVC   D20DISP1,=C'MOD'                                         21530000
* DISP(2) FIELDS                                                        21540000
E20TREST DS    0H           TEST DISP(2)                                21550000
         CLI   DDDISP+1,C'P'               PASS ?                       21560000
         BNE   E20TLAST                                                 21570000
         MVC   D20DISP2,=C',PASS   '                                    21580000
         B     D20TUNIT                                                 21590000
E20TLAST CLI   DDDISP+1,C'L'               LAST ?                       21600000
         BNE   E20TDEL                                                  21610000
         MVC   D20DISP2,=C',LAST   '                                    21620000
         B     D20TUNIT                                                 21630000
E20TDEL  CLI   DDDISP+1,C'D'               DELETE ?                     21640000
         BNE   E20TOTHR                                                 21650000
         MVC   D20DISP2,=C',DELETE '                                    21660000
         B     D20TUNIT                                                 21670000
E20TOTHR CLI   DDDISP+1,C' '               BLANK ?                      21680000
         BE    D20TUNIT                    YES                          21690000
         MVI   D20DISP2,C','                                            21700000
         MVC   D20DISP2+1(1),DDDISP+1      ?????? COPY ANYWAY           21710000
D20TUNIT MVC   D20UNIT,DDUNIT                                           21720000
*                                                                       21730000
         MVC   D20LABL,=CL8' '             BLANK IT                     21740000
         LH    R1,DDLABEL                                               21750000
         CVD   R1,DBL                                                   21760000
         ZAP   TEMP,DBL                                                 21770000
         MVC   D20LABL,=X'40202020202020'                               21780000
         ED    D20LABL,TEMP                                             21790000
* DO RECORD FORMAT FIELD                                                21800000
         MVI   D20COMA1,C' '            BLANK COMMA FIELD               21810000
         CLEAR D20BLKS                                                  21820000
         CLEAR D20LREC                                                  21830000
         CLEAR D20DCB                                                   21840000
         CLC   DDOSVB,=AL2(DDCATLGS-DDOSVB+2)  SHORT RECORD ?           21850000
         BNH   E20NODCB                                                 21860000
         IFNULL DDLRECL,DDBLKSZE,E20NODCB                               21870018
         LH    R1,DDBLKSZE                                              21880000
         CVD   R1,DBL                                                   21890000
         MVC   D20BLKS,=X'40202020202020'                               21900000
         ZAP   TEMP,DBL                                                 21910000
         ED    D20BLKS,TEMP                                             21920000
         MVI   D20COMA1,C','            PUT COMMA IN FIELD              21930000
         LH    R1,DDLRECL                                               21940000
         CVD   R1,DBL                                                   21950000
         MVC   D20LREC,=X'40202020202020'                               21960000
         ZAP   TEMP,DBL                                                 21970000
         ED    D20LREC,TEMP                                             21980000
         CLC   DDRECFM,=CL5' '          NONE SPECIFIED (BLANK)          21990000
         BE    E20NRECF                                                 22000000
         CLI   DDRECFM,C'%'             NONE SPECIFIED (NODCB)          22010000
         BNE   E20RECFM                                                 22020000
E20NRECF MVC   D20DCB,=CL4'NONE'                                        22030000
         B     E20REFDN                                                 22040000
E20RECFM MVC   D20DCB,DDRECFM                                           22050000
E20REFDN DS    0H                                                       22060000
E20NODCB DS    0H                                                       22070000
         CLEAR D20PRIM                                                  22170000
         CLEAR D20SEC                                                   22180000
         CLEAR D20DIR                                                   22190000
         CLEAR D20SPC                                                   22200000
         CLC   DDOSVB,=AL2(DDCATLGS-DDOSVB+2)  SHORT RECORD ?           22210000
         BNH   E20NSPC                         YES, SO NO SPACE         22220000
         IFNULL DDPRIM,DDSEC,DDDIRECT,E20NSPC  NO SPACE                 22230000
         MVC   D20PRIM,=X'40202020202020'                               22240000
         MVC   D20SEC,=X'40202020202020'                                22250000
         MVC   D20DIR,=X'40202020202020'                                22260000
         LH    R1,DDPRIM                                                22270000
         CVD   R1,DBL                                                   22280000
         ZAP   TEMP2,DBL                                                22290000
         ED    D20PRIM,TEMP2                                            22300000
         LH    R1,DDSEC                                                 22310000
         CVD   R1,DBL                                                   22320000
         ZAP   TEMP2,DBL                                                22330000
         ED    D20SEC,TEMP2                                             22340000
         LTR   R1,R1                                                    22350000
         BZ    E20NSPC1               E20-NO-SPACE-COMMA-1 !!!          22360000
         MVI   D20SEC,C','            PUT COMMA IN 1ST BYTE OF FIELD    22370000
E20NSPC1 LH    R1,DDDIRECT                                              22380000
         CVD   R1,DBL                                                   22390000
         ZAP   TEMP2,DBL                                                22400000
         ED    D20DIR,TEMP2                                             22410000
         LTR   R1,R1                                                    22420000
         BZ    E20NSPC2               E20-NO-SPACE-COMMA-2 !!!          22430000
         MVI   D20DIR,C','            PUT COMMA IN 1ST BYTE OF FIELD    22440000
E20NSPC2 EQU   *                                                        22450000
         CLI   DDCYLTRK,C' '          NONE SPECIFIED (BLANK)            22460000
         BE    E20ESPCC                                                 22470000
         CLI   DDCYLTRK,C'C'           CYLS ?                           22480000
         BNE   E20TTRK                                                  22490000
         MVC   D20SPC,=CL3'CYL'                                         22500000
         B     E20ESPCC              END SPACE                          22510000
E20TTRK  CLI   DDCYLTRK,C'T'             NONE SPECIFIED (NODCB)         22520000
         BNE   E20TBLK                                                  22530000
         MVC   D20SPC,=CL3'TRK'                                         22540000
         B     E20ESPCC              END SPACE                          22550000
E20TBLK  CLI   DDCYLTRK,C'B'           BLKS?                            22560000
         BNE   E20TABS                                                  22570000
         MVC   D20SPC,=CL3'BLK'                                         22580000
         B     E20ESPCC              END SPACE                          22590000
E20TABS  CLI   DDCYLTRK,C'A'           ABSTR?                           22600000
         BNE   E20OTHR4                                                 22610000
         MVC   D20SPC,=CL3'ABS'                                         22620000
         B     E20ESPCC              END SPACE                          22630000
E20OTHR4 MVC   D20SPC(1),DDCYLTRK                                       22640000
E20NSPC  DS    0H                                                       22650000
E20FVOL  MVC   D20VOLS,DDVOLUME                                         22651018
* THE FOLLOWING CODE PUTS 'VOLNAME(1,SL)' IF IT IS A TAPE.              22651119
         CLC   JFCBFLSQ,=H'0' TEST IF TAPE                        87150 22651220
         BE    E20DISK        NO, DON'T PUT OUT ON LABEL.         87150 22651319
*        TM    DDUNITYP,X'80' TEST IF TAPE                        87150 22651419
*        BO    E20DISK        NO, DON'T PUT OUT ON LABEL.         87150 22651519
* HERE IS A TAPE VOLUME.                                          87150 22652019
         MVC   D20WLBL,=X'40202020202020'                               22652119
         LH    R1,JFCBFLSQ     GET LABEL NUMBER                         22652220
         CVD   R1,DBL                                                   22652319
         ZAP   TEMP2,DBL                                                22652419
         ED    D20WLBL(5),TEMP2                                         22652519
         LA    R1,5                                                     22652619
E20FCHK1 CLI   D20WLBL,C' '    DROP STARTING BLANKS                     22652719
         BNE   E20EFILE                                                 22652819
         MVC   D20WLBL(5),D20WLBL+1 DROP LEADING BLANK                  22652919
         BCT   R1,E20FCHK1                                              22653023
E20EFILE DS    0H                                                       22653119
         STH   R1,#D20WLBL     SET LENGTH OF STRING                     22653219
         LA    R15,D20WLBL(R1) POINT TO END OF STRING                   22653319
         NI    JFCBLTYP,X'7F'  DROP HIGH BIT                            22653421
         CLI   JFCBLTYP,JFCBAL AL ?                                     22653519
         BNE   TJFCBLTM        TEST LTM                                 22653619
         MVC   0(3,R15),=C',AL'                                         22653719
         LA    R1,3(R1)                                                 22653819
         B     E20COPYV        COPY VOL INFO IN                         22653919
TJFCBLTM CLI   JFCBLTYP,JFCBLTM LTM ?                                   22654019
         BNE   TJFCBBLP        TEST BLP                                 22654119
         MVC   0(4,R15),=C',LTM'                                        22654219
         LA    R1,4(R1)                                                 22654319
         B     E20COPYV        COPY VOL INFO IN                         22654419
TJFCBBLP CLI   JFCBLTYP,JFCBLP BLP ?                                    22654519
         BNE   TJFCBSUL        TEST AUL                                 22654621
         MVC   0(4,R15),=C',BLP'                                        22654719
         LA    R1,4(R1)                                                 22654819
         B     E20COPYV        COPY VOL INFO IN                         22654919
TJFCBAUL CLI   JFCBLTYP,JFCAUL AUL ?                                    22655019
         FIX   '?????????????? ?????????'                               22655121
         BNE   TJFCBSUL        TEST SUL                                 22655221
         MVC   0(4,R15),=C',AUL'                                        22655321
         LA    R1,4(R1)                                                 22655421
         B     E20COPYV        COPY VOL INFO IN                         22655521
TJFCBSUL CLI   JFCBLTYP,JFCSUL SUL ?                                    22655621
         BNE   TJFCBNSL        TEST NSL                                 22655721
         MVC   0(4,R15),=C',SUL'                                        22655821
         LA    R1,4(R1)                                                 22655921
         B     E20COPYV        COPY VOL INFO IN                         22656021
TJFCBNSL CLI   JFCBLTYP,JFCNSL NSL ?                                    22656121
         BNE   TJFCBSL         TEST SL                                  22656221
         MVC   0(4,R15),=C',NSL'                                        22656321
         LA    R1,4(R1)                                                 22656421
         B     E20COPYV        COPY VOL INFO IN                         22656521
TJFCBSL  CLI   JFCBLTYP,JFCSL  SL ?                                     22656621
         BNE   TJFCBNL         TEST NL                                  22656721
         MVC   0(3,R15),=C',SL'                                         22656821
         LA    R1,4(R1)                                                 22656921
         B     E20COPYV        COPY VOL INFO IN                         22657021
TJFCBNL  CLI   JFCBLTYP,JFCSL  NL ?                                     22657121
         BNE   TJFCBXX         TEST ???                                 22657221
         MVC   0(3,R15),=C',NL'                                         22657321
         LA    R1,4(R1)                                                 22657421
TJFCBXX  DS    0H                                                       22657521
E20COPYV DS    0H              COPY VOL INFO IN                         22657621
         STH   R1,#D20WLBL     RESET LENGTH OF STRING                   22657721
         MVC   D20WVOL(6),VOL   SHIFT TO PRINT LOCATION                 22657821
         MVI   D20WVOL+6,C'('  OPEN COMMENT FOR LABEL NUMBERS           22657921
         MVC   D20WVOL(8),D20WLBL MOVE '1,SL'                           22658021
         LA    R15,D20WVOL(R1) GET END ADDRESS                          22658121
         MVI   0(R15),C')'     CLOSE COMMENT                            22658221
         B     E20ENDLB        FINISHED THAT BIT                        22658321
* FIX LATER                                                             22658421
* #VOLS CONTAINS LENGTH OF VOL STRING (CHANGE LATER?)                   22658521
E20DISK  CLC   #VOL,=H'6'         ONE OR MORE VOLS?                     22658621
         BH    E20NOSL            MORE, IGNORE FOR NOW                  22658721
         MVC   #D20WVOL(8),#VOL   SHIFT TO WORK LOCATION                22658821
         LH    R15,#D20WVOL       GET THE LENGTH                        22658921
         B     E20NOSL            STORE VOLUMES                         22659021
E20ENDLB DS    0H                                                       22659919
E20NOSL  DS    0H                                                       22660019
E20ESPCC DS    0H                                                       22660119
         WRITE D203DECB,SF,PRINT,D20DDAL  WRITE THE ALLOCATION MSSGE    22670000
         CHECK D203DECB                   WAIT TILL IT GOES             22680000
* THE DSNAME FIELD CAN HOLD A MAXIMUM OF 30 CHARACTERS, SO WE MUST      22690000
*     PRINT THE SECOND PART IF IT IS LONGER.                            22700000
         MVC   D20DSN2,D20WDSN+L'D20DSN   SHIFT SECOND PART OF DSN      22701079
         CLC   D20DSN2,BLANKS             IS THERE MORE TO PRINT ?      22702079
         BNE   E20CONT                    MUST WRITE SECOND LINE        22703016
*        CLC   #D20WDSN,=AL2(L'D20DSN)     CHECK IF IT WILL FIT         22710016
*        BH    E20CONT                    MUST WRITE SECOND LINE        22720016
         B     E20READD                   GO FOR MORE                   22730000
E20CONT  DS    0H                         CONTINUE ALLOC MSSGE          22770000
         WRITE D204DECB,SF,PRINT,D20SECL  WRITE CONTINUED MSSGE         22780000
         CHECK D204DECB                   WAIT TILL IT GOES             22790000
         B     E20READD                   GO FOR MORE                   22800000
*        MVC   #D20WDSN(L'D20WDSN+2),#ERETDSN  COPY RETURNED DSNAME     22810000
E20NOTDD DS    0H                                                       22820000
         $POINT INSTRUCT,TTR$INST                                       22830035
         B     E20RETN0        TO XCTL                                  22840000
         SPACE 3                                                        22850000
#D20WDSN DC    H'0'                       WORK AREA FOR DSNAMES         22860000
D20WDSN  DC    CL54' '                    (DSN=44 + MEMBER=10 (XXXXXX)) 22870079
D20WDSNX DC    CL10' '                    *** DON'T MOVE THIS ***       22871016
         SPACE                                                          22880000
#D20WVOL DC    H'0'                       WORK AREA FOR VOLUMES         22890018
D20WVOL  DC    CL20' '                    (1 LINE AT A TIME)            22900018
         SPACE                                                          22901019
#D20WLBL DC    H'0'                       WORK AREA FOR FILENOS         22902019
D20WLBL  DC    CL10' '                                                  22903019
         SPACE                                                          22910000
#D20TDDN DC    H'8'                                                     22920000
D20TDDN  DC    CL8' '                                                   22930000
D20RDISP DC    XL1'0'                  SAVE DISP HERE FOR NEW           22940000
TEMP     DS    PL3                                                      22950000
TEMP2    DS    PL2                                                      22960000
         SPACE 3                                                        22970000
* THE FOLLOWING LINES ARE USED TO PRINT OUT ALLOCATION MESSAGES         22980000
*     FOR THE DYNAMIC ALLOCATION VERSION OF JOL.                        22990000
D20PRGP  DC    AL2(D20END1-*,0)                                         23000000
         DC    AL2(D20END1-*,0),C' '                                    23010030
D20PRGT  DC    CL8' '                  TIME GOES HERE                   23020000
         DC    C' ALLOCATION FOR INSTRUCTION NUMBER '                   23030017
D20STMT  DC    CL4' '                                                   23040017
         DC    C' STEP '                                                23041017
D20STEPN DC    CL8' '                                                   23042017
         DC    C' PROGRAM '                                             23050000
D20PRGN  DC    CL8' '                                                   23060000
         DC    C' SSI '                                                 23070000
D20SSI   DC    CL8' '                                                   23080000
D20END1  DS    0H                                                       23090000
          SPACE                                                         23100000
D20HEAD1 DC    AL2(D20END2-*,0)                                         23110000
         DC    AL2(D20END2-*,0),C' '                                    23120030
         DC    C'         --DSID--'                                     23130000
         DC    C' -DDNAME- '                                            23140000
         DC    C'------------DSNAME------------ '                       23150000
         DC    C'---DISP--- ------DCB------ '                           23160000
         DC    C'--UNIT-- ---VOLUMES--- '                               23170000
         DC    C'----SPACE----'                                         23180000
D20END2  DS    0H                                                       23190000
          SPACE                                                         23200000
D20DDAL  DC    AL2(D20END3-*,0)                                         23210000
         DC    AL2(D20END3-*,0),C' '                                    23220030
D20DDNT  DC    CL8' '                  TIME GOES HERE                   23230000
         DC    C' '                                                     23240000
D20DSID  DC    CL8' '       DSID                                        23250000
         DC    C' '                                                     23260000
D20DDN   DC    CL8' '       DDNAME                                      23270000
         DC    C' '                                                     23280000
D20DSN   DC    CL30' '      DSNAME AND MEMBER MAYBE                     23290000
         DC    C' '                                                     23300000
D20DISP1 DC    CL3' '       DISPOSITION                                 23310000
D20DISP2 DC    CL7' '       DISPOSITION                                 23320000
         DC    C' '                                                     23330000
D20DCB   DC    CL4' '       DCB                                         23340000
         ORG   *-1          FOR EDIT INSTRUCTION                        23350000
D20LREC  DC    CL6' '       LRECL                                       23360000
D20COMA1 DS    0C                                                       23370000
D20BLKS  DC    CL6' '       BLOCKSIZE                                   23380000
         DC    C' '                                                     23390000
D20UNIT  DC    CL8' '       UNIT                                        23400000
         DC    C' '                                                     23410000
D20VOLS  DC    CL13' '      VOLUME INFORMATION (MAY BE CONTINUED)       23420000
D20PRIM  DC    CL5' '       PRIMARY ALLOCATION                          23430000
D20SEC   DC    CL5' '       SECONDAY ALLOCATION                         23440000
D20DIR   DC    CL5' '       DIRECTORY ALLOCATION                        23450000
D20SPC   DC    CL3' '       CYL, TRK                                    23460000
D20END3  EQU   *                                                        23470000
D20LABL  DC    CL5' '       LABEL NUMBER                                23480000
         DC    C' '                                                     23490000
         SPACE 3                                                        23500000
* FOR SECOND AND SUBSEQUENT LINES OF DSNAME AND VOLUMES.                23510000
D20SECL  DC    AL2(D20END4-*,0)                                         23520000
         DC    AL2(D20END4-*,0),C' '                                    23530030
         DC    CL100' '                                                 23540000
         ORG   D20SECL+(D20DSN-D20DDAL)                                 23550000
D20DSN2  DC    CL24' '      DSNAME AND MEMBER MAYBE(54-30)              23560079
         DC    C' '                                                     23570000
         ORG   D20SECL+(D20VOLS-D20DDAL)                                23580000
D20VOLS2 DC    CL13' '      VOLUME INFORMATION (CONTINUED)              23590000
D20END4  EQU   *                                                        23600000
         ORG                                                            23610000
          SPACE                                                         23620000
         DC    80S(*)                                                   23630000
         LTORG                                                          23640000
         AIF   (&X8).X8340                                       88036  23641012
         IHAPDS                                                         23650000
.X8340   ANOP                                                    88036  23651013
*        COPY UJD21ALL                                                  23660000
         TITLE 'UJE21ALL: HANDLE DATASET ALLOCATION'                    23670000
         JOLSAVE CSECT=UJE21ALL                                         23680000
*                                                                       23690000
*  DYNAMIC ALLOCATION OF DATA SETS.                                     23700000
*                                                                       23710000
*  PROBLEMS:-                                                           23720000
*   1. SYSOUT DATA SETS GET SPUN OFF.                                   23730000
*      SOLUTION: ALLOCATE WITH SYSNNN NUMBER, THEN CONCATENATE          23740000
*                REAL DDNAME. AT END, DO NOT FREE, BUT DECONCATENATE.   23750000
* NO CLEM                                                               23751000
*        PUT OUT REAL DD CARDS WITH DDNAMES NOT USED BY PGMS            23752000
*              MODIFY DDNAMES  AS REQUIRED                              23753000
         FIX   'SOME PROBLEMS  WITH SYSOUT HERE'                        23754000
*                                                                       23760000
*   2. TAPE SCRATCH VOLUMES WRITING LABEL 1 THEN 2 IN SAME STEP.        23770000
*      SVC99 CAN'T RETURN VOLUME NAME.                                  23780000
*      SOLUTION: ALLOCATE WITH SYSNNN NUMBER, OPEN FOR OUTPUT,          23790000
*                ALLOCATE REAL DDNAME, FREE SYSNNN, PRESS ON.           23800000
*                                                                       23810000
*        HOW ABOUT OPEN OUT,  READ LABEL, CLOSE W/- LEAVE               23811000
*              OPEN OUT GETS TMS'S OK TO WRITE.                         23812000
*              CLOSE W/- LEAVE KEEPS TAPE MOUNTED                       23813000
*                                                                       23820000
         FIX   'IF DATASET IS TO BE RE-WRITTEN, CALL DELETE NEAR HERE'  23830000
*            AND THEN ALLOCATE AS A NEW DATASET                         23840000
         LA    R0,WORK                                                  23850000
         LA    R1,L'WORK                                                23860000
         SLR   R15,R15                                                  23870000
         MVCL  R0,R14                                                   23880000
         CLI   DDTYPE,DDSYSOUT       IS IT A SYSOUT FILE                23890000
         BNE   E21NPRT               NO, BYPASS CLEARING DDNAME         23900000
E21NPRT  CLC   =CL8' ',DDDDNAME      Q... CONCATENATED FILE?            23910000
         BE    E21NOTCT              A... NO                            23920000
         MVC   SAVEDD,DDDDNAME       COPY THE DDNAME                    23930000
E21NOTCT DS    0H                                                       23940000
         CLC   =C'PRGLIB  ',DDDDNAME Q... PRGLIB?                       23950000
         BE    E21MVDDN              A... YES                           23960000
         CLC   =C'STEPLIB ',DDDDNAME Q... STEPLIB?                      23970000
         BE    E21STEPL              A... YES                           23980022
         CLC   =C'JOBLIB  ',DDDDNAME Q... JOBLIB?                       23980122
         BE    E21JOBL               A... YES                           23980222
         B     E21TSYS               A... NO, SEE WHAT IT IS            23980324
         FIX   'WE JUST FOUND A STEPLIB'                                23981000
E21STEPL MVC   DDDDNAME,=CL8'STEPLIB$' CHANGE FOR DYN ALLOC             23990022
E21MVDDN MVC   STEPLBDD,DDDDNAME      MOVE IN THE DDNAME                24000000
         B     E21TSYS                                                  24000122
E21JOBL  MVC   DDDDNAME,=CL8'JOBLIB$' CHANGE FOR DYN ALLOC              24001022
         MVC   JOBLBDD,DDDDNAME       MOVE IN THE DDNAME                24003022
E21TSYS  CLI   DDTYPE,DDSYSIN      Q... SYSIN DATASET?                  24020022
         BNE   E21NSSIN            A.. NO                               24030000
         MVC   DDMBR,DDDSNAME+2    ESTABLISH MEMBER NAME                24040000
         CLEAR DDDSNAME,DSN                                             24050000
*        MVC   DDDSNAME(L'DDDSNAME),=CL44'&&INST'                       24060066
         MVC   DDDSNAME,SYSINDSN                                        24061067
         MVC   #DSN(28),#SYSINDS                                        24070066
         CLEAR DDVOLUME                                                 24080000
         MVC   DDVOLUME(6),SYSINVOL                                     24090066
         MVI   DDUSE,B'00001000'   DISP=(SHR,KEEP)                      24100000
         MVI   DDTYPE,DDMEMSPC                                          24110000
         MVI   DDUNITYP,X'80'         TELL ALLOC THAT IT IS A DISK.     24120000
         MVC   DDUNIT(3),SYSINUNI     UNIT ADDRESS                      24121074
         B     E21X8A4                                                  24130000
E21NSSIN DS    0H                                                       24140000
         SPACE 2                                                        24150000
*  BEFORE GOING ANY FURTHER, WHY NOT HAVE A LOOK AROUND TO SEE          24160000
*   WHAT IS ALREADY AVAILABLE?                                          24170000
* ****** UNLESS THIS IS A CONCATENATED FILE, IN WHICH CASE WE SHALL     24180000
*        DO A PROPER ALLOCATION      CVC                                24190000
         CLC   =CL8' ',DDDDNAME     CONCATENATED ?                      24200068
         B     XXXALLOC             YES, GO THROUGH NORMAL ALLOC        24210000
         BE    E21NOFCT             YES, GO THROUGH NORMAL ALLOC        24220000
         SPACE 2                                                        24230000
XXXALLOC CALL  UJD03DS1,DDDSNDET                                        24240000
         SPACE 3                                                        24320000
         B     E21RETN                                                  24330000
         SPACE 5                                                        24340000
E21NOFCT DS    0H                                                       24350000
E21X8A4  DS    0H                                                       24360000
         SPACE 2                                                        24370000
*  NOW CHECK FOR VOLREF                                                 24380000
         SPACE                                                          24390000
         CLI   DDVOLUME,C'*'         VOLREF USED?                       24400000
         BNE   E21X8A5             NO                                   24410000
         BAL   R14,E21VREF         GO AND FIX VOLREF                    24420000
E21X8A5  DS    0H                                                       24430000
         CALL  UJD03DS1,DDDSNDET   ALLOCATE THE DATA SET                24440000
*        CALL UJE03X8A,(DDOSVB,CALLARE2),VL,MF=(E,CALLAREA)             24450000
         ST    R15,TASKRETN                                             24460000
         LTR   R1,R15                                                   24470000
         BZ    E21DDOK          ALLOCATED PROPERLY                      24480000
         CH    R15,=H'172'      FAIL BECAUSE OF NO DEVICE AVAIL?        24490000
         BNE   U21CVCAF         NO, GIVE FAILURE MESSAGE                24500000
         XC    ALLOCECB,ALLOCECB                                        24510000
   WTOR  'WHEN A TAPE DRIVE IS AVAILABLE, PLEASE REPLY GO',ALLOCREP,   *24520000
               2,ALLOCECB                                               24530000
         WAIT  ECB=ALLOCECB                                             24540000
         B     E21X8A5          TRY AGAIN                               24550000
U21CVCAF CVD   R15,DBL                                                  24560000
         MVC   TASKSSI,=X'40202120'                                     24570000
         ED    TASKSSI,DBL+6                                            24580000
         JOLERR 406,'DSID ',DDDSID,', DDNAME ',                        .24590004
               DDDDNAME,', DS ',#DSN,' FAILED WITH RETURN CODE',       .24600000
               TASKSSI                                                  24610000
         JOLERR 500,'RUN TERMINATED DUE TO ALLOCATION ERROR'            24610147
         ABEND 2 ,,STEP                                                 24610247
         FIX   'WHY DO WE USE A STEP ABEND?'                            24610347
         JOLRETN                                                        24611047
         FIX   'CANCEL JOB ??? '                                        24612047
E21DDOK  DS    0H                                                       24612155
         JOLRETN                                                        24612255
         AGO   .NDUMP                                                   24613047
         CLEAR DPDATA                                                   24620000
         LA    R0,DPBLKL                                                24630000
         SLL   R0,16                                                    24640000
         ST    R0,DPBLOCK                                               24650000
         LA    R0,DPLINEL                                               24660000
         SLL   R0,16                                                    24670000
         ST    R0,DPLINE                                                24680000
         L     R2,CALLARE2     ADDRESS OF AREA TO DUMP                  24690000
E21LP0   DS    0H                                                       24700000
         ST    R2,CALLAREA                                              24710000
         UNPK  DBL(9),CALLAREA(5)                                       24720000
         TR    DBL,HEX                                                  24730000
         MVC   DPADDR,DBL+2                                             24740000
         MVC   DPCHARS,0(R2)   COPY DATA IN CHARACTERS                  24750000
         TR    DPCHARS,TRTAB   REMOVE SOME HARD-TO-PRINT DATA           24760000
         LA    R14,DPHEX       ADDRESS FOR HEX DATA                     24770000
         LA    R1,2                                                     24780000
E21LP1   DS    0H                                                       24790000
         LA    R0,4            4 SEGMENTS                               24800000
E21LP2   DS    0H                                                       24810000
         UNPK  DBL(9),0(5,R2)  CONVERT SOME TO HEX                      24820000
         TR    DBL,HEX                                                  24830000
         MVC   0(8,R14),DBL    INTO THE PRINT LINE                      24840000
         LA    R14,9(,R14)     NEXT FOR OUTPUT                          24850000
         LA    R2,4(,R2)       NEXT FOR INPUT                           24860000
         BCT   R0,E21LP2                                                24870000
         LA    R14,1(,R14)    AN EXTRA SKIP IN PAGE CENTRE              24880000
         BCT   R1,E21LP1                                                24890000
         L     R1,=A(S23DECB)                                           24900000
         WRITE (1),SF,,DPBLOCK,MF=E                                     24910000
         L     R1,=A(S23DECB)                                           24920000
         CHECK (1)                                                      24930000
         C     R2,CALLARE2+4   Q... ANY MORE?                           24940000
         BNH   E21LP0          A... YES                                 24950000
         L     R1,TASKRETN                                              24960000
*        CALL  UJS45AER                                                 24970027
         TM    E21FLAG,E21CONT                                          24980000
         BO    E21RETN                                                  24990000
         JOLERR 500,'RUN TERMINATED DUE TO ALLOCATION ERROR'            25000004
         ABEND 2 ,,STEP                                                 25010000
         FIX   'WHY DO WE USE A STEP ABEND?'                            25011000
E21DDOK  DS    0H                                                       25020000
         JOLRETN                                                        25030000
         FIX '************'                                             25040000
         CLI   DDTYPE,DDSYSOUT    IS IT A SYSOUT FILE                   25050000
         BE    E21SYSO            YES SO ADJUST MSG                     25060000
         CLC   =CL6' ',DDVOLUME   IS THERE A VOLSER?                    25070000
         BE    E21PIV             NO SO PUT IN VOLUME                   25080000
E21DDOK2 MVC   VOL(12),DDVOLUME                                         25090000
E21DDOK1 EQU   *                                                        25100000
         MVC   #DSN,=H'28'                                              25110000
         MVC   #VOL,=H'12'                                              25120000
*        JOLERR 003,                                                  . 25130004
*              'DSID ',DDDSID,                                        . 25140000
*              ' DDNAME ',DDDDNAME,' DSN ',#DSN,                      . 25150000
*              ' VOL ',#VOL,' ALLOC '                                   25160000
         B     E21RETN                                                  25170000
E21PIV   DS    0H                                                       25180000
* FIND VOLUME                                                           25190000
         FIX   'SEARCH QDB ETC. CODE MAY BE FOUND IN JOLTSF'            25200000
         B     E21OSQDB                                                 25210000
         L     R4,ATCB           POINT AT TCB                           25220000
         L     R4,TCBJSCB-TCB(,R4) POINT AT JSCB                        25230000
         ICM   R4,7,JSCBFCTA-JSCB(R4) POINT AT FCT CHAIN                25240000
         USING FCT,R4             MAP FCT                               25250000
E21PIV1  EQU   *                                                        25260000
         CLC   FCTFLN,DDDSNAME    IS IT THIS ONE?                       25270000
         BE    E21PIV2            DO WHAT IS REQUIRED                   25280000
         ICM   R4,7,FCTNFCTA      POINT AT NEXT FCT                     25290000
         BNZ   E21PIV1            LOOK AT NEXT FCT                      25300000
         B     E21DDOK2           IMPOSSIBLE TO GET HERE..BUT FOR       25310000
*                                  SAFETY SAKE                          25320000
E21PIV2  EQU   *                                                        25330000
         L     R4,FCTVCT           POINT AT VCT                         25340000
         MVC   VOL(6),8(R4)        PLUG IN VOL                          25350000
         B     E21DDOK1            AND ISSUE MESSAGE                    25360000
E21SYSO  EQU   *                                                        25370000
* HERE WE MUST CONCATENATE THE REAL DDNAME TO THE SYSNNN DDNAME         25380000
         MVC   #DSN,=H'1'                                               25390000
         JOLERR 004,                                                   .25400004
               'DSID ',DDDSID,                                         .25410000
               ' DDNAME ',DDDDNAME,' SYSOUT=',#DSN,' ALLOC '            25420000
.NDUMP   ANOP                                                           25421047
E21RETN  DS    0H                                                       25430000
         TM    DDUNITYP,X'80'                                           25440000
         BZ    E21NPROP       DON'T PROPOGATE VOLUME AS IT MAY          25450000
*                             BE A SCRATCH TAPE (IE NO VOLUME YET)      25460000
         CALL  UJE30VOL       PROPOGATE VOLS DOWN JOL 'JOBQ'            25470000
E21NPROP MVI   E21FLAG,0                                                25480000
         L     R15,TASKRETN                                             25490000
         B     RETRN                                                    25500000
         SPACE 3                                                        25510000
*  IT IS NECESSARY TO LOCATE THE FCT FOR THE DATASET WHOSE NAME IS      25520000
*    IN DDVOLUME, TO FIND THE CURRENT VOLUMES AND COPY THE LIST TO      25530000
*    THE ALLOCATION REQUEST FOR THIS DATASET                            25540000
E21VREF  DS    0H                                                       25550000
         BR    R14             ALREADY DONE                       87150 25551081
         AGO   .X821FCT                                                 25552081
         LR    R10,R14              SAVE RETURN ADDRESS                 25560000
         L     R4,ATCB              ADDRESS MY TCB                      25570000
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB                     25580000
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT                 25590000
         BZ    E21VNFCT              EXIT IF NONE ?!! & SSSSSSSSS       25600000
         SPACE                                                          25610000
*   FOUND THE FCT CHAIN. NOW FIND THE DATASET ENTRY                     25620000
         SPACE                                                          25630000
         USING FCT,R4                                                   25640000
E21VNXTF DS    0H                                                       25650000
         CLC   FCTFLN,DDVOLUME+1   Q... IS THIS IT?                     25660000
         BE    E21VFFCT            A... YES, GO AND GET THE VOLUME INFO 25670000
         SPACE                                                          25680000
         ICM   R4,7,FCTNFCTA         NEXT FCT                           25690000
         BNZ   E21VNXTF              GO AND TEST THE NEXT ONE           25700000
E21VNFCT DS    0H                    END OF CHAIN, AND NOT FOUND        25710000
         JOLERR 507,'DSID ',DDDSID,',DS ',#DSN,                        .25720004
               ' IS NOT ALLOCATED,',' VOLREF COULD NOT BE RESOLVED'     25730000
E21VFFCT DS    0H                                                       25740000
         SPACE 3                                                        25750000
* NOW I HAVE FOUND THE FCT, COPY THE VOLUME SERIAL NUMBERS              25760000
         SPACE 2                                                        25770000
         CLEAR DDVOLUME                                                 25780000
         SLR   R8,R8                                                    25790000
         ICM   R8,1,FCTVOLNO        LOAD VOLUME COUNT                   25800000
         BZ    E21VNFCT             EXIT IF THERE ARE NO VOLUMES        25810000
         LA    R0,L'DDVOLUME/6      LOAD NUMBER OF VOLUMES ALLOWED      25820000
         CR    R0,R8                CHECK THAT THE SERIAL NUMBERS FIT   25830000
         BH    E21VOK               BE IF OK                            25840000
         JOLERR 512,'DS ',DDDSID,',',#DSN,                             .25850004
               ' IS NOT ALLOCATED,',' REFERS TO TOO MANY VOLUMES'       25860000
E21VOK   DS    0H                                                       25870000
         L     R6,FCTVCT                                                25880000
         LA    R15,DDVOLUME         ADDRESS FOR VOLUMES                 25890000
E21VNXTV DS    0H                                                       25900000
         MVC   0(6,R15),8(R6)       COPY THE VOLUME SERIAL NUMBER       25910000
         LA    R15,6(,R15)          ADDRESS FOR NEXT AREA               25920000
         L     R6,4(,R6)            ADDRESS THE NEXT VCT                25930000
         BCT   R8,E21VNXTV          CONTINUE UNTIL ALL AREA DONE        25940000
         SPACE 2                                                        25950000
*  WELL, THAT SHOULD BE ALL: NOW FREE THE ORIGINAL DATASET              25960000
         SPACE                                                          25970000
         MVC   SAVEDDET,DDDSNDET                                        25980000
         MVC   DDDDNAME,FCTACSN                                         25990000
         MVI   DDDISP+1,C'L'      LAST USE                              26000000
         CALL  UJE14FRE           FREE THE FILE, ASSUME IT WORKED       26010000
         MVC   DDDSNDET(256),SAVEDDET RESTORE THE ORIGINAL              26020095
         UJE22UPD FCTFLN,DDVOLUME FIX FUTURE VOLUME REFERENCES          26030000
         DROP  R4                                                       26040000
.X821FCT ANOP                                                           26041020
         SPACE 5                                                        26060000
         DC    20S(*)   FOR PATCHES                                     26070000
TRTAB    DC    256AL1(*-TRTAB) ALL THINGS TO ALL THINGS                 26080000
         ORG   TRTAB                                                    26090000
         DC    64X'40'         FIX THE FIRST ONES                       26100000
         ORG   TRTAB+C'9'+1                                             26110000
         DC    6C' '           AND THE LAST ONES                        26120000
         ORG                                                            26130000
ALLOCREP DC C'   ' FOR ALLOCATION REPLIES                               26140000
ALLOCECB DC  F'0'  FOR ALLOCATION REPLIES                               26150000
*        COPY UJE23RET                                                  26160000
         TITLE 'UJE23RET: HANDLE RETURN INSTRUCTION'                    26170000
           JOLSAVE CSECT=UJE23RET                                 74365 26180000
           L   R7,=A(#TKN)                                              26190000
           USING #TKN,R7                                                26200000
         JOLERR 101,'RETURN ',#TKN,' EXECUTED'              FIX-X 76200 26210004
           L R14,=A(RETURN)                                       74365 26220000
           JOLRETN (15,12),RC=0                                   74365 26230000
         DC  10S(*)                                                     26240000
           SPACE 3                                                75311 26250000
           JOLSAVE CSECT=UJE31OPT                                 75311 26260000
           MVI JOLSVC,X'0A'    SVC INSTRUCTION CODE               75311 26270000
           MVC JOLSVC+1(1),ITEXT+2 SVC NUMBER                     75311 26280000
           JOLRETN  RC=0                                          75311 26290000
         DC  10S(*)                                                     26300000
           LTORG                                                        26310000
         LTORG                                                          26320000
*        COPY UJD30VOL                                                  26330000
         LTORG                                                          26340000
         TITLE 'PROPOGATE VOLUMES IN JOL JOBQ'                          26350000
           JOLSAVE CSECT=UJE30VOL                                 74365 26360000
*        B     E30RETN4       GET OUT FOR NOW                           26370080
* THIS ROUTINE IS CALLED TO FIND THE VOLUME THAT A DATA SET             26390000
*  WAS ALLOCATED ON, AND THEN PROPOGATES THIS INFORMATION               26400000
*  DOWN THE JOL QUEUES. IT ALSO FIXES UP VOLREFS WHEN REQD.             26410000
*                                                                       26420000
* IT IS CALLED LINK  :-                                                 26430000
*                                                                       26440000
*        CALL  UJE30VOL       PROPOGATE VOLS DOWN JOL 'JOBQ'            26450000
*                                                                       26460000
         CLI   DDTYPE,DDPUNCH   Q... SYSIN, SYSOUT OF SOME KIND?        26470000
         BNH   E30RETN4       DON'T PROPOGATE SYSOUT VOLS               26480000
         CLC   =C'*DUMMY ',DDDSNAME                                     26490000
         BE    E30RETN4       DON'T PROPOGATE DUMMY VOLS                26500000
         CLC   =C'NULLFILE ',DDDSNAME                                   26510000
         BE    E30RETN4       DON'T PROPOGATE DUMMY VOLS                26520000
*  AT THIS POINT, UJE49VOL HAS OBTAINED THE VOLUMES FOR THE DSNAME.     26530080
*  NOW, COPY THE VOLUME LIST AS REQUIRED.                               26540080
         SPACE 2                                                        26770000
         UJE22UPD DDDSNAME,JFCBVOLS,DDDDNAME FIX ALL VOLUME REFERENCES  26960085
S30RETN0 DS    0H                                                       26970000
E30RETN0 DS    0H                                                       26980000
           JOLRETN  RC=0                                                26990000
E30RETN4 DS    0H                                                       27000000
           JOLRETN  RC=4                                                27010000
           AGO .X8E30                                                   27010180
*  IT IS NECESSARY TO LOCATE THE FCT FOR THE DATASET WHOSE NAME IS      27011080
*    IN DDDSNDET, TO FIND THE CURRENT VOLUMES AND COPY THE LIST TO      27012080
*    THE ALLOCATION REQUEST FOR THIS DATASET                            27013080
         L     R4,ATCB              ADDRESS MY TCB                      27014080
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB                     27015080
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT                 27016080
         BZ    E30RETN4              EXIT IF NONE ?!! & SSSSSSSSS       27017080
         SPACE                                                          27018080
*   FOUND THE FCT CHAIN. NOW FIND THE DATASET ENTRY                     27019080
         SPACE                                                          27019180
         USING FCT,R4                                                   27019280
E30TNXTF DS    0H                                                       27019380
         CLC   FCTFLN,DDDSNAME     Q... IS THIS IT?                     27019480
         BE    E30TFFCT            A... YES, GO AND GET THE VOLUME INFO 27019580
         SPACE                                                          27019680
         ICM   R4,7,FCTNFCTA         NEXT FCT                           27019780
         BNZ   E30TNXTF              GO AND TEST THE NEXT ONE           27019880
E30TNFCT DS    0H                    END OF CHAIN, AND NOT FOUND        27019980
         JOLERR 301,'DSID ',DDDSID,',DS ',#DSN,                        .27020080
               ' IS NOT ALLOCATED,',' VOLUMES FOR DATA SET IN ERROR'    27020180
         B     E30RETN4       PRESS ON IN ANY CASE                      27020280
E30TFFCT DS    0H                                                       27020380
         SPACE 3                                                        27020480
* NOW I HAVE FOUND THE FCT, COPY THE VOLUME SERIAL NUMBERS              27020580
         SPACE 2                                                        27020680
         CLEAR DDVOLUME                                                 27020780
         SLR   R8,R8                                                    27020880
         ICM   R8,1,FCTVOLNO        LOAD VOLUME COUNT                   27020980
         BZ    E30TNFCT             EXIT IF THERE ARE NO VOLUMES        27021080
         LA    R0,L'DDVOLUME/6      LOAD NUMBER OF VOLUMES ALLOWED      27021180
         CR    R0,R8                CHECK THAT THE SERIAL NUMBERS FIT   27021280
         BH    E30TOK               BE IF OK                            27021380
         JOLERR 509,'DS ',DDDSID,',',#DSN,                             .27021480
               ' IS NOT ALLOCATED,',' REFERS TO TOO MANY VOLUMES'       27021580
E30TOK   DS    0H                                                       27021680
         L     R6,FCTVCT                                                27021780
         LA    R15,DDVOLUME         ADDRESS FOR VOLUMES                 27021880
E30TNXTV DS    0H                                                       27021980
         MVC   0(6,R15),8(R6)       COPY THE VOLUME SERIAL NUMBER       27022080
         LA    R15,6(,R15)          ADDRESS FOR NEXT AREA               27022180
         L     R6,4(,R6)            ADDRESS THE NEXT VCT                27022280
         BCT   R8,E30TNXTV          CONTINUE UNTIL ALL AREA DONE        27022380
         SPACE 2                                                        27022480
         UJE22UPD FCTFLN,DDVOLUME FIX FUTURE VOLUME REFERENCES          27022580
S30RETN0 DS    0H                                                       27022680
E30RETN0 DS    0H                                                       27022780
           JOLRETN  RC=0                                                27022880
E30RETN4 DS    0H                                                       27022980
           JOLRETN  RC=4                                                27023080
.X8E30   ANOP                                                           27023180
         DC  10S(*)                                                     27023280
           LTORG                                                        27030000
*        COPY UJE50RD                                                   27040000
         TITLE 'UJE48TAL: FIND WHETHER A DATASET IS ALLOCATED'          27041033
         JOLSAVE CSECT=UJE48TAL                                         27042033
*        JOLERR 199,'TESTING ALLOCATION FOR ',#DSN                      27043033
         CALL  SRCHQDB,(DDDSNAME,DDDDNAME)                              27044033
         MVC   DDNAME,DDDDNAME                                          27045033
         LTR   R15,R15                                                  27046033
         BZ    RETN0                                              76200 27047033
         GENRETN RC=4                                             76200 27048033
         LTORG                                                          27049033
         TITLE 'UJE49VOL: GET VOLUME INFO FOR A DATASET'                27049133
         JOLSAVE CSECT=UJE49VOL                                         27049233
*        JOLERR 199,'GETTING JFCB FOR ',DDDDNAME                        27049333
         LA    R1,TEMPDCB                                               27049433
         USING IHADCB,R1                                                27049533
         MVC   DCBDDNAM,DDDDNAME                                        27049633
         CLI   DCBDDNAM,C' '                                            27049733
         BNE   E49RDJF                                                  27049833
         CLI   DDVOLUME,C' '                                            27049933
         BNE   RETN0                                                    27050033
         MVC   DDVOLUME,BLANKS                                          27050133
         MVC   DDVOLUME(6),ERETVOL                                      27050233
         MVC   #VOL(8),#ERETVOL                                         27050333
         SR    R15,R15                                                  27050433
         B     RETN0                                              76200 27050533
         DROP  R1                                                       27050633
E49RDJF  RDJFCB TEMPDCB       GET DSNAME                 JOL30116 76200 27050733
         CLC   JFCBFLSQ,=H'0' TEST IF TAPE                        87150 27050833
         BE    E49DISK        YES, SKIP OPEN FOR NEW TAPE         87150 27050933
         CLI   JFCBNVOL,0     ANY VOLUMES ?                       87150 27051033
         BNE   E49DISK        YES, SKIP OPEN FOR NEW TAPE         87150 27051133
* NEW TAPE, NO VOLSER                                                   27051233
         OPEN  (TEMPDCB,OUTPUT) FORCE A TAPE TO BE MOUNTED        87150 27051333
         CLOSE (TEMPDCB)       CLOAE IT NOW                       87150 27051433
         RDJFCB TEMPDCB       GET DSNAME                 JOL30116 76200 27051533
         CLI   JFCBNVOL,0     ANY VOLUMES ?                       87150 27051633
         BNE   RETN0          NO, (HELP? ) LEAVE NOW              87150 27051733
E49DISK  MVC   DDVOLUME(L'JFCBVOLS),JFCBVOLS                            27051833
         BAL   R14,E00FXVOL    SET UP VOLUME LIST IN #VOL         74365 27051933
         AIF   (&X8).NX8320                                      88036  27052033
         LA    R1,DDDDNAME                                              27052133
         CALL  SRCHTIOT                                                 27052233
         LTR   R15,R15                                                  27052333
         BNZ   E49RC0                                                   27052433
         LA    R1,40(R1)       POINT TO UCB POINTER                     27052533
         L     R1,0(R1)        POINT TO UCB PROPER                      27052633
         MVC   DDUNIT,BLANKS   CLEAR DDUNIT                             27052733
         MVC   DDUNIT(3),13(R1) GET UNIT ADDRESS                        27052833
         MVI   DDUNITYP,X'FF'  TELLS US THAT IT IS AN ACTUAL ADDRESS    27052933
.NX8320  ANOP                                                    88036  27053033
E49RC0   CALL  UJE30VOL        PROPOGATE VOLUMES, FIX VOLREFS           27053133
*49RC0   SR    R15,R15                                                  27053233
         B     RETN0                                              76200 27053333
           TITLE 'UJE50RD:READ A STATEMENT FROM JOL INSTRUCT FILE'      27053433
           JOLSAVE CSECT=UJE50RD                                        27060000
* THIS CSECT IS CALLED WHEN A NEW INSTRUCTION HAS TO BE                 27070000
*    READ FROM THE INSTRUCT FILE.                                       27080000
           MVC #VOL,=H'0'     STOP SPURIOUS 0C4                  75311  27090000
           CLC TTR$INST,=A(0)  FIRST TIME IN,I.E. WE HAVEN'T            27100000
*                              EVEN REALLY STARTED YET ?                27110000
           BNE E50NOTF                                                  27120000
           MVC RUNNAME,=CL8'$$INST'                                     27130000
         BLDL INSTRUCT,RUNBLDL                                          27140035
           B   E5002R(R15)                                              27150000
E5002R     B   E50GOTIT                                                 27160000
           B   E5002R4                                                  27170000
           B   E5002R8                                                  27180000
E5002R4    JOLERR 501,'MEMBER $$INST ABSENT'                            27190004
E5002R8    JOLERR 502,'I/O ERROR READING DIRECTORY'                     27200004
           DS 0D                                                        27210000
E50GOTIT DS    0H                                                       27220000
         MVC TTR$INST,RUNTTRK                                           27230000
         MVI TTR$INST+3,0     SET Z=0 FIRST                             27240000
         FIND  INSTRUCT,TTR$INST,C                                      27250000
         B     E50RD                                                    27260000
E50NOTF  DS    0H                                                       27270000
*        POINT INSTRUCT,TTR$INST                                        27280000
E50RD    DS    0H                                                       27290000
           MVC INSTRUCT+33(3),=AL3(EOF)                                 27300000
           L  R15,=A(#TKNSTRG)                                          27310000
           USING  #TKNSTRG,R15                                          27320000
           CLEAR TKNSTRG                                                27330000
           DROP  R15                                                    27340000
           L  R2,=A(INSTRDA)                                            27350000
           USING    INSTRDA,R2                                          27360000
           READ E50DECB,SF,INSTRUCT,(R2)                                27370000
           CHECK E50DECB                                                27380000
* IF EOF WOULD HAVE GONE ELSE-WHERE                                     27390000
*******************************************************************DASD 27400000
*   THIS CALL TO MODULE $$JOLBUG WILL PRINT THE INSTRUCTION        DASD 27410000
*   JUST READ TO DDNAME '$JOL$BUG$' IF IT'S PRESENT                DASD 27420000
*   -----MAYBE A GOOD TRACE FACILITY----                           DASD 27430000
*   YOU MIGHT DO A JOLOPT CARD1='//JOLBUG DD SYSOUT=A'             DASD 27440000
*   IN THE COMPILE TO GET THIS DD IN EVERY STEP                    DASD 27450000
****************************************************02-23-78*******DASD 27460000
      CALL   $$JOLBUG,((2))     CALL PRINT MODULE                  DASD 27470000
           DROP  R2                                                     27480000
           SPACE 3                                                      27490000
           L   R7,=A(#TKN)                                              27500000
           USING #TKN,R7                                                27510000
*          NOTE INSTRUCT                                                27520000
*          ST  R1,TTR$INST                                              27530000
*          MVI TTR$INST+3,1    SET Z TO 1 SO NEXT READ GETS NEW BLK     27540000
           MVC INST(IBODY),INSTRDA                                      27550000
           MVC DDDSNDET(256),INSTRDA                                    27560095
           MVC STMT,ISTMT                                               27570000
           MVC GOTOLAB,=CL8'$$'                                         27580000
           CLI DDDD1,C'E'      EXEC PGM ?                               27590000
           BNE E50TDD                                                   27600000
         MVC ICOMMAND,=CL8'RUN'                                         27610000
         MVC STMT,PGMESTMT                                              27620000
         MVC GOTOLAB,PGMSTEP SHIFT STEPNAME FOR 'REAL' STEPNAME 75311   27630000
         JOLRETN                                                        27640000
E50TDD   DS     0H                                                      27650000
         CLI DDDD1,C'D'      DD-CARD TYPE ENTRY?                        27660000
         BNE ISALABEL                                                   27670000
*      IF TEMPORARY DSN, USE OUR TEMPORARY DSNAME AS THERE ARE          27671066
*      SOME PROBLEMS WITH SVC 99 DELETING TEMPORARIES BEFORE            27672066
*      IT SHOULD                                                        27673066
         CLI   DDDSNAME,C'&&'   TEMPORARY DSNAME?                       27674066
         BNE   E20NTEMP         NO.                                     27675078
         LH    R15,#TEMPDSN     GET LENGTH OF OUR TEMP DSN              27676066
         LA    R15,TEMPDSN(R15) POINT TO SPOT TO MOVE &&DSN             27677076
         MVI   0(R15),C'.'                                              27677177
         CLI   DDDSNAME+1,C'&&' DOUBLE & CODED ?                        27678066
         BNE   E20ONEA                                                  27679066
         MVC   1(8,R15),DDDSNAME+2 DROP 2ND                             27679177
         B     E20TEMPF        TEMPORARY IS FIXED                       27679266
E20ONEA  MVC   1(8,R15),DDDSNAME+1 SET UP REAL DSNAME                   27679377
E20TEMPF MVC   DDDSNAME,TEMPDSN                                         27679476
E20NTEMP DS    0H                                                       27679578
* NOW FOR DD-CARD TYPE ENTRIES,WE DON'T SPLIT INTO TOKENS.              27680000
* SET UP SHORT DSNAME FOR ERROR MESSAGES                                27690000
         MVC DSNAME,DDDSNAME                                            27700000
         LA  R15,L'DDDSNAME-1                                           27710000
E50TEDSN DS    0H                                                       27720000
         LA  R14,DDDSNAME(R15)                                          27730000
         CLI 0(R14),C' '                                                27740000
         BNE E50DSNOK                                                   27750000
         BCT R15,E50TEDSN                                               27760000
E50DSNOK DS    0H                                                       27770000
         LA    R15,1(R15)                                               27780000
         STH   R15,#DSN                                                 27790000
         MVC   STMT,DDSTMT     SAVE IN CASE OF ERRORS                   27800016
         CLI   DDDDNAME,C'%'   CATLG, DELETE ETC INSTRUCTION?           27800116
         BNE   E50LEAVS        LEAVE STATEMENT NUMBER                   27800216
         MVC   STMT,DDDDNAME+2 CATLG STAT NUMBERS ARE DIFFERENT !       27801016
E50LEAVS MVC   GOTOLAB(2),=C'$$'                                        27810016
         MVC   GOTOLAB+2(6),DDDDNAME+2                                  27820000
         MVC   #TKN,=H'8'                                               27830000
         MVC   TKN(8),BLANKS                                            27840000
         MVC   TKN(1),DDDDNAME+1                                        27850000
         MVC   ICOMMAND,TKN                                             27860000
         CLI   DDDDNAME,C'%'                                            27870000
         BE    E50RETN0                                                 27880000
         MVI   TKN,C'F'     INDICATE FREE COMMAND                       27890000
         MVI   ICOMMAND,C'F'                                            27900000
E50RETN0 DS    0H                                                       27910000
         JOLRETN                                                        27920000
ISALABEL DS    0H                                                       27930000
         CLC   INST,=AL2(IBODY+1)                                       27940000
         BH    E50SPLIT                                                 27950000
         L     R15,=A(#TKNSTRG)                                         27960000
         USING #TKNSTRG,R15                                             27970000
         XC    #TKNSTRG,#TKNSTRG                                        27980000
         DROP  R15                                                      27990000
E50SPLIT DS    0H                                                       28000000
* THE DOUBLE QUOTE ROUTINE IN THE COMPILER NOW REMOVES            76200 28010000
* ALL QUOTES FROM THE STRING, AND THEREFORE IF                    76200 28020000
* SOMEONE HAS QUOTES IN A STRING FOR A PARM, THERE                76200 28030000
* WILL NOW ONLY BE ONE. THIS CAUSES ALL SORTS OF                  76200 28040000
* PROBLEMS WHEN THE TOKEN SPLITTER GETS IT.                       76200 28050000
         CLC   ICOMMAND,=CL8'PARM' PARM?                          76200 28060000
         BNE   E50SPL2                                            76200 28070000
         JOLRETN RC=0                                             76200 28080000
E50SPL2  DS    0H                                                 76200 28090000
           CALL UJCTKN,TKNX                                             28100000
*           B *+4                                                  DASD 28110000
*           B *+4                                                  DASD 28120000
*           LTR R15,R15                                            DASD 28130000
*           BZ  GOTINSTR                                           DASD 28140000
            B  *+4(R15)                                            DASD 28150000
            B  GOTINSTR  SUPER INSTRUCTION IS CLEAN                DASD 28160000
            B  E50BINST  STMT > 1000 BYTES   CANN"T HANDLE THIS    DASD 28170000
            B  GOTINSTR  TOO MANY TOKENS > 150                     DASD 28180000
            B  GOTINSTR  TOKEN > 120 BYTES                         DASD 28190000
            B  GOTINSTR  NO ENDING QUOTE                           DASD 28200000
E50BINST   JOLERR 503,'ERROR IN INSTRUCTION'                       DASD 28210004
GOTINSTR DS    0H                                                       28220000
           GETTKN 1                                                     28230000
           JOLRETN                                                      28240000
EOF        JOLRETN RC=4                                                 28250000
         DC    80S(*)                                                   28260000
          LTORG                                                         28270000
*        COPY UJD94CLN                                                  28280000
.X8400   ANOP                                                           28290000
         TITLE 'UJE94CLN:CLEANUP ROUTINE'                               28300000
         JOLSAVE CSECT=UJE94CLN                                         28310000
         MVC   STMT,=C'99999'                                           28320000
*        JOLERR 102,'CLEAN UP CALLED'                                   28330004
         JOLRETN                                                        28340000
         AGO   .NCLN                                                    28341047
E94#010  DS    0H                                                       28350000
         L     R4,ATCB      TCB ADDRESS                                 28360000
         L     R4,TCBJSCB-TCB(,R4)  ADDRESS MY JSCB                     28370000
         ICM   R4,7,JSCBFCTA-JSCB(R4)                                   28380000
         BZ    E94DONE                                                  28390000
         USING FCT,R4                                                   28400000
         SPACE 2                                                        28410000
*  FOUND THE START OF THE FCT CHAIN: NOW SCAN CHAIN FOR A FILE TO FREE  28420000
         SPACE 2                                                        28430000
E94NXTF  DS    0H                                                       28440000
         CLC   =C'$JOL',FCTACSN  Q... ONE I MARKED?                     28450000
         BNE   E94NXTF1          A... NO                                28460000
         BAL   R14,E94FREE                                              28470000
         B     E94#010                                                  28480000
E94NXTF1 DS    0H                                                       28490000
         ICM   R4,7,FCTNFCTA   ADDRESS THE NEXT                         28500000
         BNZ   E94NXTF                                                  28510000
E94DONE  DS    0H                                                       28520000
         B     RETN0                                                    28530000
         SPACE 4                                                        28540000
E94FREE  DS    0H                                                       28550000
         ST    R14,CALLAREA+12                                          28560000
         XC    CALLAREA(12),CALLAREA                                    28570000
         MVI   CALLAREA,C'F'   FREE FILE                                28580000
         MVI   CALLAREA+1,12   TABLE SIZE                               28590000
         MVC   CALLAREA+4(8),FCTACSN ACCESS NAME                        28600000
         MVC   STEPLBDD,FCTACSN FOR MESSAGES B LOW                      28610000
         FREEFL MF=(E,CALLAREA)                                         28620000
         LTR   R1,R15                                                   28630000
         BZ    E94FREE5                                                 28640000
         CVD   R15,DBL                                                  28650000
*        CALL  UJS46FER                                                 28660027
         MVC   TASKSSI(4),=X'40202120'                                  28670000
         ED    TASKSSI,DBL+6                                            28680000
         JOLERR 102,'DDNAME ',                                         .28690004
               STEPLBDD,' NOT UNALLOCATED DUE TO RETURN CODE',         .28700000
               TASKSSI                                                  28710000
         B     E94FREE9                                                 28720000
E94FREE5 DS    0H                                                       28730000
         JOLERR 001,'DDNAME ',                                         .28740004
               STEPLBDD,' UNALLOCATED'                                  28750000
E94FREE9 DS    0H                  RETURN                               28760000
         L     R14,CALLAREA+12                                          28770000
         BR    R14                                                      28780000
.NCLN    ANOP                                                           28781047
         LTORG                                                          28781147
         SPACE  3                                                       28782047
         TITLE 'SPACE UP LISTING FILE'                                  28783047
         JOLSAVE CSECT=UJE97SPC                                         28790000
         TM    PRINT+48,X'10'                                           28800000
         BZ    E97RET                                                   28810000
         WRITE E97DECB,SF,PRINT,E97SPC                                  28820000
         CHECK E97DECB                                                  28830000
E97RET   JOLRETN                                                        28840000
E97SPC   DC   AL2(L'E97SPCC+8,0)                                        28850000
         DC   AL2(L'E97SPCC+4,0)                                        28860000
E97SPCC  DC   C'                    '                                   28870000
         LTORG                                                          28890000
*        PRINT OFF                                                      28900000
         TITLE 'UJE98INI:INITIALISATION ROUTINES'                       28910000
         JOLSAVE CSECT=UJE98INI                                         28920000
* THIS CSECT IS CALLED IMMEDIATELY AFTER THE JOL SCHEDULER GETS CONTROL 28930000
*    AND IT OPENS THE FILES ETC                                         28940000
* SECOND DETERMINE WHETHER WE ARE RUNNING UNDER 'HASP' OR 'OS'          28950000
*    IF THERE IS A DD-CARD FOR '$$PRINT' THEN THE SYSOUT FILE           28960000
*    ASSOCIATED WITH THAT FILE WILL BE USED SIMILIARLY TO THE           28970000
*    'HASP' SYSTEM LOG,I.E ALL COMMENTS WILL GO OUT TO IT.              28980000
         SPACE 3                                                        28990000
* NOTE *** UNDER VS, WE ATTACH RATHER THAN XCTL TO THE USER PROGRAM     29000000
*     AS WE SAVE TIME THEN BY NOT CLOSING AND RE-OPENING OUR FILES.     29010000
*     SO, LET'S SEE IF THEY ARE OPEN, AS TO OPEN AGAIN WOULD DEFEAT     29020000
*     THE WHOLE EXERCISE, WOULDN'T IT?                                  29030000
         SPACE 1                                                        29040000
         TM INSTRUCT+48,X'10'                                     74365 29050000
         BO  SCHEDGO                                              74365 29060000
         SPACE 1                                                        29070000
         MVC STMT,=CL4'   0'                                            29080000
&C1      SETC  (1-&X8)'AQMRAW'                                          29090000
&C2      SETC  (1-&X8)'IBMRTN'                                          29100000
&C3      SETC  (1-&X8)'JOBQ'                                            29110000
&C4      SETC  (1-&X8)'JCTTTR'                                          29120000
         CALL  UJE70OPN,(&C1,&C2,INSTRUCT,PRINT,RETN,&C3,         ******29130000
               &C4,VS,ATCB),MF=(E,CALLAREA)                       ***** 29140000
*** ABOVE OPENS REQUIRED FILES, AND :-                            ***** 29150000
*    1. SETS 'JCTTTR' TO CORE ADDRESS, OR TTR ON JOBQ.            ***** 29160000
*    2. LOADS (MAYBE) AN IBM ROUTINE TO ACCESS JOBQ.              ***** 29170000
*    3. OPENS 'INSTRUCT'                                          ***** 29180000
*    4. OPENS 'PRINT' IF $$PRNT DD CARD PRESENT                   ***** 29190000
*    5. OPENS 'JOBQ'  IF $$JOBQ DD CARD PRESENT AND ^MFT |MVT|MVS ***** 29200000
*    6. SETS 'VS' TO ' ' | '1' | '2' | 'M'                        ***** 29210000
*    7. SETS 'ATCB' = A(OUR TCB)                                  ***** 29220000
           SPACE 3                                                ***** 29230000
         AIF   (NOT &X8).NX8350                                  88036  29231031
         L     R4,ATCB               ADDRESS MY TCB                     29240000
         L     R14,TCBJSCB-TCB(,R4)           MY JSCB                   29250011
         ICM   R14,7,JSCBCSCA-JSCB(R14)       MY CSCB                   29260011
         MVC   JBNAME,CSCBUJNM-CSCB(R14)      COPY JOB NAME IN          29270011
         AGO   .X8410                                            88036  29270113
.NX8350  ANOP                                                    88036  29270331
         EXTRACT CALLAREA+12,'S',FIELDS=(TIOT),MF=(E,CALLAREA)    87150 29271022
         L     R1,CALLAREA+12  GET RETURN FROM EXTRACT            87150 29272022
         MVC   JCTJNAME,0(R1)  SHIFT JOBNAME IN FOR MESSAGES      87150 29273022
.X8410   ANOP                                                    88036  29274013
SCHEDGO  DS    0H                                                       29280000
         CALL  UJE97SPC                SPACE UP PRINTING A BIT          29290000
         L     R1,ATASKPRM      CLEAR USER'S PARM                       29300000
         XC    0(2,R1),0(R1)                                            29310000
       SPACE                                                            29320000
* NOW CHECK THAT THE INSTRUCT AND RETNCODE FILES ARE OPEN               29330000
         SR    R8,R8                                                    29340000
         TM    INSTRUCT+48,X'10'                                        29350000
         BO    FILE1OK                                                  29360000
         LA    R8,1                                                     29370000
         JOLERR 501,'NO DD CARD FOR $$INST'                             29380004
FILE1OK  DS    0H                                                 75128 29390000
         AGO .SKIP99                                                    29400000
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB                     29410000
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT                 29420000
         BZ    E98NOFCT              EXIT IF NONE ?!! & SSSSSSSSS       29430000
         SPACE                                                          29440000
*   FOUND THE FCT CHAIN. NOW FIND A DATASET ENTRY                       29450000
.SKIP99  ANOP                                                           29451066
         SPACE                                                          29460000
         MVC   DDDDNAME,=CL8'&DDINST'                                   29470066
         MVI   DDVOLUME,C' '         OTHER UJE49 WON'T DO MUCH          29470170
         CALL  UJE49VOL                                                 29471066
         MVC   SYSINVOL,JFCBVOLS     COPY THE VOLUME SERIAL NUMBER      29480000
         MVC   DDDSNAME,SYSINDSN                                        29481072
&C       SETC  (&X8)'=CL8''DA'''.(1-&X8)'DDUNIT'                 88036  29482025
         MVC   SYSINUNI,&C           COPY THE UNIT TOO (49 GETS IT)     29490024
         MVC   SYSINDSN,JFCBDSNM                                        29491072
         ZAP   DDCTR,=P'0'           INITIALISE DD COUNTER              29500000
         SPACE 2                                                        29510000
         $FIND INSTRUCT,MBRRETN,D                                       29520035
         B     E98INITR(R15)                                            29530000
E98INITR B     E98GOTMB                                                 29540000
         B     E98FIND4                                                 29550000
         B     E98FIND8                                                 29560000
MBRRETN  DC    CL8'$$RETN'                                              29570000
         SPACE 3                                                        29580000
E98FIND8 JOLERR 504,'I/O ERROR READING DIRECTORY'                       29590004
         SPACE 3                                                        29600000
E98FIND4 DS    0H                                                       29610000
* THE $$RETN MEMBER HASN'T BEEN SET UP APPARENTLY                       29620000
         JOLERR 109,'JOL UNIVERSAL COMMAND LANGUAGE (DYNAMIC ALLOCATION+29630017
                OPTION)'                                                29640026
         JOLERR 110,'VERSION 4.0A (DATE COMPILED &SYSDATE. TIME &SYSTIM*29650066
               E.)'                                                     29651066
         CALL  UJE97SPC                SPACE UP PRINTING A BIT          29660000
         LA    R0,READAREA                                              29670000
         L     R1,=A(L'READAREA)                                        29680000
         SLR   R15,R15        ZEROES TO ALL THE AREA                    29690000
         MVCL  R0,R14                                                   29700000
         MVI     COND,C' ' CLEAR COND TO BLANKS                    DASD 29710015
         MVC     COND+1(L'COND-1),COND                             DASD 29720015
         WRITE E98DEC9,SF,RETN,READAREA,'S'                             29730015
         CHECK E98DEC9                                                  29740015
         NOTE RETN                                                      29750015
         ST    R1,TTR$RETN                                              29760015
         STOW RETN,STOWBLK,A                                            29770015
         LTR   R15,R15                                                  29780015
         BZ    E98RDJCT                                                 29790015
         JOLERR 502                                                     29800015
         FIX ' THAT WAS JOLERR 503'                              88036  29801015
E98GOTMB DS    0H                                                       29810000
* WE HAVE NOW FOUND THE $$RETN MEMBER OF THE DATA SET                   29820000
         LH R2,INSTRUCT+X'3E'                                           29830035
         MVC   INSTRUCT+X'3E',=Y(&RETNSIZ)                         DASD 29840035
         READ E98DECBX,SF,INSTRUCT,RETNAREA                             29850035
         CHECK E98DECBX                                                 29860035
         STH   R2,INSTRUCT+X'3E'                                        29870035
         NOTE INSTRUCT                                                  29880035
         ST    R1,TTR$RETN     FOR REWRITING                            29890035
* FIND OUT HOW MUCH DATA WE READ (ALSO USED FOR REWRITING)              29900035
         L  R1,E98DECBX+16     IOB ADDRESS                              29910035
         LH R14,INSTRUCT+X'3E'  BLOCKSIZE                               29920035
         SH R14,14(R1)  MINUS RESIDUAL COUNT                            29930035
         STH   R14,RETNBLKS    LENGTH OF RETN BLOCK                     29940035
           SPACE 3                                                      29950000
           MVC STMT,DBL                                                 29960000
         POINT INSTRUCT,TTR$INST                                        29970000
E98RDJCT DS    0H                                                       29980000
           AIF   (&X8).X8420                                            29990000
           SPACE 3                                                      30000000
* BETTER SET UP THE JOBNAME ETC                                         30010000
           LA  R4,CALLAREA                                              30020000
           EXTRACT (4),'S',FIELDS=(TIOT)                                30030000
           L   R1,CALLAREA                                              30040000
           ST  R1,ATIOT        SAVE ADDRESS OF TIOT                     30050000
* NOW READ IN JCT AND SCT                                               30060000
.X8420     ANOP                                                         30070000
           SPACE 6                                                      30080000
           CLI TASKIND,C' '    IS THIS THE FIRST TIME I'VE BEEN CALLED  30090000
*                              THIS OS STEP ?                           30100000
           BE  E98RETNX        YES,SO NOW FILES ETC INITIALISED,GO BACK 30110000
*                              TO THE MAIN-LINE LIKE A GOOD BOY.        30120000
           SPACE 3                                                      30130000
* THE SCHEDULER HAS BEEN RE-ATTACHED AFTER AN XCTL TO A PROBLEM         30140000
*    PROGRAM. THEREFORE WE MUST DO NICE THINGS LIKE PRINT OUT           30150000
*    THE RETURN CODES ETC,                                              30160000
* WE HAD BETTER STORE ITS RETURN CODE IN THE TABLE ANYWAY               30170000
           LH R1,NOIDS                                                  30180000
           MH R1,=H'18'                                                 30190000
           LA R1,IDSTART(R1)                                            30200000
           USING IDOVLY,R1                                              30210000
           MVC IDRETN,TASKRETN                                          30220000
           MVI IDRETN,0        TURN OFF HIGH ORDER BITS FOR COMPARISONS 30230000
*                              IN THE 'IF' STATEMENT LATER              30240000
******* MORE FOR  MAXCC,LASTCC   SEPT 75                                30250000
         TM    TASKRETN,X'80'   DID AN ABEND OCCUR?      CHG26028 76200 30260000
         BO    E98LMAX        YES, SO LEAVE LASTCC AND MACHG26028 76200 30270000
         MVC   LASTCC,IDRETN   LASTCC DONE                              30280049
         CLC   MAXCC,LASTCC                                             30290000
         BH    E98LMAX                                                  30300000
         MVC   MAXCC,LASTCC   MAXCC DONE                                30310000
         DROP  R1                                                       30320000
E98LMAX  UNPK  CALLAREA(9),TASKSSI(5)                                   30330000
         TR    CALLAREA(8),HEX                                          30340000
         MVC   ENDMSSI,CALLAREA 3(5)                                    30350000
*        OI    ENDMSSI+7,X'F0'                                          30360000
* NOW SEE IF TASK ABENDED OR RETURNED PROPERLY.                         30370000
         TM    TASKRETN,X'80'                  ABEND ?                  30380000
         BZ    NOTABND                                                  30390000
         MVI   ERRORIND,1     TURN ON ABEND INDICATOR    CHG26028 76200 30400000
* WAS IT A USER ABEND OR A SYSTEM ABEND ?                               30410000
         L     R1,TASKRETN                                              30420000
         N     R1,=X'00FFF000'                                          30430000
         BZ    USERABND                                                 30440000
         UNPK  CALLAREA(9),TASKRETN(5)                                  30450000
         TR    CALLAREA(8),HEX                                          30460000
         MVC   ENDMRETC(4),CALLAREA+1                                   30470000
         MVC   ENDMRETC+5(3),CALLAREA+5                                 30480000
         MVI   ENDMRETC,C'S'                                            30490000
         MVI   ENDMRETC+4,C'-'                                          30500000
         JOLERR 307,'STEP ',TASKLABL,' LM ',TASKNAME,             87150*30510015
               ' SYSTEM ABEND ',ENDRETC,' (SSI=',ENDSSI,')'             30520017
E98CLRAB CLEAR TASKRETN    CLEAR ABEND                   CHG26028 76200 30530000
*        B     E20R16       TAKE BRANCH TO COND CODE TERMINATE   C DASD 30540000
         B     E98RETN0                                          A DASD 30550000
           SPACE 3                                                      30560000
NOTABND    XC TASKRETN(2),TASKRETN                                      30570000
USERABND DS    0H                                                       30580000
         L   R0,=X'0000FFFF'  IF NEGATIVE NUMBER LETS SHOW IT      DASD 30590000
         N   R0,TASKRETN                                                30600000
         CVD R0,DBL                                                     30610000
         OI  DBL+7,X'0F'                                           DASD 30620000
         UNPK ENDRETB,DBL                                          DASD 30630000
         CLI ENDRETB,C'0'                                          DASD 30640000
         BNE ENDMSSOK  ITS A BIG ONE                               DASD 30650000
         MVI ENDRETB,C' '  PRINT AS BEFORE (4 BYTE RETN CODE)      DASD 30660000
ENDMSSOK DS    0H                                                       30670000
         TM  TASKRETN,X'80'  ABEND ?                                    30680000
         BO  E98TYPER                                                   30690000
         JOLERR 105,'STEP ',TASKLABL,' LM ',TASKNAME,             87150*30700017
               ' RETURNED ',ENDRETB,' (SSI=',ENDSSI,')'           87150 30710017
         CALL  UJE98TCN        TEST JOB CONDITION CODES (STOPWHEN)87150 30711033
         LTR   R15,R15         DO WE HAVE TO STOP THE JOB ?       87150 30712033
         BZ    E98RETN0        NO, JUST NORMAL RETURN             87150 30713033
         JOLRETN RC=4000                                          87150 30714033
         AIF   (&X8).X8440                                              30720000
*                                                                 76200 30730000
* TO HANDLE THE STOP WHEN, WE MUST EXAMINE THE JCT JOB TERMINATION76200 30740000
* INDICATORS, AND COMPARE THIS RETURN CODE AND IF NECESSARY,      76200 30750000
* TERMINATE THE RUN.                                              76200 30760000
*                                                                 76200 30770000
* WE HAVE RESERVED TO US 1 JOB COND OF 'EQ,4000', AND SO WE CAN   76200 30780000
* FLUSH THE JOB BY SETTING 4000 ANY TIME WE WISH.                 76200 30790000
*                                                                 76200 30800000
*                                                                 76200 30810000
         LA    R1,JCTJDPCD                                        76200 30820000
         LA    R15,JCTJDPCD+4+28-1 END LOOP INDIC                 76200 30830000
         LA    R14,4               LENGTH OF TABLE                76200 30840000
E98DEPL  CLI   2(R1),0       ANY COND (END LOOP)            76200       30850000
         BE    E98RETN0            END -> RETURN                  76200 30860000
         IC    R6,2(R1)            GET DEPENDENCY CODE AND        76200 30870000
*                                  GET REDY FOR EXECUTE           76200 30880000
         CLC   0(2,R1),TASKRETN+2 COMPARE                        76200  30890000
         EX    R6,E98GO40          BRANCH IF TRUE                 76200 30900000
         BXLE  R1,R14,E98DEPL      LOOP THEN ...                  76200 30910000
.X8440   ANOP                                                           30920000
         B     E98RETN0                                           76200 30930000
         AIF   (&X8).X8460                                              30940000
E98GO40  BC    0,E98R16       EXECUTED  *****                     76200 30950000
E98R16   DS    0H                                                       30960000
E20R16   DS    0H                                                       30970000
* DUE TO USING MVS MACRO, MUST MOVE JOBNAME BEFORE 'JOLERRINR'          30980000
            MVC  TASKLABL,JCTJNAME                                      30990000
         JOLERR 408,'JOB ',TASKLABL,                                   *31000015
               ' TERMINATED DUE TO CONDITION CODES'                     31010000
           B   E98RET4K                                                 31020000
.X8460   ANOP                                                           31030000
         FIX   '"STOP WHEN ANY" NEEDS TO BE HANDLED: I SUGGEST PASSING .31040000
               THE INFO FROM THE COMPILER AS FIRST INSTRUCTION'         31050000
E98TYPER JOLERR 306,'STEP ',TASKLABL,' LM ',TASKNAME,             87150*31060015
               ' USER ABEND ',ENDRETB,' (SSI=',ENDSSI,')'               31071017
         B     E98CLRAB                                  CHG26028 76200 31080000
E98RET4K  DS    0H                                                      31090000
           XC TASKRETN(2),TASKRETN                                      31100000
* THE NEXT MVC WILL STOP MVS FROM RUNNING AFTER A ABEND            DASD 31110000
* THIS PROBLEM IS BEING WORKED ON AS OF 4/1/77                     DASD 31120000
* SORRY ABOUT THE "IF ERROR LOGIC"                                 DASD 31130000
*          MVC TASKRETN(4),=F'&RSVDRC'                             DASD 31140000
* THIS PROBLEM IS NOW FIXED IN THE MONTOR AS OF 7/10/77            DASD 31150000
           MVI TASKIND,C'1'                                             31160000
           JOLRETN RC=&RSVDRC                                           31170000
E98RETN0 DS    0H                                                       31180000
         CALL  UJE97SPC                SPACE UP PRINTING A BIT          31190000
         CALL  GETTIME                                                  31200000
         MVC   D98DETME,CURRTIME                                        31210000
         WRITE D981DECB,SF,PRINT,D98HEAD1 WRITE THE DEALLOCN HEADER     31220000
         CHECK D981DECB                   WAIT TILL IT GOES             31230000
         CALL  UJE97SPC                SPACE UP PRINTING A BIT          31240000
         MVC   D98DETM2,CURRTIME                                        31250000
         WRITE D982DECB,SF,PRINT,D98HEAD2 WRITE THE DEALLOCN HEADER     31260000
         CHECK D982DECB                   WAIT TILL IT GOES             31270000
E98RETNX DS    0H                                                       31280000
           MVI TASKIND,C'1'                                             31290000
           JOLRETN                                                      31300000
STOWBLK    DC  CL8'$$RETN'                                              31310000
STOWTTR    DC  XL3'00'                                                  31320000
STOWC      DC  X'00'                                                    31330000
           DS CL50                                                      31340000
ENDSSI     DS 0CL8                                                      31350000
ENDMSSI    DS  CL8                                                      31360000
ENDRETB    DS 0CL5            FOR MINUS RETURN CODES               DASD 31370000
ENDRETC    DS 0CL8                                                      31380000
ENDMRETC   DS CL8                                                       31390000
           DS H                                                         31400000
* THE FOLLOWING LINES ARE USED TO PRINT OUT DE-ALLOCATION MESSAGES      31410000
*     FOR THE DYNAMIC ALLOCATION VERSION OF JOL.                        31420000
D98HEAD1 DC    AL2(D98END1-*,0)                                         31430000
         DC    AL2(D98END1-*,0),C' '                                    31440032
D98DETME DC    CL8' '                  TIME GOES HERE                   31450000
         DC    C' DEALLOCATION '                                        31460000
D98END1  DS    0H                                                       31470000
          SPACE                                                         31480000
D98HEAD2 DC    AL2(D98END2-*,0)                                         31490000
         DC    AL2(D98END2-*,0),C' '                                    31500032
D98DETM2 DC    CL8' '                  TIME GOES HERE                   31510000
         DC    C' --DSID--  -DDNAME-   -ACTION'                         31520000
D98END2  DS    0H                                                       31530000
          SPACE                                                         31540000
         DC     80S(*)                                                  31550000
         LTORG                                                          31560000
         JOLSAVE CSECT=UJE98TCN                                         31561033
* THIS CSECT CHECKS THE JOB CONDITION CODES, AND ABORTS IF              31562033
*      NECESSARY.                                                       31563033
* TO HANDLE THE STOP WHEN, WE MUST EXAMINE THE JCT JOB TERMINATION76200 31564033
* INDICATORS, AND COMPARE THIS RETURN CODE AND IF NECESSARY,      76200 31565033
* TERMINATE THE RUN.                                              76200 31566033
*                                                                 76200 31567033
* WE HAVE RESERVED TO US 1 JOB COND OF 'EQ,4000', AND SO WE CAN   76200 31568033
* FLUSH THE JOB BY SETTING 4000 ANY TIME WE WISH.                 76200 31569033
*                                                                 76200 31569133
*                                                                 76200 31569233
         MVC   LASTCC,TASKRETN    SET LASTCC                            31569333
         CLC   MAXCC,LASTCC                                             31569433
         BH    E98LMAX2                                                 31569549
         MVC   MAXCC,LASTCC       MAXCC DONE                            31569633
E98LMAX2 CLC   #WHEN,=H'0'        ANY STOP WHEN CODED?                  31569749
         BNE   E98DOWHN           YES, SO ANALYSE IT.                   31569847
         CLC   MAXCC,=H'3999'                                           31569949
         BH    E98TERM         TERMINATE                                31570049
         CLC   MAXCC,=H'16'                                             31570149
         BE    E98TERM         TERMINATE                                31570247
         JOLRETN                                                        31570347
* HERE,  SPLIT  STOPWHEN AND CALL THE 'IF' PROCESSOR.                   31570447
E98DOWHN L    R15,=A(#TKNSTRG)                                          31571454
         USING  #TKNSTRG,R15                                            31571554
         MVC   #TKNSTRG(255),#WHEN                                      31571754
         DROP  R15                                                      31571854
         CALL  UJCTKN,TKNX                                              31571954
         LTR   15,R15                                                   31572254
         BZ    E98INSTR  SUPER INSTRUCTION IS CLEAN                     31572354
         CH    R15,=H'4'                                                31572454
         BE    E98ERRIN  STMT > 1000 BYTES   CANN"T HANDLE THIS         31572554
         B     E98INSTR  TOO MANY TOKENS > 150                          31572654
         B     E98INSTR  TOKEN > 120 BYTES                              31572754
         B     E98INSTR  NO ENDING QUOTE                                31572854
E98ERRIN JOLERR 503,'ERROR IN INSTRUCTION'                              31572954
E98INSTR DS    0H                                                       31573054
         $CALL UJE04IF                                                  31573156
         LTR   R15,R15                                                  31573254
         BZ    E98TERM         TRUE STATEMENT, SO TERMINATE             31573354
         JOLRETN                                                        31573454
         AGO   .NOJCT                                             87150 31573554
E98TJCT  LA    R1,JCTJDPCD                                        76200 31573654
         LA    R15,JCTJDPCD+4+28-1 END LOOP INDIC                 76200 31573754
         LA    R14,4               LENGTH OF TABLE                76200 31573854
E99DEPL  CLI   2(R1),0       ANY COND (END LOOP)                  76200 31573954
         BE    E99RETNZ            END -> RETURN                  86211 31574054
         IC    R6,2(R1)            GET DEPENDENCY CODE AND        76200 31574154
*                                  GET REDY FOR EXECUTE           76200 31574254
         CLC   0(2,R1),TASKRETN+2 COMPARE                         76200 31574354
         EX    R6,E99GO40          BRANCH IF TRUE                 76200 31574454
         BXLE  R1,R14,E99DEPL      LOOP THEN ...                  76200 31574554
         B     E99RETNZ                                           86211 31574654
E99GO40  BC    0,E99R16       EXECUTED  *****                     76200 31574711
E99R16     EQU  *                                                       31574811
*E20R16     EQU  *                                                      31574911
.NOJCT   ANOP                                                           31575011
* DUE TO USING MVS MACRO, MUST MOVE JOBNAME BEFORE 'JOLERRINR'          31575111
&C       SETC  (&X8)'JBNAME'.(1-&X8)'JCTJNAME'                          31575211
E98TERM  MVC  TASKLABL,&C                                               31575311
         JOLERR 408,'JOB ',TASKLABL,                                   *31575411
               ' TERMINATED DUE TO CONDITION CODES'                     31575511
           XC TASKRETN(2),TASKRETN                                      31575611
* THE NEXT MVC WILL STOP MVS FROM RUNNING AFTER A ABEND            DASD 31575711
* THIS PROBLEM IS BEING WORKED ON AS OF 4/1/77                     DASD 31575811
* SORRY ABOUT THE "IF ERROR LOGIC"                                 DASD 31575911
*        MVC   TASKRETN(4),=F'4000'                                DASD 31576011
* THIS PROBLEM IS NOW FIXED IN THE MONTOR AS OF 7/10/77            DASD 31576111
         MVI   TASKIND,C'1'                                             31576211
         JOLRETN RC=4000                                                31576311
E99RETNZ JOLRETN RC=0                                                   31576411
         LTORG                                                          31576611
         TITLE 'UJEISPDQ:KEEP EXTRA PDQ ISAM ENTRYS'               DASD 31593533
* THIS LITTLE CSECT WILL KEEP THE 2ND AND 3RD ENTRIES       *      DASD 31593633
* WHICH ARE IN THE PDQ FROM A ISAM DATASET                  *      DASD 31593733
*                                                           *      DASD 31593833
* NOW ALL A J.O.L. PROGRAMMER HAS TO DO IS SAY              *      DASD 31593933
* CATLG ON ANY 1 OF THE 3 DCLS WHICH DEFINE                 *      DASD 31594033
* INDEX, PRIME OR OVFLOW                                    *      DASD 31594133
*                                                           *      DASD 31594233
* AND THE KEEP MODULE WILL CALL THIS GUY AND                *      DASD 31594333
* HE WILL SEARCH THE PDQ FOR MORE ENTRIES AND               *      DASD 31594433
* HANDLE THEM THE SAME WAY                                  *      DASD 31594533
*                                                           *      DASD 31594633
* ALSO THE JFCB VOL COUNT WILL BE UPDATED TO A MAX OF 3     *      DASD 31594733
* SO WHEN THE CATALOG MODULE GETS CONTROL THE VOL COUNT     *      DASD 31594833
* AND VOLUMES ARE IN GOOD SHAPE                             *      DASD 31594933
*                                                           *      DASD 31595033
*                                                           *      DASD 31595133
* SO CLEM IF YOUR READING THESE COMMENTS ALL I DID          *      DASD 31595233
* WAS COPY YOUR WORK IN THE UJE81PDQ MODULE                 *      DASD 31595333
* AND ADDED A FEW THINGS HERE AND THERE                     *      DASD 31595433
*                                                           *      DASD 31595533
* J.O.L. IS NOW BETTER THAN JCL WHEN IT COMES TO ISAM       *      DASD 31595633
*                                                           *      DASD 31595733
         LTORG                                                          31595833
         TITLE 'UJS23ER:WTP,WTO ERROR MESSAGES'                         31595933
UJS23ER  CSECT                                                          31596033
         ENTRY UJSERR                                                   31596133
UJSERR   EQU   UJS23ER                                                  31596233
         USING *,R15                                                    31596333
         STM   R14,R12,12(R13)                                          31600000
         LA    R0,SAVEAREA                                              31610000
         ST    R0,8(R13)                                                31620000
         ST    R13,SAVEAREA+4                                           31630000
         BAL   R13,STARTERR                                             31640000
SAVEAREA DS    18F                                                      31650000
S23FLAGS DS    0F                                                       31651003
S23CSECT DS    C               CALLERS NAME                             31652007
S23MODNO DS    AL1             HIS MODULE NUMBER                        31653003
S23SEV   DS    AL1             THE SEVERITY LEVEL                       31654003
S23ERRNO DS    AL1             THE MESSAGE NUMBER                       31655003
S23GSTMT DC    X'41F0'                                                  31656003
S23STMTA DS    XL2                                                      31657003
STARTERR DS    0H                                                       31660000
         DROP R15                                                       31670000
         USING SAVEAREA,R13                                             31680000
         MVC   S23FLAGS,0(R14) COPY INDICATORS                          31681003
         MVC   S23STMTA,4(R14)  AND S-TYPE ADDRESS                      31681103
         LA    R14,6(,R14)     SKIP PAST INDICATORS ETC                 31682003
* R14 IS THE RETURN ADDRESS BUT IT ALSO POINTS TO A LIST OF             31690000
* INSTRUCTIONS WHICH ARE TO BE EXECUTED                                 31700000
* THEY CAN BE :-                                                        31710000
*    MVC   CONSTANT                                                     31720000
*    LA    VARYING STRING                                               31730000
         CLEAR S23MSSG         CLEAR MESSAGE AREA                       31740000
* NEW, END DEC 1974. IF AN ERROR MESSAGE IS BEING ISSUED, THEN OFFSET   31750000
*    THE MESSAGE AND PUT '***' IN IT.                                   31760000
         LA    R1,S23MSSG                                         74365 31770000
         CLC   =C'DISPLAY ',ICOMMAND                     CHG30062 76200 31780000
         BE    S23OFF10                                  CHG30062 76200 31790000
         CLC   =C'TYPE ',ICOMMAND                        CHG30062 76200 31800000
         BE    S23OFF10                                  CHG30062 76200 31810000
         CLC   =C'RETURN ',ICOMMAND                      CHG30062 76200 31820000
         BE    S23OFF10       PUT 10 BLANKS IN START     CHG30062 76200 31830000
         B     S23TSEV                                   CHG30062 76200 31840000
S23OFF10 MVC   0(10,R1),BLANKS OFFSET MESSAGE BY 10      CHG30062 76200 31850000
         LA    R1,10(R1)      SKIP BLANKS                CHG30062 76200 31860000
         B     S23START       GO FORM UP MESSAGE         CHG30062 76200 31870000
S23TSEV  CLI   S23SEV,2                                  CHG30062 76200 31880000
         BNL   S23REALE       REAL ERROR, PUT JOB NAME   CHG30062 76200 31890000
         MVC   0(5,R1),BLANKS                            CHG30062 76200 31900000
         LA    R1,5(R1)                                  CHG30062 76200 31910000
         B     S23START                                  CHG30062 76200 31920000
S23REALE MVC   0(4,R1),=C'***('  PUT '***('              CHG30062 76200 31930000
&C       SETC  (&X8)'JBNAME'.(1-&X8)'JCTJNAME'                          31940000
         MVC   4(8,R1),&C        + JOBNAME               CHG30062 76200 31950000
         MVI   12(R1),C')'       + ')'                   CHG30062 76200 31960000
         LA    R1,13(R1)         SKIP ABOVE              CHG30062 76200 31970000
S23START MVC   0(3,R1),=C'JOL' SHIFT IN 'JOL'                     74365 31980003
         LA    R1,3(R1)        SKIP OVER IT SO WE WON'T OVER-WRITE IT   31990000
* START  OF CODE LIFTED FROM JOLMAIN                                    31991003
* INITIALISE THE FIRST LINE                                             31991103
         MVC   0(1,R1),S23CSECT SHIFT IN CSECT NO                       31991507
         SR    R15,R15        CLEAR R15                                 31991603
         IC    R15,S23MODNO   CSECT NUMBER                              31991707
         CVD   R15,DBL        DEC PKD                                   31991803
         UNPK  1(2,R1),DBL      EBCDIC                                  31991903
         OI    2(R1),C'0'     MAKE MEANINGFUL                           31992003
         MVI   3(R1),C'-'   SET UP '-'                                  31992103
         IC    R15,S23ERRNO   GET ERROR NUMBER                          31992207
         CVD   R15,DBL                                                  31992303
         UNPK  4(2,R1),DBL                                              31992403
         OI    5(R1),C'0'                                               31992503
* NOW PUT IN 'WARNING' ETC                                              31992603
*        IC    R15,S23SEV     LOAD SEVERITY                             31992707
*        MH    R15,=H'6'      LENGTH OF MVC INSTRUCTION TO BE 'EX'      31992803
*        LA    R1,ERRTEXT1    RESET R1 A BIT                            31992903
*        EX    R0,S23MSS(R15) SHIFT REQ'D INFO IN                       31993007
*        IC    R15,S23SEV     RELOAD SEVERITY                           31993107
*        SLL   R15,2          MULTIPLY BY 4                             31993203
*        EX    R0,S23RESET(R15) ADD TO R1 L'MESSAGE JUST SHIFTED        31993307
         LA    R1,07(R1)      RESET R1                                  31993903
* END    OF CODE LIFTED FROM JOLMAIN                                    31994003
S23LUP1  DS    0H                                                       32000000
         CLI   0(R14),X'D2'    MOVE ?                                   32010000
         BE    S23MUV1                                                  32020000
         CLI   0(R14),X'41'    LA ?                                     32030000
         BE    S23LA1                                                   32040000
         B     S23END1         SHOULD BE '00'                           32050000
         SPACE                                                          32060000
S23MUV1  EX    R0,0(R14)        EXECUTE THE MOVE                        32070000
         SR    R0,R0                                                    32080003
         IC    R0,1(R14)       LENGTH MOVED                             32090003
         AR    R1,R0           ADD TO OUTPUT POSN                       32100003
         LA    R1,1(R1)        COS ASSMBLR REMOVED 1                    32110003
         LA    R14,6(R14)      SKIP MVC                                 32120003
         B     S23LUP1                                                  32130003
         SPACE                                                          32140003
S23LA1   DS    0H                                                       32150000
         EX    0,0(R14)        EXECUTE THE LA R15,VARYING STRING        32160003
         ST    R14,0(R13)      SAVE REGISTER 14 IN SAVE AREA            32170003
         LH    R14,0(R15)      LOAD LENGTH OF THE STRING                32180003
         LTR   R14,R14         SEE IF STRING LENGTH = 0                 32190003
         BZ    RESET14         NO DATA TO MOVE                          32200003
         BCTR  R14,0                                                    32210003
         EX    R14,ERRMUV                                               32220003
         LA    R1,1(R14,R1)    STEP 1 SO NEXT MOVE GOES ONTO RIGHT      32230003
*                              SPOT IN BUFFER                           32240000
RESET14  DS    0H                                                       32250000
         L     R14,0(R13)      RELOAD R14                               32260003
         LA    R14,4(R14)      STEP OVER THE LA                         32270003
         B     S23LUP1                                                  32280003
* OOPS   WTO   'JOLE00-99 CANNOT ALLOCATE ERROR AREA'                   32290000
*        ABEND 16,DUMP,STEP                                             32300000
ERRMUV   MVC   0(*-*,R1),2(R15) **** EXECUTED                           32310000
         SPACE                                                          32320000
S23END1  DS    0H                                                       32330000
         LA    R14,2(R14)      BRANCH AROUND '0' AT END OF LIST         32340000
         L     R15,4(R13)       LOAD OLD SAVE ADDRESS                   32350000
         ST    R14,12(R15)     RESET OLD RETURN ADDRESS                 32360000
         MVC   0(4,R1),=C' AT '  SHIFT IN 'AT'                          32370003
         EX    R0,S23GSTMT    LA  R15,STMT                              32372003
         MVC   4(4,R1),0(R15) SHIFT IN STATEMENT NUMBER                 32373003
*        MVC   4(4,R1),S23STMT                                    75003 32380003
*        OC    S23STMT,S23STMT                                          32390003
*        BNZ   S23SETL                                                  32400003
*        MVC   4(4,R1),STMT                                       75003 32410003
*        OC    4(4,R1),=C'0000' JCS NOTICED BINARY ZEROES IN THERE      32420000
S23SETL  LA    R14,S23MSSG-12 THE -8 IS FOR THE 'AT STMT'         75128 32430000
S23TEST0 CLI   4(R1),C'0'     LEADING ZERO?                       75003 32440000
         BNH   S23SR          -> NO                               75003 32450000
         MVC   4(4,R1),5(R1)  DROP ZERO                           75003 32460000
         BCT   R1,S23TEST0                                        75003 32470000
S23SR    DS    0H                                                 75003 32480000
         SR    R1,R14                                                   32490000
         XC    #S23LNE2,#S23LNE2   CLEAR LENGTH                   76200 32500000
         CH    R1,#S23MAX          CHECK FOR A BIG MESSAGE        76200 32510000
         BNH   S23SHORT            ITS OK, KEEP GOING             76200 32520000
* NOW WE HAVE A MESSAGE THATS GREATER THAN 96 BYTES AND IF        76200 32530000
* WE DONT MAKE TWO LINES OUT OF IT, THE OS WRITER OR HASP...ECT   76200 32540000
* WILL CHOP IT OFF                                                76200 32550000
* SO WE ARE NOW GOING TO TAKE A LOOK AT THE MESSAGE FROM +96 BACK       32560008
* AND WHEN WE FIND A COMMA OR A BLANK THAT WILL END LINE 1 AND          32570000
* START LINE 2                                                          32580000
         STH   R1,#S23LNE2         SAVE OLD LENGTH FOR LATER      76200 32590000
         LA    R15,S23MSSG         POINT TO THE START OF THE MSG  76200 32600000
         AH    R15,#S23MAX         GET TO +96                     76200 32610000
         LA    R1,30               STOP LOOKING AFTER 30 BYTES    76200 32620000
S23LOOK  DS    0H                                                 76200 32630000
         CLI   0(R15),C' '         IS IT A BLANK                  76200 32640000
         BE    S23ENDLK                                           76200 32650000
         CLI   0(R15),C','         HOW ABOUT A COMMA              76200 32660000
         BE    S23ENDLK                                           76200 32670000
         BCTR  R15,0               BACKUP,1 BYTE                  76200 32680000
         BCT   R1,S23LOOK          RETURN                         76200 32690000
S23ENDLK DS    0H                                                 76200 32700000
         LR    R1,R15              R1 = NEW END FOR LINE 1        76200 32710000
         LA    R14,#S23LREC   POINT TO START OF MESSAGE           76200 32720000
         SR    R1,R14              CALC NEW LENGTH FOR LINE 1     76200 32730000
         AH    R14,#S23LNE2        POINT R14 TO END OF MESSAGE    76200 32740000
         SR    R14,R15             CALC LENGTH FOR LINE 2         76200 32750000
         LA    R14,19(R14) LEAVE SOME BLANKS ON CONT LINE         76200 32760000
         STH   R14,#S23LNE2        SAVE IT FOR LATER              76200 32770000
*        ST    R1,20(R13)      CLEAR CLOBBERS R1                        32771012
*        CLEAR S23LNE2                                            76200 32780012
*        L     R1,20(R13)      CLEAR CLOBBERS R1                        32781012
         MVC   S23LNE2,BLANKS                                     87150 32782012
         MVC   S23LNE2+15(L'S23LNE2-16),1(R15)      SAVE LINE 2   76200 32790000
S23SHORT DS    0H                                                 76200 32800000
         XC    #S23BLKS(8),#S23BLKS CLEAR VB DESCRIPTOR ETC       76200 32810000
         STH   R1,#S23LREC                                              32820008
         LA    R1,4(R1)                                                 32830008
         STH   R1,#S23BLKS                                              32840008
         XC    S23STMT,S23STMT                                          32850008
* GREAT,NOW WHERE ARE WE GOING TO PUT THIS FANTASTIC PIECE OF           32860000
*    INFORMATION ?                                                      32870000
         TM    PRINT+48,X'10'                                           32880008
         BZ    S23WTO                                                   32890008
         WRITE S23DECB,SF,PRINT,#S23BLKS                                32900008
         CHECK S23DECB                                                  32910008
S23WTO   DS    0H                                                       32920000
* NOW IF THE SEVERITY IS >=12 THE MESSAGE IS TYPED ON THE CONSOLE,      32930000
*    OTHERWISE A WTO WITH ROUTCDE=11 IS QUITE SATISFACTORY,UNLESS       32940000
*    WE HAVE A PRINT DD CARD,IF WHICH CASE WE CAN RETURN NOW            32950000
         CLI   S23SEV,3                                                 32960008
         BL    S23TPRNT                                                 32970008
* HERE A REAL WTO IS REQUIRED,SO SET UP ROUTE-CODES 2 & 11              32980000
         MVC   #S23MSSG,=XL2'8000'                                      32990008
         LH    R15,#S23LREC                                             33000008
         LA    R15,#S23LREC(R15)                                        33010008
         MVC   0(4,R15),=X'04004020' DESC 6 RTE 11,2              75311 33020008
         CLI   VS,C'2'    MVS  ?                                   DASD 33030008
         BNE   S23TNMVS   NOPE                                     DASD 33040008
         CLI   ISTSO,C' '      UNDER TSO/TSS?                     87150 33041092
         BNE   S23TNMVS        YES, LEAVE ROUTE CODE 11 THEN      87150 33042093
         MVC   0(4,R15),=X'04004004' DESC 6 RTE 2,14 JESMSG        DASD 33050008
S23TNMVS DS    0H                                                  DASD 33060000
         WTO   MF=(E,#S23LREC)                                          33070000
         B     S23GOBAK                                                 33080008
         SPACE 3                                                        33090008
S23TPRNT DS    0H                                                 75311 33100000
         TM    PRINT+48,X'10' DID WE PUT MESSAGE ON PRINTER FIX-X 76200 33110000
         B     DYNP           FOR DYNAMIC VERSION, PRINT AGAIN !        33120000
         BO    S23GOBAK       YES, DON'T FILL WTP ON JCL LOGFIX-X 76200 33130000
* SET UP A WTO WITH ROUTCDE=11                                          33140000
DYNP     MVC   #S23MSSG,=XL2'8000'                                      33150008
         LH    R15,#S23LREC                                             33160008
         LA    R15,#S23LREC(R15)                                        33170008
         MVC   0(4,R15),=X'00000020' ROUTCODE   11                75128 33180008
         CLI   VS,C'2'   MVS ??                                    DASD 33190008
         BNE    S23NMVS   NOPE                                     DASD 33200033
         CLI   ISTSO,C' '      UNDER TSO/TSS?                     87150 33201092
         BNE   S23NMVS         YES, LEAVE ROUTE CODE 11 THEN      87150 33202093
         MVC   0(4,R15),=X'00000004' ROUTCODE 14 FOR JESMSG        DASD 33210033
S23NMVS  DS    0H                                                  DASD 33220000
         WTO   MF=(E,#S23LREC)                                          33240000
S23GOBAK DS    0H                                                       33250000
         CLC   #S23LNE2,=X'0000'   DO WE HAVE A SECOND LINE       76200 33260000
         BE    S23GOBK2            NOPE                           76200 33270000
         LH    R1,#S23LNE2         LOAD LENGTH OF LINE2           76200 33280000
         XC    #S23LNE2,#S23LNE2   CLEAR                          76200 33290000
         MVC   S23MSSG,S23LNE2     OVERLAY OLD WITH NEW           76200 33300000
         CLI   S23LNE2,C' '  CHECK FOR BLANK SECOND LINE           DASD 33310008
         BNE   S23SHORT                                            DASD 33320008
         LR    R15,R1        LOAD LENGTH OF MESSAGE                DASD 33330008
         BCTR  R15,0         SUBTRACT 1 FOR EXECUTE INST           DASD 33340008
         EX    R15,S23CLCBL                                        DASD 33350008
         BE    S23GOBK2    ITS BLANK  LETS NOT PRINT IT            DASD 33360008
         B     S23SHORT            RETURN AND WRITE LINE2         76200 33370000
S23CLCBL CLC  S23LNE2+1(*-*),S23LNE2                              DASD  33380000
S23GOBK2 DS    0H                                                 76200 33390000
         CLI S23SEV,5           JOL TERMINAL ERROR ?                    33400000
         BNE  S23LMRET                                                  33410000
         AIF   (&X8).X8480                                              33420000
         JOLCLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ),MF=(E,CALLAREA)         33430000
         AGO   .NX8480                                                  33440000
.X8480   ANOP                                                           33450000
         JOLCLOSE (INSTRUCT,,PRINT,,RETN),MF=(E,CALLAREA)               33460000
.NX8480  ANOP                                                           33470000
         ABEND 1,DUMP STEP                                              33480000
S23LMRET DS    0H                                                       33490000
         JOLRETN                                                        33500000
         LTORG                                                          33510000
         DC   80S(*)                                                    33520000
*        PRINT ON                                                       33530000
       TITLE 'UJELOCAT:LOCATE CATALOGED DATASETS'                  DASD 33540000
         JOLSAVE CSECT=UJELOCAT                                    DASD 33550000
*        AIF   (&X8).X8540                                              33560000
         L     R15,=V(E05VOLS)         LOAD CAMLIST ADDRESS        DASD 33570000
         USING VOLINFO,R15                                         DASD 33580000
         ST    R15,ELOLOCAT+12         POINT TO LOCATE AREA        DASD 33590000
         LA    R6,300(R15)             GO UP A FEW AND SAVE POINTERDASD 33600000
         MVC   0(44,R6),DSNAME         MOVE TO LOCATE AREA         DASD 33610000
         MVC   DSNAME,0(R6)            MOVE DSNAME IN              DASD 33620000
         $LOCATE ELOLOCAT                                          DASD 33630012
         LTR   R15,R15                 DID LOACTE FIND ANYTHING ?? DASD 33640000
         BNZ   ELORETN4                NOPE                        DASD 33650000
         JOLRETN RC=0  WE FOUND OUR STIFF LETS LEAVE               DASD 33660000
ELORETN4 DS    0H                                                  DASD 33670000
         MVC  DSNAME,0(R6)            MOVE BACK ORGINAL DATA SET NADASD 33680000
         B    RETN4                   TELL THE CALLER WE FAILED    DASD 33690000
ELOLOCAT CAMLST NAME,DSNAME,,0                                     DASD 33700000
.X8540   ANOP                                                           33710000
*        B    RETN4                                                     33720000
           LTORG                                                        33730000
         JOLSAVE CSECT=ASKFREE         ASK IF WE SHOULD FREE DDNAME     33730187
         CLI   ISTSO,C' '      UNDER TSO/TSS?                           33730287
         BE    ASKRET4         NO, SO RETURN A 4                        33730387
ASKMORE  LA    R1,FREEMSG                                               33730587
         LA    R0,L'FREEMSG                                             33730687
         SVC   93                                                       33730787
         LA    R1,WORKFREE                                              33730887
         TGET  (1),1                                                    33730987
         OI    WORKFREE,C' '   UPPERCASE                                33731087
         CLI   WORKFREE,C'N'   YES                                      33731187
         BE    ASKRET4                                                  33731287
         CLI   WORKFREE,C'Y'   YES                                      33731387
         BNE   ASKMORE         TILL WE GET Y OR N                       33731687
         MVC   ASKDDN2,DDDDNAME                                         33731787
         DYNPARM DDNAME=(8,ASKDDNM),VRB=UN,UNALLOC=YES                  33731890
         LTR   R15,R15                                                  33731987
         BNZ   ASKRET4                                                  33732087
         JOLRETN                                                        33732187
ASKRET4  JOLRETN RC=4                                                   33732287
FREEMSG  DC    C'FREE FILE/DDNAME ? (Y OR N)'                           33732388
WORKFREE DC    C'       '                                               33732488
ASKDDNM  DC    H'8'                                                     33732587
ASKDDN2  DC    CL8' '                                                   33732687
         JOLSAVE CSECT=UJD03ERR                                         33732787
         LR    R8,R1           POINTER TO SVC99 PARM BLOCK              33732887
         LR    R9,R0           ERROR CODE                               33732987
         USING S99RB,R8                                                 33733087
* PRINT  SVC99  ERRORS                                                  33733187
*        B     NODYNDMP                                                 33733287
         L     R1,CALLAREA              REQUEST BLOCK POINTER           33733394
         L     R15,=V(DYNDUMP)          GET DUMP ROUTINE                33734039
         LTR   R15,R15                                                  33735039
         BZ    NODYNDMP                                                 33736039
*        WXTRN DYNDUMP                                                  33737039
         BALR  R14,R15                  GO TO IT                        33738039
         SPACE  3                                                       33739039
NODYNDMP DS    0H                                                       33739139
         FIX   'WHY DON''T WE USE JOLERR TO PRINT THIS?'                33739239
*        L     R1,CALLAREA+12  DYNALLOC RC                              33739339
         CVD   R9,DBL                                                   33739439
         OI    DBL+7,X'0F'          (CONVERT                            33739539
         UNPK  D03MSGH,DBL           CODES                              33739639
         UNPK  D03MSGI(9),S99ERROR(5) TO SOME                           33739773
         TR    D03MSGI(8),HEX          PRINTABLE FORM                   33739839
         MVI   D03MSGI+L'D03MSGI,0 PATCH DESCRIPTOR CODE                33739939
         LA    R1,D03MSG                AND PRINT THEM                  33740039
         SVC   35               WTO, ROUTCDE=11                         33740139
&C       SETC  (&X8)'KEQEFF18'.(1-&X8)'IKJEFF18'                 88036  33740211
         LINK  EP=&C,PARAM=(S99RB,CALLAREA+12,TSOADR,                  .33740312
               TSOADR+4,0,#D03MSG1),MF=(E,CALLAREA+16)                  33740411
         FIX   ' SUBTRACT 2 FROM EACH OF THESE NEXT ASSEMBLY'           33740512
         LH    R15,#D03MSG1                                             33740611
         SH    R15,=H'4'       FOR LENGTH FIELDS                        33740711
         STH   R15,#D03MS1O                                             33740811
         LH    R15,#D03MSG2    FOR LENGTH FIELDS                        33740911
         LTR   R15,R15                                                  33741011
         BZ    DNO2NDMS                                                 33741111
         SH    R15,=H'4'                                                33741211
DNO2NDMS STH   R15,#D03MS2O                                             33741311
         JOLERR 330,                                                   *33741411
               'DSID ''',DDDSID,''' DDNAME ''',DDDDNAME,               *33741511
               ''' ALLOCATION FAILED WITH SYSTEM MESSAGE:-'             33741611
         JOLERR 331,'''',#D03MS1O,'  '''                                33741711
         CLC   #D03MS2O,=H'0'                                           33741811
         BE    D03NSECM        NO SECOND MESSAGE                  87150 33741911
         JOLERR 232,'''',#D03MS2O,'  '''                                33742011
D03NSECM LA    R0,D03MSGL                                               33742111
         FIX   'YOU REALISE THIS IS SUPOSED TO BE REENTRANT DON''T U'   33742211
         JOLRETN  RC=16                                                 33742311
         LA    R1,D03MSG                                                33742411
         SVC   93               TPUT MESSAGE                            33742511
         JOLRETN  RC=16                                                 33742611
D03MSG   DS    0F                                                       33743094
         DC    AL2(D03MSGL),X'8000'    LENGTH AND FLAGS                 33743194
         DC    C' DYNALLOC RETURN CODE '                                33743294
D03MSGH  DS    H                                                        33743394
         DC    C', ERROR AND INFO CODE '                                33743494
D03MSGI  DS    XL8                 SPACE FOR ERROR AND INFO CODES       33743594
D03MSGL  EQU   *-D03MSG            LENGTH OF MESSAGE                    33743694
         DC    X'0000'         DESCRIPTOR CODES                         33743794
         DC    X'0020'         ROUTING CODES                            33743894
         DS    0F,H                                                     33743994
#D03MSG1 DC    H'0'                                                     33744094
#D03MS1O DC    H'0',251C' '                                             33744194
#D03MSG2 DC    H'0'                                                     33744294
#D03MS2O DC    H'0',251C' '                                             33744394
*D03MSG   DC    CL512' '        MUST BE FULLWORD ALIGNED                33744411
TSOADR   DC    F'0'        DON'T KNOW ADDR OF IKJEFF02                  33744594
*        DC    X'80'      '80' WANT WTO, '00' WANT PUTLINE              33744694
         DC    X'40'      JUST GIVE US THE MESSAGE. WE'LL PRINT IT      33744794
         DC    X'32'      '32' IF SVC99 USED, '01' IF DAIR USED         33744894
         DC    C'JL'                                                    33744994
*        ORG   *-240                                                    33745011
*HEX     DS    0CL256,240C                                              33745113
*        DC    C'0123456789ABCDEF'   MESSAGE)                           33745211
         SPACE 1                                                        33745394
         LTORG                                                          33745494
         DROP  R8                                                       33745594
           PRINT ON                                                     33745694
*          COPY UJEALLOC                                                33750000
* JOL COPYRIGHT CCS 1976                                          76200 33760000
* COPYRIGHT CCS 1975,1976                                               33770000
* COPYRIGHT JOL DEVELOPMENT AND MARKETING 1983.                         33780000
* COPYRIGHT CCS-JOL P/L                   1986.                         33790000
*                                                                       33800000
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-C001.           33810000
           SPACE 3                                                      33820000
*                   J             000000            L                   33830000
*                   J            0      0           L                   33840000
*                   J           0        0          L                   33850000
*                   J          0          0         L                   33860000
*                   J         0            0        L                   33870000
*                   J         0            0        L                   33880000
*                   J         0            0        L                   33890000
*                   J         0            0        L                   33900000
*                   J         0            0        L                   33910000
*                   J         0            0        L                   33920000
*                   J         0            0        L                   33930000
*        J          J         0            0        L                   33940000
*         J        J           0          0         L                   33950000
*          J      J             0        0          L                   33960000
*           J    J               0      0           L                   33970000
*            JJJJ                 000000            LLLLLLLLLLL         33980000
         EJECT                                                          33990000
         AIF   (&X8).X8ZEDS                                      88036  33991008
         IEFZB4D0                                                       34000000
         IEFZB4D2                                                       34010000
         AGO   .IBMZEDS                                          88036  34010108
.X8ZEDS  ANOP                                                    88036  34010208
         KDJZB4D0                                                       34011008
         KDJZB4D2                                                       34012008
.IBMZEDS ANOP                                                    88036  34013008
         TITLE 'DYNAMIC ALLOCATE WITH GETMAIN FOR WORK AREA'      76200 34020000
         JOLSAVE CSECT=UJD03DS1                                         34030000
*        USING JOLCOM,R2                                                34040000
         USING DDDSNDET,R8                                              34050000
         L     R8,0(R1)                                           76200 34060000
         LA R0,((DALEND-DALSTART)+(S99RBEND-S99RB)+16)                  34070000
         GETMAIN R,LV=(0)                                               34080000
         LR    R9,R1          SAVE AREA ADDRESS                   76200 34090000
         CALL  UJD03DS2,((8),(1))                                 76200 34100050
         LR    R8,R15         SAVE RETURN                         76200 34110000
         LA R0,((DALEND-DALSTART)+(S99RBEND-S99RB)+16)                  34120000
         FREEMAIN R,LV=(0),A=(9)                                        34130000
         LR    R15,R8                                             76200 34140000
         JOLRETN RC=(15)                 RETURN                   76200 34150000
         DC    50S(*)                                                   34160010
         LTORG                                                          34170010
         ORG *+X'30'            TO ALIGN AT +100 ONLY                   34180010
         TITLE 'ALLOCATE DSNAME,SYSOUT USING WORK AREAS SUPPLIED' 76200 34190000
         JOLSAVE CSECT=UJD03DS2,BASE=(4,11)                             34200015
         LM    R8,R9,0(R1)    LOAD DDDSNET AREA,+WORK AREA        76200 34210000
         USING S99RB,R9                                                 34220000
         LA    R7,S99RBEND                                        76200 34230000
         LA    R7,8(R7)       BUMP UP 8                                 34240000
         SRL   R7,3                                                     34250000
         SLL   R7,3           R7 ON DOUBLE WORD NOW.                    34260000
         USING DYNCON,R7                                                34270000
         L     R0,=V(DYNCON)    GET ADDRESS OF DYN CONSTANT AREA        34280000
         LA    R1,DALEND-DALSTART  GET LENGTH TO MOVE                   34290000
         LR    R14,R7         ARE TO GO TO                              34300000
         LA    R15,0(R1)      AND TO LENGTH                             34310000
         MVCL  R14,R0                                                   34320000
         XC    S99RB(S99RBEND-S99RB),S99RB SET PARMS TO 0        76200  34330010
         USING DDDSNDET,R8                                              34340010
*MOVE THE DDRECORD IS NOW MOVED TO 'TRANS' AND GENERAT FROM THERE.      34350000
         SPACE 2                                                        34360010
D03XC    CLEAR TRANS                                              75128 34370000
         XC    DDSPECTP(2),DDSPECTP                               75128 34380010
         MVC   TRANS(256),DDDSNDET                                      34390010
         LA    R8,TRANS                                           75128 34400010
         SPACE 3                                                        34410000
         LA    R10,WORK+8                                               34420000
         SRL  R10,3                                                     34430000
         SLL   R10,3                                                    34440000
         ST    R10,S99TXTPP                                             34450000
         CLC =C'*&&',DDVOLUME REF TO VOL=&& DSNAME       C-0033 74191   34460000
         BNE D03TDSN         NO,SO GO THROUGH NORMAL PROCC-0033 74191   34470000
* NOW HERE WE HAVE A VOLREF TO A TEMPORARY DSNAME.         C-0033 74191 34480000
*** THATS NOT ALLOWED,SO WE'LL PUMP OUT A CARD,AND THE NEXTC-0033 74191 34490000
*   DDCARD GENERATED CAN REFER BACK TO THE DSNAME          C-0033 74191 34500000
         FIX   'TEST UNDER MVS'                                         34510000
         SPACE 3                                                        34520033
D03TDSN  EQU   *                                           C-0033 74191 34530033
         CLI   DDDSNAME,C' '                                            34540033
         BE NODSN                                                       34550033
         CLI   DDDSNAME,C'%'                                            34560033
         BE NODSN                                                       34570033
         CLC   =C'*DUMMY',DDDSNAME                                      34580033
         BNE   TRYSYS                          SEE IF A PRINTER REQD    34590033
         SETUP DAPDUMMY                                           76200 34600033
         B  D03TDISP                                                    34610033
         SPACE 3                                                        34620033
TRYSYS   EQU   *                                                  75128 34630000
         FIX 'SET UP NORMAL JOB SYSOUT PRINTING TIME'                   34640033
         CLI   DDTYPE,DDPUNCH                                     75311 34650000
         BE    D03NORMS                                           75311 34660000
         CLI   DDTYPE,DDSPECOU   SPECIAL SYSOUT???                75128 34670000
         BNE   D03NSPCS       NOPE ->                             75128 34680000
D03DOSYS DS    0H                                                 75311 34690000
         JOLERR 410,'SYSOUT=''ANYTHING'' NOT SUPPORTED WITH DYNAMIC ALL*34700004
               OCATION'                                                 34710000
         MVI   DDSYSCLS,C' '                                            34720033
D03NSPCS CLI   DDTYPE,5       IS THIS NORMAL SYSOUT PROCESSING ?  75128 34730000
         BNE   ISDSN                                              75128 34740000
         SPACE 2                                                  75128 34750000
* HERE WE HAVE NORMAL SYSOUT PROCESSING                           75128 34760000
D03NORMS DS    0H                                                 87150 34770097
         CLI   DDSYSCLS,C'*'   IF SO MAKE BLANKS FOR DEFAULTS     87150 34770197
         BNE   D03SCLSO        SYSOUT CLASS IS OK                 87150 34770297
         MVI   DDSYSCLS,C' '   MAKE BLANKS FOR DEFAULTS           87150 34770397
D03SCLSO SETUP DAPSYSOU,DDSYSCLS                                  76200 34771097
         IFNULL DDSYSPGM,D03NPGM                                  76200 34780000
         SETUP DAPSPGNM,DDSYSPGM                                  76200 34790000
D03NPGM  IFNULL DDSYSFRM,D03NFORM                                 76200 34800000
         SETUP DAPSFMNO,DDSYSFRM                                  76200 34810000
D03NFORM EQU   *                                                  76200 34820000
* NOW TEST OTHER SYSOUT PARAMETERS                                75128 34830000
         IFNULL DDCOPIES,D03NCOPY                                 75128 34840000
         SETUP DAPCOPYS,DDCOPIES                                  76200 34850000
D03NCOPY EQU  *                                                   75311 34860000
         CLC DDOUTLIM,ZERO   ANY OUTLIM ?                               34870000
         BE   D03NOUTL       NOPE                                       34880000
         SETUP DAPOUTLM,DDOUTLIM                                  76200 34890000
D03NOUTL IFNULL DDUCS,DDFOLD,DDVERIFY,D03NUCS                     75311 34900000
         SETUP DAPUCS,DDUCS                                       76200 34910000
         IFNULL DDVERIFY,DDFOLD,ND03VERI                          75311 34920000
         IFNULL DDFOLD,D03NFOLD                                         34930000
         SETUP DAPUFOLD                                           76200 34940000
         B     D03EFOLD                                                 34950000
D03NFOLD EQU   *                                                        34960000
D03EFOLD IFNULL DDVERIFY,ND03VERI                                 75128 34970000
         SETUP DAPUVRFY                                           76200 34980000
         B   D03ENFCB      POP ')' ON NOW                         75311 34990000
ND03VERI EQU   *                                                  76200 35000000
D03NUCS  IFNULL DDFCB,DDVERIFY,DDALIGN,D03NFCB                    75128 35010000
         SETUP DAPFCBIM,DDFCB                                     76200 35020000
         IFNULL DDVERIFY,D03TAL                                   75128 35030000
         MVI  DAPFCBAV,X'04'   TURN ON VERIFY                           35040000
D03SETFV SETUP DAPFCBAV                                           76200 35050000
         B     D03ENFCB                                           75128 35060000
D03TAL   IFNULL DDALIGN,D03ENFCB                                  75128 35070000
         MVI  DAPFCBAV,X'08'  TURN ON 'ALIGN'                           35080000
         B  D03SETFV                                                    35090000
D03ENFCB EQU   *                                                  76200 35100000
         SPACE 3                                                  75128 35110000
D03NFCB  IFNULL DDROUTE,D03NROUT                                  75128 35120000
         SETUP DAPSUSER,DDROUTE                                   76200 35130000
D03NROUT EQU   *                                                  75128 35140000
          TM DDSPECT2,X'04'      HOLD SPECIFIED?                        35150000
          BZ  D03TDCB            NOPE                                   35160000
          SETUP DAPSHOLD                                          76200 35170000
          B     D03TDCB                                           75128 35180000
ISDSN      EQU *                                                        35190000
          CLI DDTYPE,DDSYSIN  SYSIN CARD FILE?                          35200000
           BNE D03ORDSN                                                 35210000
           FIX 'CHECK CARD FILES'                                       35220000
* SYSIN CARDS HERE                                                      35230000
         MVC   DDMBR,DDDSNAME+2 SHIFT MEMBER NAME TO MBR                35240024
         MVC   DDDSNAME(44),=CL44'&&&&INST'                             35250024
         SETUP DAPDSNAM,DDDSNAME                                  86230 35251060
         SETUP DAPMEMBR,DDMBR                                     76200 35252060
         MVC   DDVOLUME(9),=C'         '                                35260024
* NOW MAKE THE TYPE LOOK LIKE A DISK SO THAT LABEL IN IS GENERATED      35270024
         MVI   DDUNITYP,B'10000000'   DISK                        75311 35280024
         IFVALUE DDRECFM,D03LRECF                                       35290024
         MVC   DDRECFM(2),=C'FB'                                        35300024
D03LRECF IFVALUE DDLRECL,D03LRECL                                       35310024
         MVC   DDLRECL(2),=C'80'                                        35320024
D03LRECL IFVALUE DDBLKSZE,D03LBLKS                                      35330024
         B     NODSN                                                    35331060
         LTORG                                                          35332061
*        L     R1,AJOLGEN                                         75128 35340000
*        USING GENDETS,R1                                         75128 35350000
*          MVC DDBLKSZE,PARMSYSB                                        35360000
*        DROP  R1                                                 75128 35370000
D03LBLKS EQU    *                                                       35380024
D03ORDSN EQU    *                                                       35390024
         SPACE  3                                                       35400000
* CHECK FOR GENERATION DATA SETS                                        35410000
         SPACE  3                                                       35420000
*    NOW, THE GDG NUMBER IS IN THE DDMBR FIELD, AND NOW WE HAVE TO      35430000
*    POP THE BRACKETS IN THERE.                                         35440000
         CLI   DDMBR,C'('      GDG ?                              75311 35450000
         BE    D03GDG0        YES                        JOL30061 76200 35460000
         CLI   DDMBR,C'+'      GDG ?                              75311 35470000
         BE    D03GDG1         YES                                75311 35480000
* NOT GDG, NO MEMBER, SO SET UP DSNAME PARAMETER                  86230 35490000
         SETUP DAPDSNAM,DDDSNAME                                  86230 35500000
         B     D03TMBR         NO, TEST IF MEMBER SPECIFIED       75311 35510000
         SPACE  3                                                       35520000
D03GDG0  CLI   DDMBR+1,C' '   =' '                       JOL30061 76200 35530000
         BNE   D03GDG1        NOPE, MUST BE REL & NOCAT  JOL30061 76200 35540000
         CLC   DDMBR+2(4),=C'0000' REL(0) ?              JOL30061 76200 35550000
         BE    D03GDG1        YES, NORMAL PROCESSING.    JOL30061 76200 35560000
         CLC   DDMBR+2(4),BLANKS                         JOL30061 76200 35570000
         BE    D03GDG1                                   JOL30061 76200 35580000
* HERE GDG ABSOLUTE .                                    JOL30061 76200 35590000
         LH    R15,#DSN        GET LENGTH OF DSNAME               86230 35600000
         LA    R15,DDDSNAME(R15) POINT TO END OF DSNAME           86230 35610000
         MVC   0(9,R15),=C'.G0000V00'                             86230 35620000
         MVC   2(4,R15),DDMBR+2                                   86230 35630000
D03SETDS SETUP DAPDSNAM,DDDSNAME                                  86230 35640000
         B     D03TDISP       CONTINUE AS NORMAL(DISP...)               35650000
D03GDG1  MVI   DDMBR,C' '      BLANK '+' | '('                    75311 35660000
         IFNULL DDMBR,D03TDISP    BLANK GDGD NUMBER SOMEHOW ?     86230 35670000
* HERE WE HAVE A RELATIVE GDG NUMBER.                                   35680000
         LH    R15,#DSN        GET LENGTH OF DSNAME               86230 35690000
         LA    R15,DDDSNAME(R15) POINT TO END OF DSNAME           86230 35700000
         MVI   0(R15),C'('                                        86230 35710000
         MVC   1(1,R15),DDMBR+1   + OR - RELATIVE NUMBER          86230 35720000
         CLI   DDMBR+2,C'0'      XA WON'T ACCEPT (+0001)          86230 35730000
         BE    D03TST2           TEST IF ANOTHER ZERO             86230 35740000
         CLI   DDMBR+3,C'0'      XA WON'T ACCEPT (+001)           86230 35750000
         BE    D03TST3           TEST IF ANOTHER ZERO             86230 35760000
         CLI   DDMBR+4,C'0'      XA WON'T ACCEPT (+01)            86230 35770000
         BE    D03TST4           TEST IF ANOTHER ZERO             86230 35780000
* HERE, 0001 SAY                                                        35790000
         MVC   2(1,R15),DDMBR+5   + OR - RELATIVE NUMBER          86230 35800000
         MVI   3(R15),C')'                                        86230 35810000
         B     D03SETDS           SET DSNAME PARAMETER            86230 35820000
         SPACE                                                          35830000
D03TST4  DS    0H                                                       35840000
* HERE, 0011 SAY                                                        35850000
         MVC   2(2,R15),DDMBR+4   + OR - RELATIVE NUMBER          86230 35860000
         MVI   4(R15),C')'                                        86230 35870000
         B     D03SETDS           SET DSNAME PARAMETER            86230 35880000
         SPACE                                                          35890000
D03TST3  DS    0H                                                       35900000
* HERE, 0111 SAY                                                        35910000
         MVC   2(3,R15),DDMBR+3   + OR - RELATIVE NUMBER          86230 35920000
         MVI   5(R15),C')'                                        86230 35930000
         B     D03SETDS           SET DSNAME PARAMETER            86230 35940000
         SPACE                                                          35950000
D03TST2  DS    0H                                                       35960000
* HERE, 0111 SAY                                                        35970000
         MVC   2(4,R15),DDMBR+2   + OR - RELATIVE NUMBER          86230 35980000
         MVI   6(R15),C')'                                        86230 35990000
         B     D03SETDS           SET DSNAME PARAMETER            86230 36000000
         SPACE                                                          36010000
D03TMBR  IFNULL DDMBR,D03TDISP               MEMBER NAME ?        75311 36020000
D03GDG2  EQU *                                                    75311 36030000
         SETUP DAPMEMBR,DDMBR                                     76200 36040000
NODSN    EQU *                                                          36050000
D03TDISP DS  0H                                                         36060000
* IF DDDISP(1)=' 'THEN IT WASN'T INITIALISED PROPERLY. WE WILL          36070000
* (LIKE TSO) DEFAULT IT TO OLD.                                         36080000
         CLI  DDDISP,C' '                                               36090000
         BNE  D03DISPA                                                  36100000
         MVI  DDDISP,B'00010000'     SET TO OLD                         36110000
D03DISPA DS   0H                                                        36120000
         IFNULL DDDISP,D03TDCB          NO DISP FIELDS ?                36130000
* EXTRA CHECKS ARE REQUIRED FOR OLD OR SHARED DATA SETS                 36140000
*                                                                       36150000
* IF THE UNIT IS SPECIFIED, BUT NO VOLUME THEN WE CANCEL THE            36160000
*   UNIT, OTHERWISE SVC 99 GETS UPSET, UNLIKE JCL, WHICH GOES           36170000
*   TO THE PASSED DATA SET QUEUE.                                       36180000
         TM   DDDISP,B'11000000' TEST FOR ZEROS FOR OLD DATA SET        36190000
         BM   DODISP1            NOT AN OLD ALLOCATION                  36200000
         IFVALUE DDVOLUME,DODISP1 HAS A VOLUME, SO LEAVE UNIT           36210000
         CLEAR DDUNIT            SET UNIT TO BLANKS, PRESS ON.          36220000
DODISP1  EQU *                                                          36230000
         TM   DDDISP,X'C0'       USES?                                  36240000
         BO   D03USES            YES, GO FIX IT UP                      36250000
         TM   DDDISP,B'01000000' NEW ?                                  36260000
         BO   D03NEW                                                    36270000
         TM   DDDISP,B'10000000' MOD ?                                  36280000
         BO   D03MOD                                                    36290000
         TM   DDDISP,B'00010000' OLD ?                                  36300000
         BO   D03OLD                                                    36310000
         MVI   DAPSTATS,X'08' SHR                                       36320000
         TM    DDDISP,B'11000000'  USES ?                         75128 36330000
         BO    D03USES             YES                            75128 36340000
         B     DDDISP2                                                  36350000
D03MOD   MVI   DAPSTATS,X'02' MOD                                       36360000
         B     DDDISP2                                                  36370000
D03NEW   MVI   DAPSTATS,X'04' NEW                                       36380000
         B     DDDISP2                                                  36390000
D03OLD   MVI   DAPSTATS,X'01' OLD                                       36400000
         B     DDDISP2                                                  36410000
D03USES  EQU   *                                                  75128 36420000
         FIX   'THIS SECTION*MAY** HAVE TO BE CHANGED FOR || DS'  75128 36430000
* HERE WE HAVE TO GENERATE A MOD CARD FOR THE DATA SET,           75128 36440000
*  THEN  ANOTHER CARD POINTING BACK TO IT WITH A DISP OF OLD      75128 36450000
         CONCAT 'MOD'         MAKE DISP 'MOD' FOR USES            75128 36460017
         MVC   LABEL,DDDDNAME SAVE DDNAME IN LABEL                75128 36470000
DDDISP2  EQU  *                                                         36480000
         SETUP DAPSTATS,DAPSTATS                                        36490000
DODISP2  CLC DDDISP+1(2),BLANKS                                         36500000
         BE ENDDISP                                                     36510000
         MVI   CALLAREA,0     SET TO ZERO                               36520000
         LA R6,DDDISP+1                                                 36530000
         BAL R15,FIXDISP                                                36540015
         CLI   CALLAREA,0     STILL = 0                                 36550000
         BE ENDDISP                                                     36560000
         MVC   DAPNDISP,CALLAREA                                        36570000
         SETUP DAPNDISP                                                 36580000
         SPACE 2                                                        36590000
         CLI DDDISP+2,C' '              3 RD DISP=''                    36600000
         BE ENDDISP                                                     36610000
         LA R6,DDDISP+2                                                 36620000
         BAL R15,FIXDISP                                                36630015
         MVC   DAPCDISP,CALLAREA                                        36640000
         SETUP DAPCDISP                                                 36650000
         B ENDDISP                                                      36660000
FIXDISP  CLI 0(R6),C' '                                                 36670000
         BNE DELETE                                                     36680000
         CONCAT ','                                                     36690017
         B   ELOOP                                                      36700000
         SPACE 1                                                        36710000
DELETE   CLI 0(R6),C'D'                                                 36720000
         BNE KEEP                                                       36730000
         MVI   CALLAREA,X'04' DELETE                                    36740000
         B   ELOOP                                                      36750000
KEEP     CLI 0(R6),C'K'                                                 36760000
         BNE PASS                                                       36770000
         MVI   CALLAREA,X'08' KEEP                                      36780000
         B   ELOOP                                                      36790000
PASS     CLI 0(R6),C'P'                                                 36800000
         BNE CATLG                                                      36810000
         CONCAT ',PASS'                                                 36820017
         B   ELOOP                                                      36830000
CATLG    CLI 0(R6),C'C'                                                 36840000
         BNE UNCATLG                                                    36850000
         MVI   CALLAREA,X'02' CATLG                                     36860000
         B   ELOOP                                                      36870000
UNCATLG  EQU  *                                                         36880000
         CLI 0(R6),C'L'      INDICATOR FOR LAST DDCARD ?                36890000
         BE  TTEMPDSN                                                   36900075
         FIX   'DON''T DO THIS '                                        36901075
*        MVI   CALLAREA,X'01' UNCATLG                                   36910077
ELOOP    BR    R15                      RETURN                          36920015
TTEMPDSN EQU *                                                          36930075
         CLI   DDDSNAME,C'&&'   TEMPORARY DSN?                          36940077
         BNE   0(R15)           -> NO                                   36950015
         MVI   CALLAREA,X'04' DELETE                                    36960000
         BR    R15       RETURN                                         36970015
         SPACE                                                          36980000
DISPERR  EQU *                                                          36990000
         JOLERR 405,'INVALID DISPOSTION FOUND :- ',DDDISP               37000004
         SPACE 3                                                        37010000
ENDDISP  EQU *                                                          37020000
D03TDCB  EQU   *                                                        37030000
         CLC DDOSVB,=AL2(DDCATLGS-DDOSVB+2) SHORT RECORD ?              37040000
         BNH NODCB                                                      37050000
         TM    DDSPECT2,X'01' VSAM ? DONE MUCH,MUCH LATER         75128 37060000
         BO    NODCB                                              75128 37070000
         CLI DDRECFM,C'%'               IF SO,NODCB WAS SPECIFIED       37080000
         BE NODCB                                                       37090000
*                                                                 75128 37100000
* CHECK IF DCBEXTRA IS BEING USED. IF SO, CHECK THAT IT CONTAINS  84282 37141087
*  A DATA SET NAME AS A MODEL DSCB. IF SO, SKIP AROUND THE SECTION      37142087
*  THAT PUTS ON THE DEFAULT MODEL DSCB.                                 37143087
         CLC   DDOSVB,=AL2(DDLEN)                        JOL30047 84282 37144087
         BNH   D03DEFDS       PUT IN A DEFAULT DSCB IF REQUIRED   84282 37145087
* CHECK IF THE DCBEXTRA FIELD IS A DATA SET NAME                  84282 37146087
*  IN FACT, WE ARE CHECKING THAT BEFORE A COMMA OR  BLANK         84282 37147087
*   THAT THERE IS A PERIOD OR AN EQUAL SIGN.                      84282 37148087
*                                                                       37149087
*  IF WE FIND AN "=" BEFORE A COMMA, THEN THERE IS NO DSNAME.     84282 37149187
*                                                                       37149287
         LA    R1,DDEXTRA                                         84282 37149387
         LA    R14,1                                              84282 37149487
         LA    R15,DDEXTRA+L'DDEXTRA                              84282 37149587
         SR    R15,R14         SO WE DON'T GO TOO FAR             84282 37149687
D03CHKDS EQU   *                                                        37149787
         CLI   0(R1),C','     HAVE WE GOT THE COMMA YET?          84282 37149887
         BE    D03NGDG9       YES, MUST BE DSNAME, SKIP DEFAULT   84282 37149987
         CLI   0(R1),C'='     HAVE WE GOT AN = (KEYWORD=)         84282 37150087
         BE    D03DEFDS       YES, PUT IN THE DEFAULT DSNAME      84282 37150187
*                             BECAUSE WE DIDN'T FIND DSNAME       84282 37150287
         BXLE  R1,R14,D03CHKDS                                    84282 37150387
         B     D03NGDG9       NO = SIGN MUST BE DSNAME, SO OUT!   84282 37150487
*                                                                       37150587
D03DEFDS CLI   DDTYPE,DDGDG   IS THIS A GDG?                      84282 37150687
         BL    D03NGDG9       NO                                        37150787
         TM    DDUSE,X'C0'    NEW OR MOD?                               37150887
         BZ    D03NGDG9       NO,SO DON'T PUT IN GDG DCB                37150987
           CLI DDDSNAME,C'*'   DUMMY DATA SET ?                   75311 37151087
           BE  D03NGDG9        YES, NO NO 'JOLDCB' EITHER         75311 37151187
* TEST IF NAME IS + WITH NOCAT (IE +GDG ON DSNAME)                      37151287
         CLI   DDMBR+1,C'+'                                       75311 37151387
         BNE   D03NGDG9                                           75311 37151487
*          L   R1,AJOLGEN                                         75311 37151587
*          USING GENDETS,R1                                       75311 37151687
*          CONCAT GDGDCB,','                                      75311 37151787
********* CONCAT MACRO WONT WORK FOR MACRO GENERATED NAMES ***          37151887
*         MVC 0(L'GDGDCB,R10),GDGDCB                                    37151987
*         MVI L'GDGDCB(R10),C','                                        37152087
*         LA  R10,L'GDGDCB+1(R10)                                       37152187
*          DROP R1                                                75311 37152287
D03NGDG9 EQU   *                                                        37152387
         CLC   DDOSVB,=AL2(DDLEN) GOT 'DCBEXTRA' TO GO IN ?       82300 37152487
         BNH   D03NEXTR       NOPE                                75128 37152587
         CLI   DDEXTRA,C','   DID USER PUT ',' IN ?               75128 37152687
         BNE   D03DCBD1                                           75128 37152787
         MVC   DAPDCBDS(L'DDEXTRA-1),DDEXTRA+1                    87150 37152987
         B     D03SETEX       SET UP DCB EXTRA                    87150 37153087
D03DCBD1 MVC   DAPDCBDS(L'DDEXTRA),DDEXTRA                        87150 37154087
D03SETEX SETUP DAPDCBDS                                                 37155087
         MVC   DDOSVB,=AL2(DDLEN) TELL US WE HAVE USED DDEXTRA    87150 37155187
         B     D03NEXTR       SKIP AROUND NEXT PART               87150 37156087
*                                                                 75128 37160000
D03NEXTR DS    0H                                                       37341087
         IFNULL DDRECFM,NORECFM                                         37360000
         SETSPEC DDRECFM,DAPRECFM,                                     *37370000
               (M,02),(A,04),(S,08),(B,10),(T,20),(V,40),              *37380000
               (F,80),(0,C0)                                            37390000
         IFNULL DDRECFM,D03RECOK                                        37400000
         JOLERR 401,'INVALID RECFM ''',DDRECFM,''' FOUND'               37410004
         FIX   'BUT WHAT?'                                              37420011
D03RECOK EQU   *                                                        37430000
         SETUP DAPRECFM                                                 37440000
NORECFM  IFNULL DDBLKSZE,NOBLKSZE                                       37450000
         SETUP DAPBLKSZ,DDBLKSZE                                  76200 37460000
NOBLKSZE IFNULL DDLRECL,NOLRECL                                         37470000
         SETUP DAPLRECL,DDLRECL                                   76200 37480000
NOLRECL  IFNULL DDBUFNO,NOBUFNO                                         37490000
         SETUP DAPBUFNO,DDBUFNO                                   76200 37500000
NOBUFNO  DS    0H                                                       37510000
         IFNULL DDOPTCD,D03OPTOK                                        37520000
         SETSPEC DDOPTCD,DAPOPTCD,                                     *37530047
               (R,01),(T,02),(Z,04),(A,08),(Q,08),(F,10),              *37540000
               (H,10),(O,10),(C,20),(E,20),(B,40),(U,40),              *37550000
               (W,80)                                                   37560000
         IFNULL DDOPTCD,D03OPTOK                                        37570000
         JOLERR 402,'OPTCD INVALID:-',DDOPTCD                           37580004
D03OPTOK EQU   *                                                        37590000
*        SETUP DALOPTCD                                                 37600000
NOOPTCD  IFNULL DDRKP,NORKP                                             37610000
         JOLERR 403,'DYNAMIC ALLOCATION WILL NOT ALLOW RKP'             37620004
NORKP    IFNULL DDKEYLEN,NOKEYLEN                                       37630000
         SETUP DAPKYLEN,DDKEYLEN                                  76200 37640000
NOKEYLEN IFNULL DDOVERFL,NOOVERFL                                       37650000
         JOLERR 404,'DYNAMIC ALLOCATION WILL NOT ALLOW CYLOFL'          37660004
NOOVERFL IFNULL  DDDENS,NODENS                                          37670000
         SR    R15,R15                                                  37680000
         IC    R15,DDDENS                                               37690000
         SH    R15,=XL2'00F0' MAKE FULL NUMERIC                         37700000
         LA    R1,=X'034383C3D3'                                        37710000
         IC    R14,0(R1,R15)                                            37720000
         STC   R14,DAPDEN                                               37730000
         SETUP DAPDEN                                                   37740000
NODENS   EQU *                                                          37750000
           IFNULL DDDSORG,NODSORG                                       37760000
         SETSPEC DDDSORG,DAPDSORG,                                     *37770000
               (TC,0004),          TCAM  3705                          *37780000
               (VS,0008),          VSAM                                *37790000
               (TQ,0020),          TQ  MESSAGE QUEVE                   *37800000
               (TX,0040),          TX  LINE GROUP                      *37810000
               (GS,0080),          GRAPHICS                            *37820000
               (PO,0200),(POU,0300),                                   *37830000
               (MQ,0400),(CQ,0800),(CX,1000),                          *37840000
               (DA,2000),(DAU,2100),                                   *37850000
               (PS,4000),(PSU,4100)                                     37860000
         IFNULL DDDSORG,D03DSOOK                                        37870000
         JOLERR 407,'DDSORG.INVALID',DDDSORG                            37880004
D03DSOOK SETUP DAPDSORG                                                 37890000
NODSORG  EQU   *                                                        37900000
         IFNULL  DDCODE,D03NCODE                                        37910000
         SETSPEC DDCODE,DAPCODE,                                       *37920000
               (T,02),(A,04),(C,08),(B,10),                            *37930000
               (F,20),(I,40),(N,80)                                     37940000
         IFNULL DDCODE,D03CDEOK                                         37950000
         JOLERR 406,'CODE INVALID',DDCODE                               37960015
D03CDEOK SETUP DAPCODE                                                  37970000
D03NCODE EQU  *                                                         37980000
         IFNULL  DDBUFL,D03NBUFL                                        37990000
         SETUP DAPBUFL,DDBUFL                                     76200 38000000
D03NBUFL EQU  *                                                         38010000
         IFNULL  DDFUNC,D03NOFUN                                        38020000
         SETSPEC DDFUNC,DAPFUNC,(I,80),(P,20),(R,40),(W,10)             38030000
D03NOFUN EQU  *                                                         38040000
         TM   DDSPECT2,X'10'      TRACE?                                38050000
         BZ   D03NTRAC                                                  38060000
         SETUP DAPDIAGN                                                 38070000
D03NTRAC TM   DDSPECTP,X'C0'      ACCEPT OR SKIP ERRORS?                38080000
         BZ   D03NOERR                                                  38090000
         TM   DDSPECTP,X'80' SKIP? GIVE IT PRECEDENCE...                38100000
         BZ   D03ACC                                                    38110000
         MVI   DAPEROPT,X'40'      SKIP                                 38120000
D03SETER SETUP DAPEROPT                                                 38130000
         B    D03NOERR                                                  38140000
D03ACC   MVI   DAPEROPT,X'80'      ACCEPT                               38150000
         B     D03SETER                                                 38160000
D03NOERR EQU  *                                                         38170000
         CLC   DDOSVB,=AL2(DDLEN) STILL GOT 'DCBEXTRA' TO GO IN ? 75311 38180000
         BNH   ENDDCB         NOPE                                87150 38190089
         JOLERR 408,'DCB-EXTRA NOT SUPPORTED WITH DYNAMIC ALLOCATION'   38200004
ENDDCB   EQU *                                                          38220000
           EJECT                                                        38230000
         TM  DDSPECT2,X'08'     FREE AT CLOSE??                         38240000
         BZ  D03NOCLS                                                   38250000
         SETUP DAPCLOSE                                                 38260000
D03NOCLS EQU  *                                                         38270000
NODCB    EQU *                                                          38280000
         CLC DDOSVB,=AL2(DDCATLGS-DDOSVB+2) SHORT RECORD ?              38290000
         BNH NOSPACE                                                    38300000
         IFNULL DDPRIM,DDSEC,DDDIRECT,NOSPACE                           38310000
         CLI   DDCYLTRK,C'B'  BLOCK ALLOCATION ?         JOL30078 76200 38320000
         BNE   D03SPCNM       NORMAL SPACE ALLOC (C | T) JOL30078 76200 38330000
         IFNULL DDBLKSZE,NOSPACE IF NO BLK -> OUT        JOL30078 76200 38340000
D03SPCNM EQU   *                                         JOL30078 76200 38350000
         FIX   'USE SPECIAL NEW (3.1) BLK SIZE)'         JOL30078 76200 38360000
         IFNULL DDCYLTRK,TRYPRIM                                        38370000
         CLI   DDCYLTRK,C'T'                                            38380000
         BNE   D03TCYL                                                  38390000
         SETUP DAPTRK                                             76200 38400000
         B     TRYPRIM                                                  38410000
D03TCYL  CLI DDCYLTRK,C'C'              CYLS SPECIFIED ?                38420000
         BNE   D03TABS                                                  38430000
         SETUP DAPCYL                                             76200 38440000
         B     TRYPRIM                                                  38450000
D03TABS  CLI   DDCYLTRK,C'A'  ABSTRACK                            75128 38460000
         BNE   D03TBLK                                            75128 38470000
         JOLERR 411,'ABSTRK NOT SUPPORTED IN DYNAMIC ALLOCATION'        38480016
         B     TRYPRIM                                            75128 38490000
D03TBLK  CLI DDCYLTRK,C'B'                   BLOCKS SPECIFIED           38500000
         BNE   D03SERR                                                  38510000
         SETUP DAPBLKLN,DDBLKSZE                                  76200 38520000
         B     TRYPRIM                                                  38530000
D03SERR  JOLERR 412,'INVALID SPACE ALLOCATION:-',DDCYLTRK               38540016
         B     TRYPRIM                                                  38550000
TRYPRIM  EQU *                                                          38560000
         IFNULL DDPRIM,D03TSEC                                          38570000
         SETUP DAPPRIME,DDPRIM                                          38580000
D03TSEC  IFNULL DDSEC,D03TDIR                                           38590000
         SETUP DAPSECND,DDSEC                                     76200 38600000
D03TDIR  IFNULL DDDIRECT,D03TRLSE                                       38610000
         SETUP DAPDIR,DDDIRECT                                    76200 38620000
D03TRLSE TM    DDSPECT2,X'02' NORLSE CODED ?                      75128 38630000
         BO    D03TCONT         NORLSE CODED, TEST IF CONTIG            38640000
         CLI   DDCYLTRK,C'A'   ABSTR CANT HAVE RLSE                     38650000
         BE    D03TCONT                                                 38660000
         SETUP DAPRLSE                                            76200 38670000
D03TCONT EQU  *                                                         38680000
         TM    DDSPECT2,X'80' CONTIG CODED ?                      75128 38690000
         BZ    D03TMXIG       TEST IF MXIG WAS                    75128 38700000
         MVI   DAPSPFRM,X'08'      CONTIG                               38710000
D03SPCF  SETUP DAPSPFRM                                                 38720000
         B     D03COMM1       TEST ROUND NOW                      75128 38730000
         SPACE 3                                                  75128 38740000
D03TMXIG TM    DDSPECTP,X'04' MXIG ON ?                           75128 38750000
         BZ    D03TALX                                            75128 38760000
         MVI   DAPSPFRM,X'04'      MXIG                                 38770000
         B     D03SPCF                                                  38780000
         SPACE 3                                                  75128 38790000
D03TALX  TM    DDSPECTP,X'02' ALX ?                               75128 38800000
         BZ    D03COMM1                                                 38810000
         MVI   DAPSPFRM,X'02'      ALX                                  38820000
         B     D03SPCF                                                  38830000
D03COMM1 EQU   *                                                        38840000
D03TROUN TM    DDSPECTP,X'01'  ROUND ?                                  38850000
         BZ    D03NOTRN                                           75128 38860000
         SETUP DAPROUND                                                 38870000
D03NOTRN EQU   *                                                        38880000
NORLSE   EQU   *                                                  76200 38890000
NOSPACE    EQU *                                                        38900000
TUNIT      EQU *                                                        38910000
           TM  DDUSE,X'02'     DEFER ON ?                         75311 38920000
           BO  D03ISUST        YES,UNIT MUST BE OUTPUT THEN       75311 38930000
         FIX   'PASSWORD UP MUCH HIGHER'                                38940000
           IFNULL DDUNIT,DDUNITNO,NOUNIT                          75311 38950000
D03ISUST   EQU *                                                  75311 38960000
           SPACE                                                        38970000
           TM DDUSE,1          UNIT AFFINITY ?                          38980000
           BZ NOTAFF                      NO,SO PROCESS REST OF UNIT    38990000
D03AFF     EQU  *                                                       39000000
           CONCAT ',UNIT=AFF=',DDUNIT                             74303 39010017
           FIX 'RDJFCB, TIOT,  GET UNIT AND AFF'                        39011047
           B  ENDUNIT                                                   39020000
NOTAFF     EQU *                                                        39030000
*        L     R1,AGENDETS                                        75128 39040000
*        USING GENDETS,R1                                         75128 39050000
*        L     R1,ASWAPUNI                                        75128 39060000
*        DROP  R1                                                 75128 39070000
*        LM  R14,R15,4(R1)                                              39080000
*        L  R1,0(R1)                                                    39090000
*        CLC DDUNIT,0(R1)                                               39100000
*        BE  D03SWAP                                                    39110000
*        BXLE R1,R14,*-10                                               39120000
*        B  D03NOSWP                                                    39130000
*D03SWAP  MVC  DDUNIT,8(R1)                                             39140000
D03NOSWP EQU  *                                                         39150000
         SETUP DAPUNIT,DDUNIT                                     76200 39160000
         SPACE                                                          39170000
******* VETS WILL DO THIS LATER ***** **************                    39180000
         CLC =C'IS ',DDDSORG                                            39190000
         BNE D03NIS          NOT AN IS DATA SET                         39200000
         MVI DDUNITNO,C'P'    SET UP PARALLEL MOUNTING                  39210000
D03NIS   DS    0H                                                       39220015
* NOW TEST THE UNIT COUNT                                               39230000
         IFVALUE DDUNITNO,D03UNO UNIT NUMBER -> YES, PUT IT IN  75311   39240000
         TM    DDUSE,X'02'       WELL, IS DEFER ON ?            75311   39250015
         BZ    UNITLEFT                                                 39260015
         SPACE 1                                                75311   39270000
D03UNO   EQU *                                                  75311   39280000
         CLI   DDUNITNO,C'P'  PARALLEL ?                          76200 39290000
         BE    D03PARXX                                           76200 39300000
         SETUP DAPUNCNT,DDUNITNO                                  76200 39310000
         B     ENDUNIT                                            76200 39320000
D03PARXX SETUP DAPPARAL       SETUP PARALLEL                      76200 39330000
NOUNITNO DS    0H                                                       39340015
*        AIF   (&X8).X8600                                       88036  39340119
         TM    DDUSE,X'02'    DEFER ?                             75128 39341015
         BZ    UNITLEFT       NO,ADD ')'                          75128 39350000
         SETUP DAPDEFER                                           87150 39360047
.X8600   ANOP                                                    88036  39361015
UNITLEFT DS    0H                                                 76200 39370015
ENDUNIT  DS    0H                                                       39380015
NOUNIT   DS    0H                                                       39390015
* THIS NEXT SECTION OF CODE ADDS THE LABEL PARAMETER.             75128 39400000
         SPACE 1                                                        39410000
         CLI   DDTYPE,DDSYSIN SYSIN? ALWAYS PUT 'IN'     JOL30056 76200 39420000
         BNE   D03TPUN                                                  39430000
         MVI   DAPINOUT,X'40'                                           39440000
         SETUP DAPINOUT                                                 39450000
         B     NOLABEL                                                  39460000
D03TPUN  CLI   DDTYPE,DDPUNCH SYSOUT OR SOMESUCH ?                76200 39470000
         BNH   NOLABEL        YES, DON'T PUT A LABEL IN           75128 39480000
* IF ANY OF THE LABEL PARAMETERS ARE SPECIFIED, WE MUST OUTPUT    75128 39490000
*  THE LABEL PARAMETER, BUT FURTHERMORE, WE MUST ADD 'IN' / 'OUT' 75128 39500000
*  UNDER SPECIAL CIRCUMSTANCES, EG IF A TAPE ETC FOR FORTRAN      75128 39510000
         IFVALUE DDLABEL,DDLABTYP,MAKELAB                JOL30056 76200 39520000
         TM    DDSPECTP,B'00110000' PASSWORD | NOPREAD?  JOL30056 76200 39530000
         BM    MAKELAB                                   JOL30056 76200 39540000
* NOW IF INPUT, PUT LABEL IN, UNLESS IT IS '&&UT'; THIS  JOL30056 76200 39550000
*  MAY BE A PASSED WORK DATA SET.                        JOL30056 76200 39560000
         CLC   =C'&&UT',DDDSNAME                         JOL30056 76200 39570000
         BE    NOLABEL                                   JOL30056 76200 39580000
* NOW TEST INPUT                                         JOL30056 76200 39590000
         TM    DDDISP,B'11010000'                                       39600000
         BZ    MAKELAB             YES                   JOL30056 76200 39610000
* WE USED TO PUT LABEL OUT ESPECIALLY FOR TAPES.         JOL30056 76200 39620000
* THERE APPEARS TO BE NO REASON TO DO THIS AT ALL,       JOL30056 76200 39630000
*  BECAUSE QSAM WILL OPEN IT HOWEVER THE PROGRAMMER      JOL30056 76200 39640000
*  SPECIFIES, AND BSAM (FORTRAN) WILL OPEN IT AS OUT/IN  JOL30056 76200 39650000
*  WHICH WILL BE OK ANYWAY                               JOL30056 76200 39660000
         B     NOLABEL                                   JOL30056 76200 39670000
MAKELAB  EQU *                                                          39680000
         IFNULL DDLABEL,NOFLSEQ                                         39690000
         SETUP DAPDSSEQ,DDLABEL                                         39700000
NOFLSEQ  DS    0H                                                       39710000
         IFNULL DDLABTYP,D03TPROT  NO LABEL TYPE, GO TEST PROTECT 75128 39720000
         SETSPEC DDLABTYP,DAPLABEL,                                    *39730000
               (0,02),        SL                                       *39740000
               (1,01),        NL                                       *39750000
               (2,10),        BLP                                      *39760000
               (3,08),        SUL                                      *39770000
               (4,04),        NSL                                      *39780000
               (5,40),        AL                                       *39790000
               (6,21),        LTM                                      *39800000
               (7,48)         AUL                                       39810000
         SETUP DAPLABEL                                                 39820000
D03TPROT EQU   *                                                        39830000
         TM    DDSPECTP,X'20' 'PASSWORD' ?                        75128 39840000
         BZ    D03TREAD       -> NO, CHECK 'NOPWREAD'             75128 39850000
         MVI   DAPPASPR,X'30' READ,NOWRITE                              39860000
D03SETPW SETUP DAPPASPR                                                 39870000
         B     D03TINOU       NOW TEST IN,OUT REQD                75128 39880000
D03TREAD TM    DDSPECTP,X'10' 'NOPWREAD'                          75128 39890000
         BZ    D03TINOU       NOPE                                75128 39900000
         MVI   DAPPASPR,X'10' NOREAD/WRITE WITHOUT PASSWORD             39910000
         B     D03SETPW                                                 39920000
D03TINOU EQU   *                                                        39930000
         TM  DDDISP,B'11010000'     OLD OR NEW?                         39940000
         BNZ   D03OUT                                             75128 39950000
         MVI   DAPINOUT,X'40' IN                                        39960000
         B     D03SETIN                                                 39970000
D03OUT   B     D03TRETP       *********                  JOL30056 76200 39980000
         FIX   'DOES ANYBODY KNOW WHAT TO FIX?'                         39990011
         TM    DDUNITYP,X'80' TEST IF TAPE               JOL30056 76200 40000000
         BO    D03TRETP       NO, DON'T PUT OUT ON LABEL.JOL30056 76200 40010000
         MVI   DAPINOUT,X'80' OUT                                       40020000
D03SETIN SETUP DAPINOUT                                                 40030000
D03NOIN  EQU   *                                                  75128 40040000
D03TRETP EQU   *                                                        40050000
         CLI   DDRETPD,C'R'   RETENTION PERIOD ?                        40060000
         BNE   D03TEXPD       NO,TRY EXPIRY DATE THEN                   40070000
         SETUP DAPRETPD,DDEXPDT                                         40080000
         B  D03ENDLB                                                    40090000
D03TEXPD IFNULL DDEXPDT,D03ENDLB                                        40100000
D03EXPDT SETUP DAPEXPDT,DDEXPDT                                   76200 40110000
         B     D03ENDLB                                           75128 40120000
D03ENDLB EQU  *                                                         40130000
NOLABEL  DS   0H                                                        40140000
         TM    DDSPECTP,X'08' PRIVATE EXPLICITY CODED?            75128 40150000
         BO    D03PRIV                                            75128 40160000
         TM DDUNITYP,B'01100000' PERM OR PREFERRED TO STAY MOUNTED?     40170000
         BNZ   D03PREF                                            75128 40180000
         IFNULL DDVOLUME,D03PREF                                  75128 40190000
         CLI DDDSNAME,C'&&'    TEMPORARY CAN HAVE PRIVATE ??            40200000
         BE  D03PREF                                                    40210000
* NOW CHECK IF THE VOLUME IS IN THE 'RETVOLS' CSECT                     40220000
*        L  R1,AGENDETS                                                 40230000
*        USING GENDETS,R1                                               40240000
*        L   R1,ARETVOLS                                                40250000
*        LM  R14,R15,4(R1)   LOAD BXLE CONSTANTS                        40260000
*        DROP  R1                                                       40270000
*        L   R1,0(R1)        LOAD START OF TABLE                        40280000
*        CLC   =C'ALL ',0(R1)                                     75128 40290000
*        BE    D03PREF                                            75128 40300000
*        CLC   =C'NONE ',0(R1)                                    75128 40310000
*        BE    D03PRIV                                            75128 40320000
*D03TRET  CLC DDVOLUME(6),0(R1) VOLUME IN TABLE ?                       40330000
*         BE  D03PREF         YES,DON'T PUT PRIVATE ON DDCARD           40340000
*         BXLE R1,R14,D03TRET                                           40350000
D03PRIV  SETUP DAPPRIVT                                           76200 40360000
D03PREF  EQU   *                                                  76200 40370000
         CLI  DDDISP+1,C'P'   PASS ON ?                           75128 40380000
         BNE   NORETAIN                                           75128 40390000
         CONCAT 'RETAIN,'                                               40400017
         B     D03TSEQ                                            75128 40410000
NORETAIN EQU   *                                                        40420000
D03TSEQ  CLC DDOSVB,=AL2(DDCATLGS-DDOSVB+2) SHORT RECORD ?      75128   40430000
         BNH  D03NCXX                                           75128   40440000
         IFNULL DDVOLSEQ,D03TMAX                                        40450000
         SETUP DAPVLSEQ,DDVOLSEQ                                  76200 40460000
D03TMAX  IFNULL DDMAXVOL,D03NCXX                                        40470000
         SETUP DAPVLCNT,DDMAXVOL                                  76200 40480000
D03NCXX  EQU  *                                                         40490000
         CLI   DDVOLUME,C'*'  VOLREF ?                            75128 40500000
         BE VOLREF                                                      40510000
         IFNULL  DDVOLUME,ENDVOL                                        40520000
         MVC   DAPVLSE1,DDVOLUME                                        40530000
         MVI   DA#VLSER+1,1  SETUP 1 VOLUME                             40540000
         CLC   DDVOLUME+6(6),BLANKS                                     40550000
         BE    D03EVOLS                                                 40560000
         MVC   DAPVLSE2,DDVOLUME+6                                      40570000
         MVI   DA#VLSER+1,2   SETUP 2 VOLUMES                           40580000
         CLC   DDVOLUME+12(6),BLANKS                                    40590000
         BE    D03EVOLS                                                 40600000
         MVC   DAPVLSE3,DDVOLUME+12                                     40610000
         MVI   DA#VLSER+1,3                                             40620000
         CLC   DDVOLUME+18(6),BLANKS                                    40630000
         BE    D03EVOLS                                                 40640000
         MVC   DAPVLSE4,DDVOLUME+18                                     40650000
         MVI   DA#VLSER+1,4                                             40660000
         CLC   DDVOLUME+24(6),BLANKS                                    40670000
         BE    D03EVOLS                                                 40680000
         MVC   DAPVLSE5,DDVOLUME+24                                     40690000
         MVI   DA#VLSER+1,5                                             40700000
         CLC   DDVOLUME+30(6),BLANKS                                    40710000
         BE    D03EVOLS                                                 40720000
         MVC   DAPVLSE6,DDVOLUME+30                                     40730000
         MVI   DA#VLSER+1,6                                             40740000
         CLC   DDVOLUME+36(6),BLANKS                                    40750000
         BE    D03EVOLS                                                 40760000
*        MVC   DAPVLSE7,DDVOLUME+36                                     40770000
*        MVI   DA#VLSER+1,7                                             40780000
D03EVOLS SETUP DAPVLSER                                                 40790000
         B  ENDVOL                                                      40800000
VOLREF   EQU   *                                                        40810000
         FIX   'VOLREF'                                                 40811083
         B     D03TPASS                                                 40812083
         MVC 0(L'DDVOLUME-1,R10),DDVOLUME+1 SHIFT VOLREF DSN            40820000
         LA R10,L'DDVOLUME-1(R10)                                       40830000
         SETUP DAPVLRDS,DDVOLUME+1                                76200 40840000
D03TPASS CLI   DDDISP+1,C'P'  PASS ON ? -> MAKE RETAIN            75128 40850000
         BNE   ENDVOL                                           75128   40860000
ENDVOL   EQU *                                                          40870000
         CLI DDDDNAME,C'%'   DISPOSITION PROCESSING INSTRUCTION?        40880000
         BNE D03ORDDD                                                   40890000
         MVC WORK+2(5),DDDDNAME+1                                       40900000
         B   D03OPOP                                                    40910000
D03ORDDD EQU  *                                                         40920000
         TM  DDUSE,X'C0'   USES?                              75128     40930000
         FIX   'BO  D03$VU'                                       75128 40940000
         IFNULL DDDDNAME,D03NDD                                         40950000
         SETUP DAPDDNAM,DDDDNAME                                        40960000
D03NDD   DS   0H                                                        40970000
D03OPOP  EQU  *                                                         40980000
*        SETUP DAPPERMA                                         76200   40990000
* TELL DYNALLOC TO RETURN THE DSNAME AND DDNAME TOO.                    41000000
         SETUP DAPRTDDN                                                 41010000
         SETUP DAPRTDSN                                                 41020000
         SETUP DAPRTVOL                                                 41021066
         MVC   DAVRTDDN,=H'8'    REINTIALISE MAX LENGTH OF DDNAME       41030000
         MVC   DAVRTDSN,=H'44'   REINTIALISE MAX LENGTH OF DSNAME       41040000
         MVC   DAVRTVOL,=H'6'    REINTIALISE MAX LENGTH OF VOLUME       41041069
         MVC   #ERETDDN,=H'0'    SET RETURN LENGTH TO ZERO              41050000
         MVC   #ERETDSN,=H'0'    SET RETURN LENGTH TO ZERO              41060000
         MVC   #ERETVOL,=H'0'    SET RETURN LENGTH TO ZERO              41061066
         SPACE 2                                                        41070000
* THE PARAMETER LIST HAS BEEN SET-UP, APART FORM THE PARAMETERS         41080000
*  TO SVC 99 PROPER.                                                    41090000
* LEST DO THEM                                                          41100000
         SH    R10,=H'4'       BACK OFF 4 BYTES FOR LAST PARM           41110000
         MVI   0(R10),X'80' -4 SET END                                  41120000
         LA    R1,S99RB                                                 41130000
         ST    R1,CALLAREA                                              41140000
         MVI   CALLAREA,S99RBPND                                        41150000
         SPACE 2                                                        41160000
         MVI   S99RBLN,20     LENGTH OF REQUEST BLOCK                   41170000
         MVI   S99VERB,S99VRBAL ALLOCATION VERB                         41180000
         SPACE 2                                                        41190000
         TESTAUTH                                                       41200000
         LTR   R15,R15                                                  41210062
         BNZ   D03NOTAU                                                 41220062
S99AUTH  EQU   S99WTVOL+S99WTDSN+S99WTUNT+S99OFFLN+S99MOUNT             41230000
         MVI   S99FLG21,S99AUTH                                         41240000
D03NOTAU EQU   *                                                        41250000
         LA    R1,S99RB                 REQUEST BLOCK POINTER           41260000
         L     R15,=V(DYNDUMP)          GET DUMP ROUTINE                41270000
         LTR   R15,R15                                                  41280000
         BZ    D03REALA                                                 41290000
         B     D03REALA                                                 41291062
         WXTRN DYNDUMP                                                  41300000
         BALR  R14,R15                  GO TO IT                        41310000
D03REALA LA    R1,CALLAREA                                              41320000
         DYNALLOC                                                       41330000
*                                                                       41340000
*  CHECK TO SEE IF ERRORS OCCURED.                                      41350000
*                                                                       41360000
         ST    R15,CALLAREA+12          SAVE DYNALLOC RETURN CODE       41370000
         LTR   R15,R15                                                  41380000
         BNZ   D03ERR                RETURN CODE ZERO                   41390000
         L     R0,S99ERROR           TEST ERR AND INFO CODE             41400000
         LTR   R0,R0                 ERROR ?                            41410000
         BNZ   D03ERR                                                   41420039
D0399OK  L     R15,CALLAREA+12      RESTORE DYNALLOC RETURN CODE        41421039
         MVC   #ERETDDN(10),DAVRTDDN COPY RETURNED DDNAME               41422039
         MVC   #ERETDSN(46),DAVRTDDN COPY RETURNED DSNAME               41423039
         MVC   #ERETVOL(8),DAVRTVOL  COPY RETURNED VOLUME               41423166
         JOLRETN                                                        41424039
         DC H'0'    ABEND                                               41425039
D03ERR   LA    R1,S99RB                                                 41435039
         LR    R0,R15          R15                                      41435139
         $CALL UJD03ERR                                                 41436039
         CLC   S99ERROR,=X'0410'      DDNAME NOT AVALIABLE ?            41436190
         BNE   D03NDDNM                                                 41436287
         CALL  ASKFREE         ASK IF WE SHOULD FREE DDNAME             41436387
         LTR   R15,R15                                                  41436487
         BZ    D03REALA        TRY AGAIN                                41436587
D03NDDNM MVC   #ERETDDN(10),DAVRTDDN COPY RETURNED DDNAME               41437087
         MVC   #ERETDSN(46),DAVRTDDN COPY RETURNED DSNAME               41438039
         MVC   #ERETVOL(8),DAVRTVOL  COPY RETURNED VOLUME               41439066
         JOLRETN RC=4                                                   41445039
         AGO   .NED            SKIP UNUSED CODE                  88036  41455033
* NOW CHECK IF THE JCL CARD WE GENERATED WAS ONE FOR 'USES'       75128 41930000
*  AND IF SO WE ALTER THE DISPOSITION, PUT IN A VREF, AND         75128 41940000
*  GENERATE IT AGAIN.                                             75128 41950000
         TM    DDDISP,X'C0'   USES ?                              75128 41960000
         BO    D03USE2        YES                                 75128 41970000
         JOLRETN RC=0         NO, FINISHED, SO RETURN NOW         75128 41980000
D03USE2  NI    DDUSE,X'3F'    MAKE OLD NOW                        75128 41990000
         MVC   DDDDNAME,LABEL (WHERE WE SAVED THE REAL DDNAME)    75128 42000000
         CLEAR DDVOLUME                                           75128 42010000
         MVC   DDVOLUME(7),=C'**.$$VU'                            75128 42020000
         MVC   DDVOLUME+7(4),DDSTMT                               75128 42030000
         OC    DDVOLUME+7(4),=C'0000'                                   42040000
         MVI   DDRECFM,C'%'     MAKE NODCB, COS IF THE DATASET          42050000
*                                     IS OLD, WE DONT WANT TO DESTROY   42060000
*                             THE OLD DCB IN THE LABEL                  42070000
         XC    #WORK(18),#WORK                                    75128 42080000
         LA    R10,WORK+15                                        75128 42090000
         B     D03TDSN                                            75128 42100000
         JOLRETN                                                        42110000
.NED     ANOP                                                    88036  42111033
         AIF   ('&TYPE' NE 'SCHED').COMPAL1                             42120000
TRANS    DS    CL300                                                    42130000
.COMPAL1 ANOP                                                           42140000
         DC  100S(*)                                                    42150000
         LTORG                                                          42160000
DYNCON   CSECT                                                          42170000
         COPY     DYNAREAS                                              42180000
         LTORG                                                          42190000
         DC C'COMPILE DATE=&SYSDATE.,TIME=&SYSTIME.'               DASD 42200000
         LTORG                                                     DASD 42210000
         DS    0D                                                       42220000
         PRINT GEN,NODATA                                               42230000
         AIF  (NOT &X8).NOX8MAC                                         42240000
         TITLE 'FIXED LOW CORE'                                         42250000
         XAMFLC  DSECT=YES                                              42260000
PSA      EQU   FLC                                                      42270000
PSATOLD  EQU   FLCTOLD            FOR MVS,F4 COMPATIBILITY              42280000
         TITLE 'COMMUNICATIONS VECTOR TABLE'                            42290000
         XAMCVT  DSECT=YES                                              42300000
         TITLE 'TASK CONTROL BLOCK    '                                 42310000
         XAMTCB  DSECT=YES                                              42320000
TCBFLGS1 EQU   TCBFLAG1       EQUIVALENT FIELDS ON F4,X8                42330000
         TITLE 'REQUEST BLOCK         '                                 42340000
         XAMRB   DSECT=YES                                              42350000
         TITLE 'FILE CONTROL TABLE    '                                 42360000
         XDDFCT                                                         42370000
         TITLE 'JOB-STEP CONTROL BLOCK'                                 42380000
         XDDJSCB                                                        42390000
JSCBLEN  EQU   *-JSCB         MY NAME FOR ITS LENGTH                    42400000
JSCBDISP EQU   0              MVS,F4 NAME FOR DISPLACEMENT TO START     42410000
JSCBOPTS EQU   JSCBSTS                                                  42420000
         TITLE 'COMMAND SCHEDULER CONTROL BLOCK'                        42430000
         XDDCSCB                                                        42440000
         TITLE 'PDS DIRECTORY ENTRY'                                    42440112
         KAAPDS                                                         42441012
.NOX8MAC ANOP                                                           42450000
           END                                                          42460000
