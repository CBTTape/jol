$JOLSH40 TITLE 'JOL TRANSIENT SCHEDULER AND INSTRUCTION HANDLER'        00010000
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1971,1972,1973,1974,1975,1976  00020000
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1980,1981,1982.                00030000
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-E001.           00040000
         SPACE 3                                                        00050000
*                   J             000000            L                   00060000
*                   J            0      0           L                   00070000
*                   J           0        0          L                   00080000
*                   J          0          0         L                   00090000
*                   J         0            0        L                   00100000
*                   J         0            0        L                   00110000
*                   J         0            0        L                   00120000
*                   J         0            0        L                   00130000
*                   J         0            0        L                   00140000
*                   J         0            0        L                   00150000
*                   J         0            0        L                   00160000
*        J          J         0            0        L                   00170000
*         J        J           0          0         L                   00180000
*          J      J             0        0          L                   00190000
*           J    J               0      0           L                   00200000
*            JJJJ                 000000            LLLLLLLLLLL         00210000
           SPACE 3                                                      00220000
* LAST SOURCE UPDATE MAR 1982 BY J SUMMERFIELD                          00230000
*                                   OF KURRAWANG COMPUTER PROGRAMMING   00240000
*   CHANGES:-                                                           00250000
*     1. OSIV/X8 SUPPORT                                                00260000
* LAST SOURCE UPDATE 26/8/1981   BY CVC.                                00270000
*   CHANGES:-                                                           00280000
*     1. FIX 800 BPI TAPE PROBLEM                                       00290000
*     2. ALLOW JOL TO USE PROGRAMS IN LPALIB                            00300000
* FOLLOWING FIXES CODED, SEPT 7,1976                                    00310000
*                                                                       00320000
*CHG26028      PROVIDE SUPPORT FOR 'IF ERROR'                           00330000
*CHG30002      AS ABOVE                                                 00340000
*CHG30062      HIGHLIGHT ERROR MESSAGES ETC MORE                        00350000
*JOL30112      PROVIDE SUPPORT FOR DELETE GDGALL                        00360000
*JOL30114      ALLOW UP TO 5 LEVELS OF MACROS                           00370000
*JOL30115      CLOSE FILES BEFORE ABENDING                              00380000
*JOL30116      FIX DELETE TEMPORARY DATA-SETS                           00390000
* ALSO UPDATE CAMLIST,SCRATCH ETC MACROS FOR VS RETURN CODES            00400000
********************************************************************    00410000
*                                                                       00420000
*            JOL EXECUTE 'INITIATOR/SCHEDULER'                          00430000
*                                                                       00440000
*                                                                       00450000
*                                                                       00460000
*                                                                       00470000
*                                                                       00480000
*                                                                       00490000
* NOTE: MANY MACRO NAMES ARE THE SAME AS THOSE USED IN THE JOL          00500000
*     COMPILER,BUT THEIR GENERATED CODE DIFFERS VERY SLIGHTLY           00510000
*     FROM THE OTHER MODULES,EVEN THOUGH THE FUNCTION IS THE SAME       00520000
********************************************************************    00530000
           SPACE 1                                                      00540000
*********************************************************************** 00550000
*                                                                       00560000
*                                                                       00570000
* DUE TO THE FAILURE OF IBM JOBQ MANAGEMENT ROUTINES (EITHER TO MY      00580000
*    UNDERSTANGING OR IBM'S DOCUMENTATION) SOME 'EMERGENCY' TYPE        00590000
*    CODE ALTERATION IS GOING ON TO GET JOL TO FUNCTION UNDER           00600000
*    VS1. NOTE THAT MVS USES THE STANDARD IBM CODE.                     00610000
*                                                                       00620000
* CODE MARCH 7,1976: ALL MARKED '*****' IN COLS 67-71                   00630000
*    SEE ALSO  'UJEJOB' CSECT FOR CHANGES                               00640000
*                                                                       00650000
*********************************************************************** 00660000
           SPACE 3                                                      00670000
           MACRO                                                        00680000
           EYEBALL &A                                                   00690000
          DC   0D'0',4CL8'&A'                                           00700000
           MEND                                                         00710000
           SPACE 6                                                      00720000
           MACRO                                                        00730000
&NAME      JOLERR &STMT=STMT                                            00740000
.* THIS MACRO WILL PUT INTO A LOCATION A STRING OF CHARACTERS           00750000
.* THE STRING MAY BE IN A BUFFER OR JOL MAY ITSELF CONTROL              00760000
.*   THE WHERE-ABOUTS OF THE ERROR MESSAGE.                             00770000
.*                                                                      00780000
.* SYSLIST(1) IS TAKEN TO BE THE ERROR SEVERITY AND ALSO THE            00790000
.*   ERROR NUMBER.                                                      00800000
           LCLA &LITPOSN,&LITLEN                                        00810000
           LCLC &CSECT,&ERRNO                                           00820000
           LCLC &JOLERR,&CHAR1                                          00830000
           LCLA &LENGTH,&THIS,&NOVAR,&POSN,&L,&K,&STMTLEN               00840000
&STMTLEN   SETA 4                                                       00850000
&CSECT     SETC '&SYSECT'(3,3)                                          00860000
&ERRNO     SETC '&SYSLIST(1)'(2,K'&SYSLIST(1)-1)                        00870000
&CHAR1     SETC '&SYSLIST(1)'(1,1)                                      00880000
         AIF   ('&STMT' EQ 'STMT').ORDSTMT                              00890000
           MVC S23STMT,&STMT MOVE NON-STANDARD STATEMENT NUMBER IN      00900000
.ORDSTMT   ANOP                                                         00910000
*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-*   00920000
&NAME      BAL 14,UJS23EP&CHAR1 LINK TO APPROPRIATE ERROR POINT         00930000
&JOLERR    SETC '&CSECT-&ERRNO'                                         00940000
ER&CSECT&ERRNO MVC 0(8,1),=CL8'&JOLERR' ERROR CODE IN CROSS-REF LIST    00950000
E&SYSNDX   EQU   ER&CSECT&ERRNO                                         00960000
&THIS      SETA  2                                                      00970000
.LUP4      ANOP                                                         00980000
         AIF   (&THIS GT N'&SYSLIST).END                                00990000
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '#').VAR2                     01000000
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '''').LIT2                    01010000
.* HERE IT SHOULD BE A CHAR VARIABLE                                    01020000
&L         SETA L'&SYSLIST(&THIS)                                       01030000
           MVC 0(&L,1),&SYSLIST(&THIS)         FIXED CHAR STRING        01040000
         AGO   .ADD3                                                    01050000
.LIT2      ANOP                                                         01060000
.* NOW LOOK FOR DOUBLE QUOTES IN STRING TO CALCULATE THE CORRECT        01070000
.*   LENGTH                                                             01080000
&LITPOSN   SETA 2                              START AFTER 1ST QOTE     01090000
&LITLEN    SETA K'&SYSLIST(&THIS)                                       01100000
&LITLEN    SETA &LITLEN-2                                               01110000
.TQUOTE2 AIF   ('&SYSLIST(&THIS)'(&LITPOSN,2) NE '''''').NOTDBL2        01120000
&LITPOSN   SETA &LITPOSN+1                                              01130000
&LITLEN    SETA &LITLEN-1                                               01140000
.NOTDBL2   ANOP                                                         01150000
&LITPOSN   SETA &LITPOSN+1                                              01160000
         AIF   (&LITPOSN LT K'&SYSLIST(&THIS)).TQUOTE2                  01170000
&K         SETA &LITLEN                                                 01180000
           MVC 0(&K,1),=C&SYSLIST(&THIS)       MOVE LITERAL STRING      01190000
&POSN      SETA  &POSN+&K                                               01200000
         AGO   .ADD3                                                    01210000
.VAR2      ANOP                                                         01220000
           LA 15,&SYSLIST(&THIS)           LOAD ADDRESS VARYING STRING  01230000
.ADD3      ANOP                                                         01240000
&THIS      SETA &THIS+1                                                 01250000
         AGO   .LUP4                                                    01260000
.END       DC  H'0'                            END LIST                 01270000
*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-*   01280000
           MEND                                                         01290000
           SPACE 3                                                      01300000
           MACRO                                                        01310000
&NAME      JOLRETN &RC=0                                                01320000
&NAME      L   R13,4(R13)      RESET SAVE ADDRESS                       01330000
         AIF   ('&SYSLIST(1)' EQ '').R1412                              01340000
           RETURN &SYSLIST(1),T,RC=&RC                                  01350000
           MEXIT                                                        01360000
.R1412     RETURN (14,12),T,RC=&RC                                      01370000
           MEND                                                         01380000
           SPACE 3                                                      01390000
           MACRO                                                        01400000
&NAME    JOLSAVE &AREA=,&CSECT=,&BASE=R11                               01410000
         GBLA &REGEQU                                                   01420000
.* SEE IF EQUATES SET UP FOR THIS RUN YET OR NOT                        01430000
         AIF   (&REGEQU NE 0).NOEQU                                     01440000
&CSECT   CSECT                                                          01450000
R0       EQU   0                                                        01460000
R1       EQU   1                                                        01470000
R2       EQU   2                                                        01480000
R3       EQU   3                                                        01490000
R4       EQU   4                                                        01500000
R5       EQU   5                                                        01510000
R6       EQU   6                                                        01520000
R7       EQU   7                                                        01530000
R8       EQU   8                                                        01540000
R9       EQU   9                                                        01550000
R10      EQU   10                                                       01560000
R11      EQU   11                                                       01570000
R12      EQU   12                                                       01580000
R13      EQU   13                                                       01590000
R14      EQU   14                                                       01600000
R15      EQU  15                                                        01610000
&REGEQU  SETA 1                                                         01620000
         AGO   .NOCSECT                                                 01630000
.NOEQU   ANOP                                                           01640000
         AIF   ('&CSECT' EQ '').NOCSECT                                 01650000
         LTORG                                                          01660000
         DS    0D                                                       01670000
&CSECT   CSECT                                                          01680000
.NOCSECT ANOP                                                           01690000
&NAME    SAVE (14,12),,&CSECT.-&SYSDATE.:&SYSTIME                       01700000
         AIF   (N'&BASE EQ 1).ONEBASE                                   01710000
         USING &CSECT,&BASE(1),&BASE(2)                                 01720000
         LR    &BASE(1),R15                                             01730000
         LA    &BASE(2),2048(R15)                                       01740000
         LA    &BASE(2),2048(&BASE(2))                                  01750000
         AGO   .HOUSE                                                   01760000
.ONEBASE ANOP                                                           01770000
         USING &CSECT,&BASE                                             01780000
         LR    &BASE,R15                                                01790000
.HOUSE   AIF   ('&AREA' EQ '').GENAREA                                  01800000
         MNOTE 12,'AREA NOW UNSUPPORTED'                                01810000
         AGO   .HOUSE2                                                  01820000
.GENAREA CNOP 0,4                                                       01830000
         BAL   R15,*+76         BRANCH AROUND SAVE AREA                 01840000
         DC    18F'-1'                                                  01850000
.HOUSE2  ST    R15,8(,R13)                                              01860000
         ST    R13,4(,R15)                                              01870000
         LR    R13,R15                                                  01880000
         MEND                                                           01890000
         EJECT                                                          01900000
* THESE NEXT TWO MACROS ARE USED FOR READING AND WRITING JOBQ.          01910000
*    IF THE SYSTEM IS VS,THE VS JOBQ ROUTINES ARE CALLED,OTHERWISE      01920000
*    A STRAIGHT READ OR WRITE OPERATION IS PERFORMED.                   01930000
         MACRO                                                          01940000
&NAME    GETJOBQ &DECB,&TTR                                             01950000
         GBLC  &JOLOS                                                   01960000
         AIF   ('&JOLOS' NE 'X8').OK                                    01970000
         MNOTE 12,'GETJOBQ IS NOT SUPPORTED ON OSIV/X8'                 01980000
         MEXIT                                                          01990000
.OK      ANOP                                                           02000000
&NAME    LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS                   02010000
         L   R1,&TTR         LOAD ADDRESS OF AREA WITH TTR FOR POINT    02020000
         BAL R14,GETJOBQ     BRANCH AND LINK TO POINT,READ,CHECK RTN    02030000
         MEND                                                           02040000
         SPACE                                                          02050000
         MACRO                                                          02060000
&NAME    PUTJOBQ &DECB,&TTR                                             02070000
         GBLC  &JOLOS                                                   02080000
         AIF   ('&JOLOS' NE 'X8').OK                                    02090000
         MNOTE 12,'PUTJOBQ IS NOT SUPPORTED ON OSIV/X8'                 02100000
         MEXIT                                                          02110000
.OK      ANOP                                                           02120000
&NAME    LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS                   02130000
         AIF   ('&TTR' EQ '').NOTTR                                     02140000
         L   R1,&TTR         LOAD R1 WITH TTR REQUIRED                  02150000
         AGO   .BAL                                                     02160000
.NOTTR     SR  R1,R1           NO TTR,CLEAR REGISTER 1                  02170000
.BAL       BAL R14,PUTJOBQ     BRANCH AND LINK TO POINT,WRITE CHECK RTN 02180000
           MEND                                                         02190000
           MACRO                                                        02200000
&NAME      CLEAR                                                        02210000
.* THIS MACRO WILL CLEAR (SET TO ' ' OR 0) A NUMBER OF LOCATIONS        02220000
.* IF THE AREAS BEING CLEARED ARE CHARACTER,THE MACRO WILL MOVE         02230000
.* THE FIELD 'BLANKS' TO THE AREA.                                      02240000
.* IF THE AREA IS A HALF WORD,FULL WORD THEN RO WILL BE SET TO          02250000
.*   0 AND STORED                                                       02260000
.* IF A DOUBLE WORK IF FOUND,OR A BIT FIELD,THEN AN XC TO ITSELF        02270000
.*   WILL BE GENERATED.                                                 02280000
           LCLA &THISP,&ORIGL,&OFFSET,&L                                02290000
           LCLC &IND,&INST,&LABEL                                       02300000
&LABEL     SETC '&NAME'                                                 02310000
&THISP     SETA 1              START AT FIRST PARAMETER                 02320000
&IND       SETC ' '            SET INDICATOR TO ' '                     02330000
.LUP     AIF   (&THISP LE N'&SYSLIST).CLEAR                             02340000
           MEXIT                                                        02350000
.CLEAR     ANOP                                                         02360000
         AIF   (T'&SYSLIST(&THISP) EQ 'C').CHAR                         02370000
         AIF   (T'&SYSLIST(&THISP) EQ 'B').BIT                          02380000
         AIF   (T'&SYSLIST(&THISP) EQ 'D').DBL                          02390000
         AIF   ('&IND' NE ' ').ST                                       02400000
&LABEL     SR  0,0             CLEAR 0                                  02410000
&IND       SETC '1'                                                     02420000
.ST      AIF   (T'&SYSLIST(&THISP) EQ 'H').HALF                         02430000
         AIF   (T'&SYSLIST(&THISP) EQ 'F').FULL                         02440000
         AGO   .DBL            DO AN XC THEN                            02450000
           USING TKNX,R3                                                02460000
         AGO   .ADD1                                                    02470000
.HALF      ANOP                                                         02480000
           STH 0,&SYSLIST(&THISP)  SET &SYSLIST(&THIS) TO 0             02490000
         AGO   .ADD1                                                    02500000
.FULL      ANOP                                                         02510000
           ST  0,&SYSLIST(&THISP)  SET &SYSLIST(&THIS) TO 0             02520000
         AGO   .ADD1                                                    02530000
.DBL       ANOP                                                         02540000
.BIT       ANOP                                                         02550000
&LABEL     XC  &SYSLIST(&THISP),&SYSLIST(&THISP) SET TO 0               02560000
         AGO   .ADD1                                                    02570000
.CHAR      ANOP                                                         02580000
         AIF   (L'&SYSLIST(&THISP) GT 20).LONG                          02590000
         AIF   (L'&SYSLIST(&THISP) NE 1).MUVBLNK                        02600000
&LABEL     MVI &SYSLIST(&THISP),C' ' MOVE 1 BLANK                       02610000
         AGO   .ADD1                                                    02620000
.MUVBLNK   ANOP                                                         02630000
&LABEL     MVC &SYSLIST(&THISP),BLANKS SHIFT BLANKS IN                  02640000
         AGO   .ADD1                                                    02650000
.LONG      ANOP                                                         02660000
&LABEL     MVI &SYSLIST(&THISP),C' ' SET FIRST BYTE TO ' '              02670000
.* NOW WE MUST MOVE +0 TO +1 ETC TILL ENTIRE STRING IS CLEARED          02680000
&ORIGL     SETA L'&SYSLIST(&THISP)                                      02690000
&L         SETA L'&SYSLIST(&THISP)-1                                    02700000
&OFFSET    SETA 1                                                       02710000
.CLRLUP2 AIF   (&L LE 256).ONEMVC                                       02720000
           MVC &SYSLIST(&THISP)+&OFFSET.(256),&SYSLIST(&THISP)-1+&OFFSE*02730000
               T PROPOGATE                                              02740000
&OFFSET    SETA &OFFSET+256                                             02750000
&L         SETA &L-256                                                  02760000
         AGO   .CLRLUP2                                                 02770000
.ONEMVC    MVC &SYSLIST(&THISP)+&OFFSET.(&ORIGL-&OFFSET),&SYSLIST(&THIS*02780000
               P)-1+&OFFSET                                             02790000
.ADD1      ANOP                                                         02800000
&THISP     SETA &THISP+1                                                02810000
&LABEL     SETC ' '                                                     02820000
         AGO   .LUP                                                     02830000
         MEND                                                           02840000
         SPACE 2                                                        02850000
         MACRO                                                          02860000
&L       $TELL  &FCTADDR                                                02870000
         AIF   (K'&L EQ 0).NL                                           02880000
&L       DS    0H                                                       02890000
.NL      ANOP                                                           02900000
 AGO  .END                                                              02910000
         LA    R10,WORK+4                                               02920000
         CONCAT '&SYSECT ABOUT TO MODIFY FCT FOR FILE '                 02930000
         MVC   0(8,R10),FCTACSN                                         02940000
         LA    R10,8(,R10)                                              02950000
         CONCAT ' AT '                                                  02960000
         IHBINNRA &FCTADDR                                              02970000
         ST    R1,TASKSSI                                               02980000
         UNPK  DBL(9),TASKSSI(5)                                        02990000
         TR    DBL,HEX                                                  03000000
         MVC   0(6,R10),DBL+2                                           03010000
         LA    R10,6(,R10)                                              03020000
         LA    R0,WORK                                                  03030000
         SR    R0,R10    MSG LEN                                        03040000
         LCR   R0,R0                                                    03050000
         STH   R0,WORK                                                  03060000
         MVI   WORK+2,X'80'   MCS FLAG                                  03070000
         MVI   WORK+3,X'00'                                             03080000
         MVC   0(2,R10),=X'00004020' DESC,ROUTCD                        03090000
         LA    R1,WORK+4                                                03100000
         SH    R0,=H'4'                                                 03110000
         TPUT  (1),(0),USERIDL==C'JOLAIF  '                             03120000
         WTO   MF=(E,WORK)                                              03130000
.END     MEND                                                           03140000
         SPACE 3                                                        03150000
         MACRO                                                          03160000
&L       UJE22UPD &P1,&P2                                               03170000
.* P1 IS ADDRESS OF DSNAME                                              03180000
.* P2 IS ADDRESS OF VOLUME SERIAL NUMBER(S)                             03190000
         LA    R0,E22PARM     SET UP PARAMETER LIST                     03200000
         ST    R0,CALLAREA                                              03210000
         MVC   E22DSN,&P1     COPY DSNAME                               03220000
         MVC   E22VOL,&P2      AND VOLUME INFO                          03230000
         LA    R1,CALLAREA    ADDRESS PARAMETER AREA                    03240000
         MVI   0(R1),X'80'    THE FINAL TOUCH                           03250000
         CALL  UJE22UPD       CALL MR FIXIT                             03260000
         MEND                                                           03270000
         TITLE 'JOL SCHEDULER MAIN-LINE'                                03280000
         GBLA  &RSVDRC,&RETNSIZ                                         03290000
         GBLC  &JOLOS                                                   03300000
         GBLC  &TYPE                                                    03310000
         LCLB  &X8                                                      03320000
         LCLC  &C,&C1,&C2,&C3,&C4,&C5,&C6,&DDPRT,&DDINST                03330000
&TYPE    SETC  'SCHED'                                                  03340000
         $UJEPARM                                                       03350000
&RETNSIZ SETA  2560          SIZE OF RETURN-CODE AREA                   03360000
&X8      SETB  ('&JOLOS' EQ 'X8')                                       03370000
&RSVDRC  SETA  4000*(1-&X8)+40*&X8                                      03380000
&DDPRT   SETC  (&X8)'JOLPRINT'.(1-&X8)'$$PRNT'                          03390000
&DDINST  SETC  (&X8)'JOLINST'.(1-&X8)'$$INST'                           03400000
         PRINT DATA                                               75311 03410000
*********************************************************************** 03420000
*                                                                     * 03430000
* CODE FOR IF ERROR IS INCORPORATED IN THIS DESCRIPTION OF THE MAIN-  * 03440000
*  LINE ROUTINE                                                       * 03450000
*                                                                     * 03460000
*        CALL  UJE98INI;      /* IF ANY ERRORS (NO DD'S FOR SCHEDUER, * 03470000
*                                  ETC),                              * 03480000
*                             OR IF PROBLEM PROGRAM RETURNED A VALUE  * 03490000
*                             THAT CAUSES JOB TO BE FLUSHED,          * 03500000
*                             A NON-ZERO RETURN CODE IS GIVEN, AND    * 03510000
*                             THE JOB WILL BE FLUSHED.                * 03520000
*                        NOTE:- ABENDS DO NOT CAUSE AN ERROR HERE.    * 03530000
*                             */                                      * 03540000
*        IF R15,=0 THEN                                               * 03550000
*        DO;                                                          * 03560000
*           SET GOBACK /* TO OS */ ON;                                * 03570000
*           RETURN 4000;                                              * 03580000
*        END;                                                         * 03590000
*                                                                     * 03600000
*        CALL  UJE50RD;       /* READ A STMT FROM 'INSRUCT' FILE */   * 03610000
*        IF R15>=0 GO TO EOF; /* GO TO END OF JOB */                  * 03620000
*                                                                     * 03630000
*        SET  R4=COND(LEVEL*8 + NEST);                                * 03640000
*                                                                     * 03650000
*        IS INSTRUCT='IF' ?                                           * 03660000
*        YES, DO;                                                     * 03670000
*                                                                     * 03680000
*              SET 0(R4)='T';                                         * 03690000
* E00CLIF:     CALL IF;                                               * 03700000
*              IF TRUE        /* CHECKS FOR ABEND, AND IF 'ERROR' */  * 03710000
* NEW          THEN DO;                                               * 03720000
* NEW               CALL UJE50RD;                                     * 03730000
* NEW               IF R15>=0,                                        * 03740000
* NEW               GO TO EOF;                                        * 03750000
* NEW               IF 'IF' GO TO E00CLIF; /* TEST NEXT IF IN CHAIN*/ * 03760000
* NEW               ELSE GO TO E00EXECI;(EXECUTE INSTRUCTION) ;       * 03770000
*              END;                                                   * 03780000
* SKIP:        ELSE SKIP TILL MATCHING END ETC;                       * 03790000
*                                                                     * 03800000
*        END;                                                         * 03810000
*                                                                     * 03820000
* NEW    IF ABEND OCCURED                                             * 03830000
* NEW      AND CURRENT LEVEL,NEST                                     * 03840000
* NEW      <=  ERROR LEVEL,NEST (LEVEL,NEST ABEND OCCURED AT)         * 03850000
* NEW      THEN DO;           /* IE, SKIP INSTRUCTION BECAUSE ABEND*/ * 03860000
* NEW          CLEAR INERROR  /* CLEAR ERROR LOOP INDICATOR*/         * 03870000
* NEW          GO TO SKIP;    /* ALLOWS FOR IF ERROR, DO; */          * 03880000
* NEW      END;               /* ETC */                               * 03890000
*    /* NO ABEND */                                                   * 03900000
* EXECUTE-INSTRUCTION:        /* BRANCHED TO BY 'IF TRUE'             * 03910000
*                             ROUTINE ABOVE, THEREBY SKIPPING         * 03920000
* NEW                         THE 'IF ABEND AND LEVELS' ABOVE.        * 03930000
* NEW                                                                 * 03940000
* NEW                         HENCE, IF ERROR WILL FUNCTION */        * 03950000
*                                                                     * 03960000
*                                                                     * 03970000
*        IF A 'DO'                                                    * 03980000
*        THEN DO;                                                     * 03990000
*              NEST=NEST+1; GO TO READ;                               * 04000000
*        END;                                                         * 04010000
*                                                                     * 04020000
*        IF AN 'END'                                                  * 04030000
*        THEN  DO;                                                    * 04040000
*              NEST=NEST-1;                                           * 04050000
*              IF NEST=0                                              * 04060000
*              THEN LEVEL=LEVEL-1;                                    * 04070000
*              GO TO READ;                                            * 04080000
*        END;                                                         * 04090000
*        IS IT AN 'ELSE' ?                                            * 04100000
*        YES, DO;                                                     * 04110000
*              IS 0(R4)='T'                                           * 04120000
*              YES, ELSE MUST BE FALSE, GO TO SKIPLOOP;               * 04130000
*              NO,GO TO READ;                                         * 04140000
*        END;                                                         * 04150000
*                                                                     * 04160000
*  /* OTHER */                                                        * 04170000
*                                                                     * 04180000
*        BRANCH TO PROCESSING ROUTINE                                 * 04190000
*                                                                     * 04200000
*                                                                     * 04210000
*                                                                     * 04220000
*********************************************************************** 04230000
           SPACE                                                        04240000
          EXTRN UJTNUM,UJEJOBQ   HELPS THE LINKAGE EDITOR FIND THINGS   04250000
         JOLSAVE CSECT=UJE00MN,BASE=R12                                 04260000
         ENTRY UJESCHED                                                 04270000
UJESCHED EQU   UJE00MN                                                  04280000
           L  R3,0(R1)                                                  04290000
           USING PARMAREA,R3                                            04300000
           USING  TABLES,R5                                             04310000
           L  R5,=A(TABLES)                                             04320000
E00VSSTR DS    0H                                                 74365 04330000
         CALL UJE98INI         INITIALISE ROUTINES                      04340000
         LTR R15,R15         INIT FAIL OR USER ABEND ?                  04350000
         BZ  E00FIRST                                                   04360000
BADRETN  DS    0H                                                       04370000
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS     04380000
         MVI GOBACK,C'1'                                                04390000
         BAL   R11,UJEFILES   GO CLOSE ALL FILES                        04400000
         JOLRETN RC=&RSVDRC  CANCEL JOB NOW                             04410000
E00FIRST DS    0H                                                       04420000
E00READ  DS    0H                                                       04430000
E00MAINL DS    0H              THIS IS THE MAIN-LINE.                   04440000
         CALL UJE50RD        READ NEXT STATEMENT                        04450000
         LTR R15,R15         READ OK (EOF MAYBEE)                       04460000
         BNZ E00EOF          EOF,RETURN AFTER SETTING END JOB           04470000
*                              INDICATORS.                              04480000
         LH  R4,LEVEL        LEVEL INDICATOR                            04490000
         SLL R4,3            *8 (WE ALLOW 8 NESTS PER LEVEL)            04500000
         LH R0,NEST                                                     04510000
         AR R4,R0                                                       04520000
         LA  R4,COND(R4)     THERE,NOW WE CAN LOOK AT 'CONDS'           04530000
           CLI LABEL,C' '                                               04540000
           BNE E00LABOK                                                 04550000
           MVC LABEL(2),=C'$$'                                          04560000
           MVC LABEL+2(4),STMT                                          04570000
E00LABOK DS    0H                                                       04580000
           CLC =C'IF ',ICOMMAND  IF?                                    04590000
           BNE E00TDO          NO,GO TEST FOR A DO                      04600000
* OK,CALL THE IF PROCESSOR AND TEST FOR TRUE OR FALSE                   04610000
           MVI 0(R4),C'T'      SET COND INITIALLY 'TRUE'                04620000
           CALL UJE04IF                                                 04630000
           LTR R15,R15         IF 0,IT WAS A TRUE 'IF'                  04640000
         BNZ   E00IFRD0       FALSE, SKIP INSTRUCTION(S) CHG26028 76200 04650000
* IF IS TRUE HERE                                        CHG26028 76200 04660000
         CALL  UJE50RD        READ NEXT INSTRUCTION      CHG26028 76200 04670000
         LTR   R15,R15        GET IT ?                   CHG26028 76200 04680000
         BNZ   E00EOF         NO, GO TO EOF ROUTINE      CHG26028 76200 04690000
         B     E00EXECI       YES, GO AND PERFORM IT     CHG26028 76200 04700000
           SPACE 3                                                      04710000
* NOW THE 'IF' IS FALSE                                                 04720000
E00IFRD0   MVI 0(R4),C'F'      SET COND TO 'FALSE'                      04730000
E00IFRD1   CALL UJE50RD        READ THE NEXT INSTRUCTION                04740000
           LTR R15,R15                                                  04750000
           BNZ E00EOF                                                   04760000
           SPACE                                                        04770000
E00SKIP  DS    0H                                        CHG26028 76200 04780000
           CLC =C'IF ',ICOMMAND  IF THEN...IF THEN SITUATION?           04790000
           BE  E00IFRD1        YES,SO SKIP THIS ONE NOW                 04800000
           CLC =C'MACRO ',ICOMMAND   IS IT A MACRO HEADER ?             04810000
           BE E00IFLUP         START SKIPPING UNTIL MATCHING 'END'      04820000
           CLC =C'DO ',ICOMMAND IS IT A 'DO;                            04830000
           BE E00IFLUP         START SKIPPING UNTIL MATCHING 'END'      04840000
* HERE IT IS AN ORDINARY INSTRUCTION,AND WE HAVE 'SKIPPED ' IF          04850000
*     WE GO AND READ A NEW ONE NOW                                      04860000
           B  E00READ                                                   04870000
           SPACE 3                                                      04880000
E00IFLUP DS    0H                                                       04890000
* NOW WE HAVE FOUND A MACRO OR A DO                                     04900000
           LA R4,1             SET NUMBER OF OUTSTANDING ENDS TO 1      04910000
E00IFRD    DS    0H                                                     04920000
           CALL UJE50RD        GET THE NEXT INSTRUCTION                 04930000
           LTR R15,R15                                                  04940000
           BNZ E00EOF          END OF INPUT FILE                        04950000
           CLC =C'END ',ICOMMAND                                        04960000
           BNE E00TIFMC        GO TEST IF INNER MACRO OR DO             04970000
           SH R4,=H'1'         -1 FROM END COUNTER                      04980000
           BZ  E00READ         GOOD OH,REACHED END OF FALSE LOOP        04990000
           B  E00IFRD                                                   05000000
           SPACE 3                                                      05010000
E00TIFMC DS    0H                                                       05020000
           CLC =C'MACRO ',ICOMMAND                                      05030000
           BE  E00ADD1                                                  05040000
           CLC =C'DO ',ICOMMAND                                         05050000
           BNE E00IFRD                                                  05060000
E00ADD1    LA R4,1(R4)         UP THE NUMBER OF OUTSTANDING 'ENDS'      05070000
           B  E00IFRD          AND READ A NEW INSTRUCTION               05080000
*  END IF PROCESSING                                                    05090000
           SPACE 3                                                      05100000
E00TDO   DS    0H                                                       05110000
E00TERR  CLI   ERRORIND,0     HAS AN ABEND OCCURED ?     CHG26028 76200 05120000
         BE    E00TDO2        NO, NOT YET                CHG26028 76200 05130000
* AN ABEND HAS BEEN DETECTED SOMEWHERE.                  CHG26028 76200 05140000
*******************************************************************DASD 05150000
*  IF ERROR SWITCH SETTINGS USING FIELD "INERRORL"                *DASD 05160000
*                                                                 *DASD 05170000
*  BYTES 0-3 ON = IF ERROR LOGIC IN PROCRESS                      *DASD 05180000
*           OFF = NO IF ERROR LOGIC REACHED AS YET OR             *DASD 05190000
*                 CURRENTLY RUNNING IF ERROR AT ABEND LEVEL       *DASD 05200000
*  BYTES 4-7 ON = IF ERROR LOGIC REACHED AND ABEND OCCURED        *DASD 05210000
*           OFF = NO ABEND OCCURED WITHIN IF ERROR LOGIC          *DASD 05220000
*******************************************************************DASD 05230000
         TM     INERRORL,X'0F' IF ERROR ON WITH AND ABEND ?        DASD 05240000
         BZ     E00SKIP      NOPE   LETS SKIP ANY RUNNING AFTER ABEDASD 05250000
         CLC   LEVEL(L'LEVEL+L'NEST),ERRLEVEL            CHG26028 76200 05260000
         BH    E00TDO2        OK, IF ERROR THEN DO LOOP  CHG26028 76200 05270000
         MVI   INERRORL,X'0F' TURN OFF 'IN ERROR LOOP'   CHG26028  DASD 05280000
         B     E00SKIP        SKIP INSTRUCTION(S)        CHG26028 76200 05290000
E00TDO2  DS    0H                                        CHG26028 76200 05300000
E00EXECI DS    0H                                        CHG26028 76200 05310000
         SPACE 2                                         CHG26028 76200 05320000
           CLC =C'DO ',ICOMMAND IS IT A 'DO'                            05330000
           BNE E00TMAC         NO,TEST IF 'MACRO'                       05340000
           LH  R1,NEST         ADD                                      05350000
           LA  R1,1(R1)            1 TO                                 05360000
           CH  R1,=H'8'                NEST                             05370000
           BH  E00DOERR            IF NOT                               05380000
           STH R1,NEST         T00 BIG                                  05390000
           B   E00READ         AND READ A NEW RECORD                    05400000
E00DOERR   JOLERR 505,'TOO MANY DOS'   (THIS ABENDS,U0001)              05410000
           SPACE 3                                                      05420000
E00TMAC    CLC =C'MACRO ',ICOMMAND                                      05430000
           BNE E00TEND                                                  05440000
           LH  R1,LEVEL                                                 05450000
           LA  R1,1(R1)                                                 05460000
         CH    R1,=H'7'                                  JOL30114 76200 05470000
           BL  E00MACOK                                                 05480000
           JOLERR 508,'TOO MANY LEVELS'  (ABENDS TOO)                   05490000
E00MACOK   STH R1,LEVEL                                                 05500000
           LA R1,SAVENEST(R1)                                           05510000
           MVC 0(1,R1),NEST+1 SAVE THE NEST SO WE CAN RESET AT MACRO    05520000
*                              END SO AS NOT TO LOSE OURSELVES          05530000
           XC  NEST,NEST                                                05540000
           B   SETMACRO        TRUE 'LOOP',SET UP MACRO START           05550000
           SPACE 3                                                      05560000
E00TEND    CLC =C'END ',ICOMMAND WELL,PERHAPS IT IS AN 'END'            05570000
           BNE E00TELSE        NOPE,GO TEST IF IT IS AN'ELSE' THEN      05580000
           SPACE                                                        05590000
           LH  R1,NEST         NOW REDUCE 'NEST'                        05600000
           SH  R1,=H'1'                                                 05610000
           BM  E00ENDMC        IF <0 IF IS A 'MACRO' END                05620000
           STH R1,NEST                                                  05630000
           B   E00READ        *********************** MARCH 12 76       05640000
           BCTR R4,0           -1 FROM R4                         75311 05650000
           MVI 0(R4),C' '      CLEAR COND                         75311 05660000
           B   E00READ                                                  05670000
           SPACE 3                                                      05680000
E00ENDMC DS    0H                                                       05690000
* NOW THE'MACRO END' REQUIRES SPECIAL ATTENTION BECAUSE WE MUST         05700000
*     STORE THE HIGHEST RETURN CODE FROM THE PROGRAMS EXECUTED          05710000
*     BY THE MACROS.                                                    05720000
           LH R1,LEVEL                                                  05730000
           LA R15,SAVENEST(R1)                                          05740000
           SH R1,=H'1'                                                  05750000
           BNM E00MACEN                                                 05760000
           JOLERR 506,'TOO MANY ENDS'  (ABENDS)                         05770000
           SPACE 3                                                      05780000
E00MACEN  DS    0H                                                      05790000
           STH R1,LEVEL                                                 05800000
           MVC NEST+1(1),0(R15)                                         05810000
           SPACE 3                                                      05820000
** STORE THE HIGHEST RETURN CODE FROM THE MACRO                         05830000
           LA R7,IDSTART                                                05840000
           LH R1,NOIDS                                                  05850000
           MH R1,=H'18'                                                 05860000
           LR R15,R7                                                    05870000
           AR R7,R1                                                     05880000
           LH R14,=H'-18'                                               05890000
           LR R1,R7                                                     05900000
           USING IDOVLY,R1                                              05910000
           MVC DBL,IDRETN                                               05920000
           L R7,DBL                                                     05930000
**** CHECK FOR A DEAD MARCO HEADER WITH A -1 RETURN CODE AND BYPASSDASD 05940000
           CLC  DBL(4),=F'-1'                                      DASD 05950000
           BNE E00LUP10                                                 05960000
           SR R7,R7                                                     05970000
E00LUP10   CLC IDNAME,=CL8'MACRO'                                       05980000
           BE  E00GMAC                                                  05990000
           MVC DBL,IDRETN                                               06000000
**** CHECK FOR A DEAD MARCO HEADER WITH A -1 RETURN CODE AND BYPASSDASD 06010000
           CLC  DBL(4),=F'-1'                                      DASD 06020000
           BE   E00BXH1                                            DASD 06030000
           C R7,DBL                                                     06040000
           BH  E00BXH1                                             DASD 06050000
*          BL  E00BXH1                                             DASD 06060000
           L   R7,DBL                                                   06070000
E00BXH1    BXH R1,R14,E00LUP10                                          06080000
         JOLERR 507,'NO MACRO START'                                    06090000
E00GMAC  ST    R7,CALLAREA                                              06100000
         MVC   IDRETN,CALLAREA                                          06110000
         MVC   IDNAME,=CL8' '  TO GET RIGHT EFFECT FOR NESTED MACROS    06120000
         B     E00READ                                                  06130000
         SPACE 3                                                        06140000
E00TELSE DS    0H                                                       06150000
* NOW THE 'ELSE' MUST BE TESTED                                         06160000
           CLC =C'ELSE ',ICOMMAND                                       06170000
           BNE E00TFALS       NOT ELSE,TEST IF FALSE 'LOOP'             06180000
           CLI 0(R4),C' ' WAS AN 'IF' JUST PRICESSED ?                  06190000
           BNE E00ELSOK                                                 06200000
           JOLERR 402,'ELSE IGNORED'                                    06210000
           SPACE 3                                                      06220000
E00ELSOK DS    0H                                                       06230000
           CLI 0(R4),C'F'      LAST FALS ?                              06240000
           BNE E00TLTRU                                                 06250000
           MVC 0(2,R4),=C'  '      TURN OFF COND CODE ALTOGETHER        06260000
           B  E00READ                                                   06270000
E00TLTRU   B  E00IFRD1    GO JOIN 'IF' FALSE PROCESSOR                  06280000
           SPACE 3                                                      06290000
E00TFALS DS    0H                                                       06300000
E00ORD   DS    0H                                                       06310000
           CLEAR ISRUN                                                  06320000
           L   R1,=A(JE00TBL1) LOAD ADDRESS OF TABLE WITH THE           06330000
*                              INSTRUCTION NAMES AND THE ADDRESSES      06340000
*                              OF THE ROUTINES TO HANDLE THEM.          06350000
           LM  R7,R9,0(R1)     LOAD BXLE ADDRESS CONSTANTS FOR          06360000
*                              THE ABOVE TABLE.                         06370000
E00FINDR DS    0H                                                       06380000
           CLC ICOMMAND,0(R7)   COMPARE INSTRUCTION TO THAT IN TABLE    06390000
           BE  E00GOTRT        GOT THE ROUTINE TO HANDLE IT.            06400000
           BXLE  R7,R8,E00FINDR                                         06410000
E00ERROR DS    0H                                                       06420000
           JOLERR 503,'INVALID INSTRUCTION ''',ICOMMAND,               *06430000
               ''' IN SCHED'                                            06440000
           SPACE 3                                                      06450000
E00GOTRT   L   R15,8(R7)       LOAD ROUTINE ADDRESS                     06460000
           BALR R14,R15                                                 06470000
           CLI ISRUN,C'1'      WAS A RUN JUST PROCESSED ?               06480000
           BE  E00FNDRN        YES,TWAS A RUN                           06490000
           LTR R15,R15         DID PROCESSOR HANDLE NORMAL INSTRUCTION  06500000
*                              (EG TYPE,DELETE ETC??)                   06510000
           BZ  E00MAINL        YES,SO TRY NEXT INSTRUCTION.             06520000
* HERE AN INSTRUCTION WAS EXECUTED,BUT RETURNED A NON-ZERO              06530000
*     CODE.                                                             06540000
           CH  R15,=H'4'       RETURN TO OS AFTER SKIPPING TO           06550000
*                              THE RIGHT JOB STEP ?                     06560000
           BE E00STPON         STEP ON TO A NEW OS STEP.                06570000
           CH R15,=H'&RSVDRC'  STOP ETC EXECUTED ?                      06580000
           BE BADRETN                                                   06590000
E00CLRC    MVC 0(2,R4),=CL2' '                                          06600000
           B  E00MAINL                                                  06610000
           B  *+4                                                       06620000
           B  *+4                                                       06630000
           B  *+4                                                       06640000
           B  *+4                                                       06650000
*     SET THE INDICATOR WHICH TELLS OUR CALLER (THE MONITOR)            06660000
*     TO  RETURN TO OS SO IT CAN SKIP STEPS (OR CANCEL THE JOB)         06670000
           SPACE 3                                                      06680000
           SPACE 3                                                      06690000
RETURN   DS    0H                                                 74365 06700000
E00EOF   DS    0H                                                       06710000
         AIF   (&X8).X8020                                              06720000
* WE HAVE READ AN EOF ON THE INSTRUCTION FILE,SO WE WANT TO             06730000
*     GET TO THE END OF THE JOB                                         06740000
*                                                        CHG26028 76200 06750000
* IF AN ABEND HAS OCCURED, WE SHOULD SET A RETURN OF     CHG26028 76200 06760000
*  4000 SO THAT THE JOB WILL TERMINATE AS QUICKLY AS     CHG26028 76200 06770000
*  POSSIBLE (LETS NOT WASTE TOO MUCH TIME...)            CHG26028 76200 06780000
         SPACE 1                                         CHG26028 76200 06790000
         CLI   ERRORIND,0     DID AN ERROR OCCUR ?       CHG26028 76200 06800000
         BE    E00EOF2        NO, SO TERMINATE NICELY    CHG26028 76200 06810000
*                             (IF SLOWLY...)             CHG26028 76200 06820000
         MVC   LASTCC+2(2),=H'&RSVDRC' FLUSH THE JOB     CHG26028 76200 06830000
         B     RETNNOW        CLOSE FILES, RETURN.       CHG26028 76200 06840000
E00EOF2     LA R11,1            SET EOF INDICATOR ON                    06850000
           MVC GOTOLAB,=XL8'FFFFFFFFFFFFFFFF' SET IMPOSSABLY HIGH LABEL 06860000
*                              NUMBER IN GOTOLAB,SO WE WILL MARK ALL    06870000
*                              THE STEPS UNTIL EOJ WITH COND=ONLY       06880000
           B  E00FINDS         FIND THE NEXT OS STEP                    06890000
           SPACE 3                                                      06900000
E00STPON DS    0H                                                       06910000
         SR  R11,R11         SET EOF INDICATOR OFF                      06920000
* NOW WE HAVE TO ORGANISE FOR OS TO STEP ON TO ANOTHER                  06930000
*     STEP FOR US.                                                      06940000
* WE CAN BE NASTY (SET NEXT STEP SCT TO ANOTHER STEP WAY DOWN           06950000
*     THE QUEUE)                                                        06960000
* OR WE CAN BE KIND,IE SET UP A FEW COND=ONLY'S AND LET OS              06970000
*     GET THERE ITSELF.                                                 06980000
* WE COULD BE LUCKY,I SUPPOSE,AND THE NEXT STEP WE WANT                 06990000
* COULD REALLY BE THE NEXT OS STEP.                                     07000000
          SPACE                                                         07010000
* NOW IF IT WAS A RUN STATEMENT WE WERE TOLD TO STEP ON FOR,            07020000
* THE STEP WE WANT MUST BE THERE.                                       07030000
*     IF IT WAS A CATLG ETC THAT WE HAD TO STEP ON FOR,                 07040000
* WE COULD FIND THAT THE ACTUAL STEP WON'T BE THERE BECAUSE             07050000
* THE GENERATOR MAY HAVE CONBINED SEVERAL STEPS TO CUT DOWN             07060000
* THE NUMBER OF OS STEPS PRODUCED. IN THAT CASE,WE MERELY               07070000
* FIND A STEP THAT IS LESS THAN OR EQUAL,AND BRANCH TO IT               07080000
          SPACE                                                         07090000
E00FINDS DS    0H                                                       07100000
*          MVI SCTANSCT+3,0     ***** SET Z=0 (OK,ONLY READ)            07110000
           CLC SCTANSCT,=A(0)   LAST STEP IN JOB ? (THE NEXT ONE*****)  07120000
            BNE E00PNT         NOT EOF ON JOBQ                          07130000
           LTR R11,R11         EOF ON MY Q?                             07140000
           BNZ E00TEST         YES,SO MERELY RETURN TO OS               07150000
E00NOSTP   JOLERR 504,'CANNOT FIND STEP ',GOTOLAB                       07160000
           SPACE 3                                                      07170000
E00PNT   DS    0H                                                       07180000
           GETJOBQ SCTDECB,SCTANSCT READ THE SCT,AFTER POINTING         07190000
* NOW IS IT THE STEP WE WANT ?                                          07200000
           CLC SCTSNAME,GOTOLAB                                         07210000
           BE  E00GOTRS        GOT RIGHT STEP                           07220000
* NOW AS MENTIONED EARLIER,WE MAY HAVE GONE TOO FAR IT WE WERE          07230000
*     DOING A SCRATCH FOR US.                                           07240000
* HOWEVER (3.0) WE MAY HAVE A REAL STEP NAME ON THE GENERATED JCL 75311 07250000
*  AND IF SO WE MUST CONTINUE EXAMINING THE JOBQ                  75311 07260000
           CLC =C'$$',GOTOLAB  REAL STEP | JOL STEP NAME ?        75311 07270000
           BNE E00REWR         REAL, SO TOSS THIS SCT BACK WITH   75311 07280000
*                              COND=ONLY, AND CONTINUE            75311 07290000
           SPACE 1                                                75311 07300000
           BH E00GOTRS         WELL IT WILL DO ANYWAY EVEN IF IT        07310000
*                              IS A LITTLE HIGH                         07320000
           SPACE                                                        07330000
* NOW THE SCT IN CORE MUST BE REWRITTEN WITH COND=ONLY UNLESS           07340000
*     IT IS THE CURRENT OS STEP                                         07350000
E00REWR  DS    0H                                                 75311 07360000
           CLC JCTSSTR(3),SCT  CURRENT OS STEP ?                        07370000
           BE E00TEST          YES,SO DON'T UPDATE AND OUTPUT           07380000
* SET COND=ONLY SO NEXT STEP (THIS SCT IN CORE) WON'T RUN               07390000
           MVC SCTABCND(3),=X'010000'                                   07400000
           PUTJOBQ SCTDECB     OUTPUT SCT AGAIN                         07410000
           B E00FINDS                                                   07420000
         AGO   .NX8020                                                  07430000
.X8020   ANOP                                                           07440000
E00STPON DS    0H                                                       07450000
.NX8020  ANOP                                                           07460000
         SPACE 3                                                        07470000
E00GOTRS DS    0H                                                       07480000
E00TEST  DS    0H                                                       07490000
         POINT RETN,TTR$RETN                                            07500000
           WRITE E00RET2,SF,RETN,READAREA,'S'                           07510000
           CHECK E00RET2                                                07520000
           SPACE 3                                                      07530000
RETNNOW  DS    0H                                                       07540000
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS     07550000
         MVI GOBACK,C'1'                                                07560000
         AIF   (&X8).X8040                                              07570000
           CLI IBMRTN,C' '     ARE WE USING AN IBM ROUTINE TO     ***** 07580000
*                              ACCESS JOBQ ?                      ***** 07590000
           BE  E00NDEL1        NO, SO DON'T TRY TO DELETE IT      ***** 07600000
           DELETE EPLOC=IBMRTN YES, DELETE WHICH EVER ROUTINE     ***** 07610000
E00NDEL1 DS    0H                                                 ***** 07620000
.X8040   ANOP                                                           07630000
*          CLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ)                    *DASD 07640000
           BAL   R11,UJEFILES   GO CLOSE ALL FILES                 DASD 07650000
           L   R15,LASTCC                                         75311 07660000
           JOLRETN RC=(15)                                        75311 07670000
E00FNDRN DS    0H                                                       07680000
           LTR R15,R15         DO WE HAVE TO SKIP TO A NEW              07690000
           BNZ E00STPON        OS STEP FOR THIS RUN ?                   07700000
           SPACE 3                                                      07710000
SETMACRO DS    0H                                                       07720000
* RUN IT NOW                                                            07730000
           LH  R1,NOIDS                                                 07740000
           LA  R1,1(R1)                                                 07750000
           CH  R1,MAXIDS                                                07760000
           BL  MUVNAME                                                  07770000
           LH  R1,MAXIDS                                                07780000
           CVD R1,DBL                                                   07790000
           UNPK DDPRIM,DBL                                              07800000
           OI  DDPRIM+L'DDPRIM-1,X'F0'                                  07810000
*******************************************************            DASD 07820000
* NOW BEFORE ABENDING WE WILL TAKE A LOOK AT THE RETN *            DASD 07830000
* TABLE FOR A USED MACRO HEADER AND OVERLAY IT MAKING *            DASD 07840000
* ROOM FOR 1 NEW GUY                                  *            DASD 07850000
*******************************************************            DASD 07860000
         LH    R15,NOIDS      LOOK THIS MANY TIMES                 DASD 07870000
         LA    R1,18                                               DASD 07880000
         LA    R1,IDSTART(R1) START LOOKING HERE                   DASD 07890000
         USING IDOVLY,R1                                           DASD 07900000
SLIDELOP CLC   IDNAME,=CL8'MACRO' IS THIS GUY USED ?               DASD 07910000
         BNE   SLIDEUP        YEA MOVE IT UP                       DASD 07920000
         LA    R1,18(R1)      UP TO NEXT GUY                       DASD 07930000
         BCT   R15,SLIDELOP                                        DASD 07940000
* WELL GUY WHAT NOW ???????                                        DASD 07950000
           JOLERR 501,'MAX ',DDPRIM,' STEPS EXCEEDED'                   07960000
SLIDEUP  MVC   0(18,R1),18(R1) SLIDE THE REST UP 1                 DASD 07970000
         LA    R1,18(R1)      INCR TO NEXT SLOT                    DASD 07980000
         BCT   R15,SLIDEUP    LETS DO EM ALL                       DASD 07990000
         LH    R1,NOIDS       NOW LOAD NO OF IDS AGAIN             DASD 08000000
MUVNAME    STH R1,NOIDS                                                 08010000
           MH  R1,=H'18'                                                08020000
           LA R1,IDSTART(R1)                                            08030000
           USING IDOVLY,R1                                              08040000
           MVC IDSTMT,STMT                                              08050000
           OC IDSTMT,=C'0000'                                           08060000
           MVC IDNAME,TASKLABL                                          08070000
           MVC IDNEST,NEST                                              08080000
           MVC IDLEVEL,LEVEL                                            08090000
           MVC IDRETN,=F'-1'                                            08100000
           CLC =CL8'MACRO',ICOMMAND                                     08110000
           BNE NOTMACH                                                  08120000
           MVC IDNAME,=CL8'MACRO'                                       08130000
           B  E00MAINL                                                  08140000
NOTMACH  DS    0H                                                       08150000
         AIF   (&X8).X8050                                              08160000
* WE MUST NOW WRITE THE PROGRAM NAME IN THE PGM FIELD OF THE SCT        08170000
*    SO THAT SMF WILL BE OK                                             08180000
           GETJOBQ SCTDECB,JCTSSTR GET SCT,AFTER POINT                  08190000
           CLC =C'$JOLMN',SCTPGMNM    FIRST PROGRAM GETS SMF RECORD 3.1 08200000
           BNE E00SMF1                                                  08210000
           MVC SCTPGMNM,RUNNAME                                         08220000
E00SMF1  DS    0H                                                       08230000
           PUTJOBQ SCTDECB     RE-WRITE SCT                             08240000
* OK LET'S XCTL                                                         08250000
         AGO   .NX8050                                                  08260000
.X8050   ANOP                                                           08270000
         FIX   'FIDDLE SMF RECORDS HERE'                                08280000
.NX8050  ANOP                                                           08290000
           POINT  RETN,TTR$RETN                                         08300000
           WRITE DECBRET1,SF,RETN,READAREA,'S'                          08310000
           CHECK  DECBRET1                                              08320000
         AGO   .VS050                                                   08330000
           SPACE 1                                                74365 08340000
           CLI VS,C' '         ARE WE RUNNING UNDER VS ?          74365 08350000
* IF WE ARE,WE WILL ATTACH NOW RATHER THAN XCTLING AND CLOSING    74365 08360000
*          AS THIS IS FASTER AND VS CAN ROLL US OUT QUICKLIY      74365 08370000
           BNE E00ISVS         IS VS,DO THINGS DIFFERENTLY        74365 08380000
           CLI IBMRTN,C' '     ARE WE USING AN IBM ROUTINE TO     ***** 08390000
*                              ACCESS JOBQ ?                      ***** 08400000
           BE  E00NDEL2                                           ***** 08410000
           DELETE EPLOC=IBMRTN YES, DELETE IT                     ***** 08420000
E00NDEL2 DS    0H                                                 ***** 08430000
*          CLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ)                    *DASD 08440000
           BAL   R11,UJEFILES   GO CLOSE ALL FILES                 DASD 08450000
           MVC DBL(4),STMT    SAVE STATEMENT NUMBER WHILE         75128 08460000
*                              PROBLEM PROGRAM IS EXECUTING             08470000
           L   R1,ATASKPRM                     LOAD ADDR OF PARAMETER   08480000
           ST R1,CALLAREA                                               08490000
           MVI CALLAREA,X'80'                                           08500000
           L   R13,4(R13)                      RESET SAVE ADDR          08510000
           L   R14,12(R13)                     RESET RETURN ADDR        08520000
           XCTL (2,12),DE=RUNNAME,DCB=0,MF=(E,CALLAREA)                 08530000
.VS050     SPACE 3                                                75311 08540000
E00ISVS    MVC DBL,STMT        SHIFT STATEMENT NUMBER             75311 08550000
* 3.0 - MVS CODE                                                  75311 08560000
*                                                                 75311 08570000
* FOR 3.0 WE WILL ATTACH THE PROBLEM PROGRAM UNDER THE MONITOR,   75311 08580000
* THAT IS, WE SHALL RETURN AS USUAL.                              75311 08590000
*                                                                 75311 08600000
* LATER, WHEN THIS CODE IS RE-ENTRANT, IT WILL BE MORE            75311 08610000
* EFFICENT TO ATTACH IT HERE, BUT VS1 IS A BIT OF A PROBLEM       75311 08620000
* BECAUSE IT DOESN'T HAVE 16MEGABYTES TO PLAY WITH.               75311 08630000
           BAL   R11,UJEFILES   GO CLOSE ALL FILES                 DASD 08640000
           JOLRETN RC=0        UJEMON WILL LOOK AT 'VS' TOO.      75311 08650000
*  D  *    MVC CALLAREA(4),ATASKPRM                                DASD 08660000
*  E  *    MVI CALLAREA,X'80'                                      DASD 08670000
*  A  *    XC TASK2ECB,TASK2ECB                                    DASD 08680000
*  D  *    LA R1,CALLAREA                                          DASD 08690000
*     *    ATTACH DE=RUNNAME,ECB=TASK2ECB          74365           DASD 08700000
*  M  *    LR  R11,R1          SAVE TCB ADDRESS                    DASD 08710000
*  V  *    WAIT 1,ECB=TASK2ECB                                     DASD 08720000
*  S  *    MVC TASKRETN(1),X'1D'(R11) SHIFT IN ABEND CODE          DASD 08730000
*     *    MVC TASKRETN+1(3),TASK2ECB+1 AND RETURN CODE            DASD 08740000
*  C  *    ST R11,CALLAREA                                         DASD 08750000
*  O  *    DETACH CALLAREA                                         DASD 08760000
*  D  *    B E00VSSTR          BACK TO MAINLINE                    DASD 08770000
*  E  *    B *+4                                                   DASD 08780000
*     *    B *+4                                                   DASD 08790000
*     *    B *+4                                                   DASD 08800000
*************************************************************      DASD 08810000
*  CLOSE ANY OPEN FILES BEFORE RETURNING TO THE MONITOR     *      DASD 08820000
*        MVS  WILL ABEND-C03                                *      DASD 08830000
*************************************************************      DASD 08840000
UJEFILES DS    0H                                                  DASD 08850000
         ST    R11,CALLAREA+4                                           08860000
         LA    R10,INSTRUCT                                        DASD 08870000
         BAL   R11,UJEFCLSE                                        DASD 08880000
         LA    R10,PRINT                                           DASD 08890000
         BAL   R11,UJEFCLSE                                        DASD 08900000
         LA    R10,RETN                                            DASD 08910000
         BAL   R11,UJEFCLSE                                        DASD 08920000
         AIF   (&X8).X8060                                              08930000
         LA    R10,JOBQ                                            DASD 08940000
         BAL   R11,UJEFCLSE                                        DASD 08950000
.X8060   ANOP                                                           08960000
         L     R11,CALLAREA+4                                           08970000
         BR    R11                                                 DASD 08980000
UJEFCLSE DS    0H                                                  DASD 08990000
         TM    48(R10),X'10'  IS FILE OPEN ??                      DASD 09000000
         BZ    0(R11)         NOPE  RETURN                         DASD 09010000
         JOLCLOSE ((R10)),MF=(E,CALLAREA) CLOSE THIS GUY           DASD 09020000
         BR    R11            RETURN                               DASD 09030000
*                                                                       09040000
         AIF   (&X8).X8080                                              09050000
* THE FOLLOWING LOCATIONS ARE USED FOR READING AND WRITING              09060000
*  THE SYSTEM JOBQ                                                      09070000
*                                                                       09080000
* LOCN 1 CONTAINS THE TTR OF THE RECORD WRITTEN                         09090000
* LOCN 2 CONTAINS THE ADDRESS (IN DISPACEMENT FORM) OF THE AREA         09100000
*  TO BE USED AS THE READ/WRITE AREA                                    09110000
*                                                                       09120000
JCTDECB  DC    F'0'                                                     09130000
         LA    R1,JCT         EXECUTED ***                              09140000
         SPACE                                                          09150000
SCTDECB  DC    F'0'                                                     09160000
         LA    R1,SCT                                                   09170000
         SPACE                                                          09180000
PDQDECB2 DC    F'0'                                                     09190000
         LA    R1,PDQ                                                   09200000
         SPACE                                                          09210000
SIOTDECB DC    F'0'                                                     09220000
         LA    R1,SIOT                                                  09230000
         SPACE                                                          09240000
JFCBDECB DC    F'0'                                                     09250000
         LA    R1,INFMJFCB                                              09260000
         SPACE                                                          09270000
PDQDECB  DC    F'0'                                                     09280000
         LA    R1,PDQBLK                                                09290000
           SPACE 3                                                      09300000
ISINPDQ    DS CL1                                                       09310000
.X8080   ANOP                                                           09320000
ISRUN      DC C' '                                                      09330000
RETNBLKS   DS  H                                                        09340000
PDQDSNNO   DS  H                                                        09350000
GOTOLAB    DS  CL8                                                      09360000
APDQDIR    DS  A                                                        09370000
           SPACE 3                                                      09380000
LABEL      DS  CL8                                                      09390000
COMMAND    DS  CL8                                                      09400000
GETATKN   LA R1,TKNX                                                    09410000
          L  R15,=V(UJCGETKN)                                           09420000
          BR R15                                                  75128 09430000
         AIF   (&X8).X8100                                              09440000
           SPACE 6                                                      09450000
* GET/PUT JOBQ ROUTINES CALLED BY GETJOBQ/PUTJOBQ MACROS                09460000
* ON ENTRY R0-> CONTROL AREA CONTAINING TTR SAVE SPACE, AND A(AREA)5128 09470000
*          R1-> TTR REQUIRED                                      74365 09480000
*                                                                       09490000
* A SEPARATELY ASSEMBLED CSECT CALLED UJEJOBQ IS RESPONIBLE             09500000
*  FOR ACTUALLY CALLING THE IBM MODULE 'IEFQMRAW' TO DO THE             09510000
*  JOBQ TRANSFERS                                                       09520000
*                                                                       09530000
*  THE PARAMETERS 'UJEJOBQ' WANTS ARE :-                                09540000
*  R1-> :-                                                              09550000
*     1. A(RECEIVE/WRITE AREA)                                          09560000
*     2. A(TTR POINTER)                                                 09570000
*     3. TRANSFR TYPE 4=READ ETC                                        09580000
*     4. A(IEFQMRAW)               IBM ROUTINE                          09590000
*                                                                       09600000
GETJOBQ    MVI CALLAREA+11,4   READ INDICATOR TO PUT IN IEFQMRAW        09610000
           B   E00JOBQ                                                  09620000
PUTJOBQ  MVI   CALLAREA+11,X'03'  WRITE INDICATOR FOR QM          75128 09630000
         LR  R15,R0        GET CONTROL AREA ADDRESS                     09640000
         L   R1,0(R15)     GET TTR FROM SAVED AREA                      09650000
E00JOBQ  LR    R15,R0         LOAD R15 A(CONTROL BLOCK)           75128 09660000
         IC    R1,=AL1(0)     SET BOTTOM BYTE TO 0                 3.1  09670000
         ST    R1,0(R15)      STORE TTR REQD IN CONTROL BLOCK     75128 09680000
         ST    R1,CALLAREA+4  AND IN PARM FOR UJEJOBQ             75128 09690000
         EX    R0,4(R15)      EXECUTE LA INSTRUCTION TO FIND      75128 09700000
*                             ADDRESS OF AREA TO READ/WRITE       75128 09710000
         ST    R1,CALLAREA    SET PARM(1)                         75128 09720000
         MVC   CALLAREA+12(4),AQMRAW SHIFT A(IEFQMRAW)            75128 09730000
           B  *+4    ******************************************         09740000
           B  *+4    ******************************************         09750000
           ST  R14,IEFQRETN    SAVE RETURN ADDRESS                      09760000
         LA    R1,CALLAREA    SET R1 UP PROPERLY                  75128 09770000
         L     R15,=V(UJEJOBQ) LOAD JOL'S INTERFACE TO IEFQMRAW   75128 09780000
         BALR  R14,R15         AND BRANCH TO IT                   75128 09790000
         LTR   R2,R15         DID WE MANAGE FUNCTION ?            75128 09800000
           BZ E00RMODE                                                  09810000
         JOLERR 509,'UNABLE TO READ/WRITE JOBQ'                   75128 09820000
           SPACE                                                        09830000
E00RMODE DS    0H                                                 75128 09840000
*        UNSUP      LA R1,X'24' SVC 107                           75128 09850000
         L     R1,CALLAREA+4  RELOAD TTR FOR CALLER IN CASE HE WANT5128 09860000
           L   R14,IEFQRETN    LOAD RETURN ADDRESS                      09870000
           BR  R14             AND GO BACK                              09880000
.X8100    ANOP                                                          09890000
           SPACE 3                                                      09900000
E00FXVOL   MVI   VOL,C' '  CLEAR TO BLANKS                         DASD 09910000
           MVC   VOL+1(L'VOL-1),VOL                                DASD 09920000
           LA R1,VOL-1                                            74365 09930000
           LA R15,DDVOLUME                                        74365 09940000
E00SHFTC   MVI 0(R1),C','     SHIFT IN COMMA TO SEPARATE VOLS    74365  09950000
           MVC 1(6,R1),0(R15)  SHIFT IN A VOLUME                  74365 09960000
           LA  R1,6(R1)        STEP OVER ',VOLUME'                 DASD 09970000
           LA R15,6(R15)       STEP OVER VOLUME                   74365 09980000
           CLI 0(R1),C' '      DROP EXTRA BLANKS (IF L'VOL<6)     74365 09990000
           BNE *+8             NOT BLANK                          74365 10000000
           BCT R1,*-8          IS BLANK,DROP R1 BY 1              74365 10010000
           LA  R1,1(R1)        SKIP TO NEXT POSITION              75311 10020000
           CLI 0(R15),C' '     LAST VOL ?                         74365 10030000
           BE E00SETVL         YEP, OUT WE GO (NEARLY)            74365 10040000
           C R15,=A(DDVOLUME+30)   END LIST                       74365 10050000
           BNH E00SHFTC                                                 10060000
E00SETVL   S  R1,=A(VOL-1)                                       75003  10070000
           STH  R1,#VOL                                                 10080000
           BR R14                                                 74365 10090000
UJS23EP5   LA  R1,5                                                     10100000
           B   UJS23SET                                                 10110000
UJS23EP4   LA  R1,4                                                     10120000
           B   UJS23SET                                                 10130000
UJS23EP3   LA  R1,3                                                     10140000
           B   UJS23SET                                                 10150000
UJS23EP2   LA  R1,2                                                     10160000
           B   UJS23SET                                                 10170000
UJS23EP1   LA  R1,1                                                     10180000
           B   UJS23SET                                                 10190000
UJS23EP0   SR  R1,R1                                                    10200000
UJS23SET DS    0H                                                       10210000
           STC R1,S23SEV                                                10220000
           L   R15,=V(UJS23ER)                                          10230000
           BR  R15                                                      10240000
* WILL EVENTUALLY RETURN TO R14 ADDRESS                                 10250000
#S23MAX  DC    H'92'               MAX WTO OR LREC SIZE           76200 10260000
#S23LNE2 DS    H                   LINE 2 LENGTH                  76200 10270000
S23LNE2  DS    CL100               LINE 2 WORK AREA               76200 10280000
S23SEV     DS  CL1                                                      10290000
S23STMT    DC  XL4'00000000'                                            10300000
#S23BLKS   DS  H                                                        10310000
           DS  H                                                        10320000
#S23LREC   DS  H                                                        10330000
#S23MSSG   DS  H                                                        10340000
S23MSSG    DS  CL150                                              74365 10350000
           DS  F                                                  75003 10360000
#VOL       DC  H'0'                                               75311 10370000
VOL        DC  CL50' '                                            75311 10380000
TASK2ECB   DC  F'0'                                               74365 10390000
           DS  F               SPARE                                    10400000
RUNBLDL    DS  0D                                                       10410000
           DC  H'1'                                                     10420000
           DC  H'68'                                                    10430000
RUNNAME    DS  CL8                                                      10440000
RUNTTRK    DS  CL4                                                      10450000
RUNZ1      DS  CL1                                                      10460000
RUNC1      DS  CL1                                                      10470000
RUNUSDTA   DS  CL68                                                     10480000
UJ00ANS    DS 3F                                                        10490000
UJE00DDM    DC CL8'$$PRNT'                                              10500000
           ENTRY RETN,INSTRUCT,PRINT  ******FOR LINK MAP ******   75128 10510000
RETN       DCB DDNAME=&DDINST,DSORG=PO,MACRF=W,                 80290  *10520000
               DEVD=DA,RECFM=FB,LRECL=80,                              *10530000
               BLKSIZE=&RETNSIZ                                    DASD 10540000
INSTRUCT   DCB DDNAME=&DDINST,DSORG=PO,MACRF=(R,W),DEVD=DA              10550000
PRINT      DCB DDNAME=&DDPRT,DSORG=PS,DEVD=DA,RECFM=VB,LRECL=126,      *10560000
               BLKSIZE=136,MACRF=W                                      10570000
         AIF   (&X8).X8120                                              10580000
JOBQ       DCB DDNAME=$$JOBQ,DSORG=PS,MACRF=(WP,RP),DEVD=DA       ***** 10590000
           ENTRY JOBQ                                             ***** 10600000
TEMPDCB  DCB   DDNAME=&DDINST,DSORG=PO,MACRF=R,          JOL30116 76200*10610000
               DEVD=DA,EXLST=TEMPEXIT                    JOL30116 76200 10620000
TEMPEXIT DC    A(JFCBDSNM+X'87000000')                   JOL30116 76200 10630000
ATIOT      DS  A                                                        10640000
.X8120   ANOP                                                           10650000
ATCB       DS  A               ADDRESS OF TCB                           10660000
         AIF   (&X8).X8140                                              10670000
AQMRAW   DS    A(0)           IEFQMRAW JOB Q RTN ADDRESS          75128 10680000
IBMRTN     DC  CL8' '          NAME OF LOADED IBM ROUTINE TO ACCES***** 10690000
*                              THE SYSTEM JOB QUEUE               ***** 10700000
JCTTTR     DC  A(0)            ADDRESS | TTR OF THE JCT (EACH     ***** 10710000
*                              SYSTEM IS A LITTLE DIFFERENT)      ***** 10720000
           SPACE 3                                                      10730000
* THIS TABLE IS USED BY THE SCRATCH AND CATLG ROUTINES                  10740000
*     ALTHOUGH THE JOL PROCESSOR KNOWS WHAT TYPE OF UNIT A 'DD' CARD    10750000
*     IS FOR,TO SAVE SPACE IN THE PROCESSOR IT IS NOT CONVERTED         10760000
*     TO A FULL IBM UNIT (AND OF COURSE THE USER MAY SPECIFY HIS        10770000
*     OWN GENERIC UNIT)                                                 10780000
* THIS TABLE IS USED ONLY WHEN A SCRATCH OR CATALOGUE WAS GIVEN         10790000
*     AND THE USER DID NOT CREATE THE DATA-SET IN THIS JOB,AND          10800000
*     THERE-FORE OS MAY NOT HAVE CONVERTED IT INTO A NICE LOOKING       10810000
*     UMIT FOR US.                                                      10820000
HEXUNITS   DC A(*+12)                                                   10830000
           DC A(5)                                                      10840000
           DC A(HEXUNITE-5)                                             10850000
         COPY  UNITABLE                                            DASD 10860000
HEXUNITE DS    0H                                                       10870000
.X8140   ANOP                                                           10880000
           SPACE 3                                                      10890000
           PRINT GEN                                                    10900000
HEX        EQU *-240                                              75311 10910000
           DC  C'0123456789ABCDEF'                                75311 10920000
#DSNAME    DS 0H                                                        10930000
#DSN       DC  H'10'         INITED ONLY FOR TESTS                      10940000
DSN        DS   0CL44                                                   10950000
DSNAME     DC  CL44'NOT INIT'                                           10960000
RETN8    LA    R15,8                                                    10970000
         B     RETRN                                                    10980000
RETN4    LA    R15,4                                                    10990000
         B     RETRN                                                    11000000
RETN0    SLR   R15,R15                                                  11010000
RETRN    JOLRETN RC=(15)                                                11020000
           SPACE 3                                                      11030000
          DC    80S(*)                                                  11040000
           LTORG                                                        11050000
RETNAREA DS    0D                                                       11060000
READAREA DS    XL&RETNSIZ                                          DASD 11070000
         ORG   READAREA                                                 11080000
TTR$RETN   DS  F               CONSTRUCTED BY BLDL IN UJESCHED          11090000
TTR$INST   DS  F               CONSTRUCTED BY BLDL IN UJESCHED          11100000
NOIDS      DS  H          CURRENT NO OF IDS                             11110000
LEVEL      DC H'0'                                                      11120000
NEST       DC H'0'                                                      11130000
COND       DC  CL50' '                                                  11140000
ERRORIND DC    X'00'          SET ON IF ABEND            CHG26028 76200 11150000
INERRORL DC    X'00'          ON IF CURRENTLY DOING ERRORCHG26028 76200 11160000
* NOTE:- DO NOT SEPARATE NEXT TWO LOCATIONS              CHG26028 76200 11170000
ERRLEVEL DC    H'0'           SET BY 'UJE04IF' WHEN -    CHG26028 76200 11180000
ERRNEST  DC    H'0'           'IF ERROR' FOUND           CHG26028 76200 11190000
SAVENEST   DC  XL6'00'                                                  11200000
         EYEBALL MAXCC                                                  11210000
MAXCC      DC  F'0'                                                     11220000
LASTCC     DC  F'0'                                                     11230000
JOLSVC     DC  X'0A00'         SVC FROM 'OPTION' INSTRUCTION      75311 11240000
IDSTART  DS    0X                                                       11250000
         ORG                                                            11260000
           SPACE 3                                                      11270000
TABLES CSECT                                                            11280000
         COPY  DDDSNDET                                           75128 11290000
         ORG                                                            11300000
DDDETLN  EQU   *-DDDSNDET     LENGTH OF THE AREA                        11310000
         ORG   DDDSNDET                                           75128 11320000
         COPY  PGMDETS                                            75128 11330000
         SPACE 3                                                  75128 11340000
         ORG                                                            11350000
         DS    0H                                                       11360000
MAXIDS   DC    AL2((READAREA+L'READAREA-IDSTART)/18)                    11370000
         DC    AL2(0)                                                   11380000
BLANKS   DC    CL20' '                                                  11390000
         LTORG                                                          11400000
         AIF   (&X8).X8160                                              11410000
TCBFA    EQU   X'80'                                                    11420003
         FIX        CVC GET TCB MACRO LATER                             11430003
         EYEBALL JCT                                                    11440000
JCT      DS    0D                                                       11450000
         IEFAJCTB                                                       11460000
         AGO   .MVSJCT1                                                 11470000
JCT      DS    CL176                                                    11480000
         ORG   JCT+8                                                    11490000
JCTJOBMN DS    CL8             JOB-NAME                                 11500000
           ORG JCT+24                                                   11510000
JCTPDIP    DS  A               QUEUE ADDRESS OF THE PDQ                 11520000
JCTAGDG    DS  A               QUEUE ADDRESS OF THE GDG BIAS TABLE      11530000
JCTASCT1   DS  A               QUEUE ADDRESS OF THE FIRST SCT           11540000
JCTASMB1   DS  A               QUEUE ADDRESS OF THE FIRST SMB           11550000
JCTAPCT    DS  A               QUEUE ADDRESS OF THE JOB ACCT            11560000
JCTASCD1   DS  A               QUEUE ADDRESS OF THE FIRST SCD           11570000
JCTADSB    DS  A               QUEUE ADDRESS OF THE LAST DSB            11580000
           ORG JCT+88                                                   11590000
JCTADSN    DS  A               QUEUE ADDRESS OF DSENQ TABLE.            11600000
JCTREGN    DS  AL2                                                      11610000
JCTQID     DS  AL1                                                      11620000
JCTSNUMB   DS 0AL1                                                      11630000
JCT#STPS   DS  AL1             NO OF STEPS                              11640000
           ORG JCT#STPS                                                 11650000
JCTSTEP    DS  AL1                                                      11660000
           ORG JCT+107                                                  11670000
JCT#TRKS   DS  AL1             NUMBER TRKS OF JOBQ USED THIS JOB        11680000
           ORG JCT+112                                                  11690000
JCTSSTR    DS  A               QUEUE ADDRESS OF CURRENT (I.E NOW        11700000
*                              EXECUTING) SCT                           11710000
           DS CL60                                                      11720000
.MVSJCT1     ANOP                                                       11730000
           EYEBALL SCT                                                  11740000
SCT        DS  0D                                                       11750000
         IEFASCTB                                                       11760000
         AGO   .MVSSCT1                                                 11770000
SCT        DS  CL176                                                    11780000
           ORG SCT+12                                                   11790000
SCTASIOT   DS  CL3             QUEUE ADDRESS OF NEXT SIOT               11800000
           ORG SCT+20                                                   11810000
SCTANSCT    DS  AL3             TTR OF NEXT SCT                         11820000
           ORG SCT+36                                                   11830000
SCTAVOLT   DS  AL3             TTR OF VOLT                              11840000
           ORG SCT+44                                                   11850000
SCTPROC    DS CL8                                                       11860000
SCTSNAME    DS CL8                                                      11870000
           ORG SCT+64                                                   11880000
SCT#SIOT   DS  AL1             NO OF SIOTS IN THIS STEP                 11890000
           ORG SCT+108                                                  11900000
SCTPGMNM    DS CL8              PROGRAM NAME                            11910000
           ORG SCT+121                                                  11920000
SCTCOND1   DS  AL2             COND 1                                   11930000
SCTOP1     DS  AL1             OPERATOR 1                               11940000
SCTACON1   DS  AL3             ADDRESS OF SCT REFERRED TO BY COND       11950000
           ORG SCT+160                                                  11960000
SCTABCND   DS  AL2             ABEND (OR EIGHTH) COND CODE              11970000
SCTOP8     DS  AL1                                                      11980000
SCTACON8   DS  AL3                                                      11990000
.MVSSCT1       ANOP                                                     12000000
           EYEBALL SIOT                                                 12010000
SIOT     DS    0D                                                       12020000
         IEFASIOT                                                       12030000
         AGO   .MVSSIOT                                                 12040000
SIOT       DS  CL176                                                    12050000
           ORG SIOT+4                                                   12060000
SIOTDDNM   DS  CL8             DDNAME IN SIOT                           12070000
           ORG SIOT+28                                                  12080000
SIOTASIO   DS  A               ADDRESS OF NEXT SIOT                     12090000
SCTPJFCB   DS  A               ADDRESS OF CORRESPONDING JFCB TO THIS    12100000
*                              SIOT                                     12110000
           ORG SIOT+49                                                  12120000
SIOT#VOT   DS  AL1             NUMBER OF VOLS IN THIS STEPS VOLT        12130000
SIOTRELV   DS  AL2             RELATIVE POINTER TO VOL TBL ENTRY        12140000
SIOTDDNO   DS  AL1             INTERNAL DD NUMBER                       12150000
SIOT#UNI   DS  AL1             #OF UNITS FOR THIS DATA SET              12160000
SIOT#VOL   DS  AL1             #OF VOLS                                 12170000
SCTSDISP   DS  AL1             BIT 0-RESERVED                           12180000
*                              BIT 1 RETAIN VOLUME                      12190000
*                              BIT 2 PRIVATE VOLUME                     12200000
*                              BIT 3 PASS DATA SET                      12210000
*                              BIT 4 KEEP DATA SET                      12220000
*                              BIT 5 DELETE DATA SET                    12230000
*                              BIT 6 CATALOGUE DATA SET                 12240000
*                              BIT 7 UNCATLOGUE DATA SET                12250000
         ORG   SIOT+58                                                  12260000
SIOTIND3 DS    AL1                                                      12270000
*                              BIT 0 VREF TO DSNAME                     12280000
*                              BIT 3 VREF IN STEP                       12290000
*                              BIT 4 SYSOUT SPECIFIED                   12300000
*                              BIT 5 NEW DATA SET                       12310000
*                              BIT 6 MOD DATA SET                       12320000
*                              BIT 7 OLD OR SHR DATA SET                12330000
         ORG   SIOT+59                                                  12340000
SIOTIND4 DS    AL1                                                      12350000
*                              BIT 2 NO PDQ PROCESSING                  12360000
*                              BIT 6 DSN IS IN PDQ                      12370000
*                              BIT 7 OLD OR MOD DATA SET =0             12380000
*                              BIT 7 NEW DATA SET = 1                   12390000
         ORG   SIOT+60                                                  12400000
SCTUTYPE DS   CL8                                                       12410000
         ORG   SIOT+84                                                  12420000
SIOTADSB DS    AL3,CL1         QUEUE ADDRESS OF DSB IF SYSOUT SPECIFIED 12430000
SIOTNDSB DS    AL4             QUEUE ADDRESS OF NEXT DSB                12440000
         ORG   SIOT+92                                                  12450000
SIOTCDSP DS    AL1             CONDITIONAL DISPOSITIONS                 12460000
*                              BIT 3 DD IS NOT PRIVATE                  12470000
*                              BIT 4 KEEP                               12480000
*                              BIT 5 DELETE                             12490000
*                              BIT 6 CATLG                              12500000
*                              BIT 7 UNCATLG                            12510000
SIOTLPDQ DS    AL3             ADDRESS OF LAST SIOT TO PASS DATA SET    12520000
.MVSSIOT ANOP                                                           12530000
         ORG                                                            12540000
         EYEBALL PDQ                                                    12550000
         DS    0D                                                       12560000
PDQ      DS    CL176                                                    12570000
         ORG   PDQ                                                      12580000
PDQDSN1  DS    CL44            DSNAME 1 IN PASSED DATA SET QUEUE        12590000
PDQDSN2  DS    CL44            DSNAME 2 IN PASSED DATA SET QUEUE        12600000
PDQDSN3  DS    CL44            DSNAME 3 IN PASSED DATA SET QUEUE        12610000
PDQENTRY DS    CL1             NUMBER OF ENTRIES IN THIS PDQ            12620000
PDQRESD  DS    CL35            JUNK OR SOMETHING                        12630000
PDQABLK  DS    CL3,CL1         ADDRESS OF ASSOCIATED PDQ BLOCK          12640000
PDQNPDQ  DS    CL3,CL1         ADDRESS OF NEXT PDQ DIRECTORY            12650000
*THESE FIELDS CORRESPOND TO THE MVS PASSED DATA SET INFORMATION         12660000
* BLOCK.                                                                12670000
***** IT IS NOT POSSIBLE TO USE AN MVS MACRO FOR THIS FUNCTION          12680000
* AS ONE DOES NOT EXIST.                                                12690000
*****                                                                   12700000
* THIS IS THE ONLY BLOCK THAT HAS CHANGED FROM                          12710000
* MVT TO MVS ************(SO FAR....) ******                            12720000
          ORG  PDQ                                                      12730000
PDIBLOCK  DS   0X                                                       12740000
PDINPDIP  DS   AL3   ADDRESS OF NEXT PDI SVA                            12750000
PDICTR    DS   AL1   NUMBER OF DSNAMES IN THIS BLOCK                    12760000
PDIBNXTP  DS   A     NEXT PDI BLOCK (DIFFERS FROM PDINPDIP              12770000
*                    ABOVE, AS IT POINTS DIRECTLY AT THE BLOCK,         12780000
*                    NOT -16 AS PDINPDIP).                              12790000
PDIDSNAM  DS   CL44  1ST DSNAME                                         12800000
PDIUNWA   DS   CL1   PASS Q INDICATORS                                  12810000
*                    BIT 0 ON IF INITIAL STATUS=OLD                     12820000
*                    BIT 1 ON IF CURRENT STATUS=OLD                     12830000
*                    BIT 2 ON IF PASS,OFF IF RECIEVED                   12840000
*                    BIT 6 ON IF DSNAME IS A JOBLIB                     12850000
PDIRESVD DS   CL1   RESERVED                                            12860000
PDISTPNO DS   H     STEP NUMBER THAT PASSED                             12870000
PDISIOTA DS   AL3,AL1 SVA OF SIOT THAT PASSED DSN                       12880000
PDISIOTP DS   A     USED FOR SIOT IN ALLOCATION ONLY.                   12890000
* THE ABOVE FIELDS ARE REPEATED THREE TIMES.                            12900000
         ORG  PDIDSNAM                                                  12910000
PDIDSN1  DS   CL44                                                      12920000
PDITERM1 DS   CL1                                                       12930000
PDIRESV1 DS   CL1                                                       12940000
PDISTN1  DS   H                                                         12950000
PDISIOT1 DS   AL3,AL1                                                   12960000
PDISIOW1 DS   A                                                         12970000
PDILEN   EQU   *-PDIDSN1                                                12980000
PDIDSN2  DS   CL44                                                      12990000
PDITERM2 DS   CL1                                                       13000000
PDIRESV2 DS   CL1                                                       13010000
PDISTPN2 DS   H                                                         13020000
PDISIOT2 DS   AL3,AL1                                                   13030000
PDISIOW2 DS   A                                                         13040000
PDIDSN3  DS   CL44                                                      13050000
PDITERM3 DS  CL1                                                        13060000
PDIRESV3 DS   CL1                                                       13070000
PDISTPN3 DS   H                                                         13080000
PDISIOT3 DS   AL3,AL1                                                   13090000
PDISIOW3 DS   A                                                         13100000
         ORG                                                            13110000
         EYEBALL PDQBLOCK                                               13120000
         DS    0D                                                       13130000
PDQBLK   DS    CL176          PASSED DATA SET QUEUE BLOCK               13140000
         ORG   PDQBLK                                                   13150000
PDQCSTEP DS    CL1             CURRENT STEP NUMBER (OR LAST USE         13160000
*                              OF THIS DATA SET)                        13170000
PDQDDNO  DS    CL1             CURRENT DD NUMBER                        13180000
PDQTERM  DS    CL1             PDQ TERMINATION WORK AREA                13190000
*    IF PDQTERM=B'0010' DD-CARD SAID NEW,PASS                           13200000
*    IF PDQTERM=B'0100' DD-CARD SAID OLD,KEEP (IE NOT PASSED NOW)       13210000
*    IF PDQTERM=B'1110' DD-CARD SAID OLD,PASS (OLD,CURRENT STATUS=OLD)  13220000
*    IF PDQTERM=B'1010' DD-CARD SAID OLD,DELETE (OLD,NOT PASSED)        13230000
* IT APPEARS THAT ONCE THE CURRENT STATUS BIT IS 0,ANY REFERENCE        13240000
*    TO THE DATA SET NAME IS IGNORED (I.E AS THOUGH NEVER ON PDQ).      13250000
*                                                                       13260000
*                                                                       13270000
PDQ#UCB  DS    CL1             NUMBER OF UCB'S                          13280000
PDQAJFCB DS    CL3,CL1         QUEUE ADDRESS OF THIS JFCB               13290000
PDQASIOT DS    CL3             QUEUE ADDRESS OF THIS SIOT               13300000
PDQSSTEP DS    CL1             CURRENT STEP NUMBER (WHICH APPEARS       13310000
*                              TO BE ALWAYS THE SAME AS PDQCSTEP ABOVE) 13320000
PDQUCBS  DS    CL40                                                     13330000
PDQUACBO DS    CL3,CL1         ADDRESS OF PDQ OVERFLOW BLOCK            13340000
PDQBLKLN EQU   *-PDQBLK                                                 13350000
* THE ABOVE FIELDS ARE REPEATED TWICE (IE 3 DATA SET DETAILS ALLOWED)   13360000
         ORG                                                            13370000
.X8160   ANOP                                                           13380000
         AIF   (&X8).X8180                                              13390000
         SPACE 3                                                        13400000
         EYEBALL JFCB                                                   13410000
         IEFJFCBN   LIST=YES                                      76200 13420000
         EYEBALL QMPA                                                   13430000
QMPA     DS    0D              USED FOR VS CURRENTLY                    13440000
QMPAJOB  DS    CL8             JOB NAME OR NO-WORK-CHAIN ELEMENT        13450000
QMPAFUNC DS    CL1             FUNCTION CODE                            13460000
QMPAFLTR DS    CL2             NN OF 1ST LOGL TRACK ASSIGNED TO ENTRY   13470000
QMPANOTR DS    CL1             NUMBER OF RECORDS ASSIGNED IN THIS TRACK 13480000
QMPANXTL DS    CL2             NN OF NEXT LOGICAL TRACK                 13490000
QMPANOLT DS    CL1             NUMBER OF LOGICAL TRACKS ASSIGNED        13500000
QMPAJBCD DS    CL1             JOB TYPE CODE                            13510000
QMPAJBST DS    CL1             JOB STATUS CODE                          13520000
QMPAPRTY DS    CL1             JOB PRIORITY                             13530000
QMPANXTQ DS    CL2             NN OF NEXT QUEUE ENTRY                   13540000
QMPAQID  DS    CL2             QUEUE ENTRY IDENTIFICATION               13550000
QMPAORCL DS    CL1             ORIGIN CLASS ID                          13560000
QMPARES1 DS    CL1             RESERVED                                 13570000
QMPATRKS DS    A               ADDRESS TRACK STACKING PARM LIST         13580000
QMPAIND  DS    CL1                                                      13590000
         ORG   QMPAIND                                                  13600000
QMPAAECB DS    A               ADDRESS OF USERS ECB/IOB                 13610000
QMPANORC DS    CL1             1ST 4 BITS=NO OF RECORDS TO ASSIGN       13620000
*                              2ND 4 BITS=NO OF RECORDS TO READ/WRITE   13630000
QMPAAEXT DS    AL3             ADDRESS OF EXTERNAL PARAMETER AREA       13640000
IEFQATCB DS    A               ADDRESS OF TCB                           13650000
IEFQAREC DS    A               ADDRESS OF RECORD BUFFER                 13660000
IEFQAQMP DC    A(QMPA)         ADDRESS OF QMPA                          13670000
IEFQTTR  DS    A               TTR OF REQUESTED RECORD                  13680000
IEFQRCLN DC    AL2(176)                                                 13690000
IEFQFUNC DC    AL2(0)                                                   13700000
IEFQDECB DS    A               WORK AREA(NOT REQUIRED BY IEFQMMAC)      13710000
IEFQRETN DS    A               RETURN ADDRESS                           13720000
.X8180   ANOP                                                           13730000
         EYEBALL INST                                                   13740000
INST     DS    H                               INSTRUCTIONS USE THIS    13750000
*                                              AREA AS WORK AREA AND    13760000
*                                              THEY ARE WRITTEN FROM    13770000
*                                              HERE                     13780000
         ORG   INST                                                     13790000
ILENGTH  DS    H                               LENGTH OF RECORD         13800000
         DC    H'0'                            FOR VB RECORD DESCRIPTOR 13810000
II       DC    C'I'                            RECORD TYPE              13820000
ILABEL   DS    CL8                             STATEMENT LABEL          13830000
ISTMT    DS    CL4                             STATEMENT NUMBER         13840000
ILEVEL   DS    CL1                                                      13850000
INEST    DS    CL1                                                      13860000
ICOMMAND DS    CL8                             INSTRUCTION EG 'TYPE'    13870000
IBODY    EQU   *-ILENGTH                       LENGTH OF FIXED          13880000
*                                              PART OF RECORD           13890000
ITEXT    DS    CL150                                              75128 13900000
         SPACE 3                                                        13910000
         EYEBALL TKNX                                                   13920000
         COPY  TKNX                                                     13930000
         ORG TKNSTRG-IBODY-2                                            13940000
INSTRDA  DS    0C                                                       13950000
         ORG                                                            13960000
         LTORG                                                          13970000
         DS    0D                                                       13980000
INSCSECT CSECT                                                          13990000
JE00TBL1 DC    A(JE00TBL2)                                              14000000
         DC    A(12)                                                    14010000
         DC    A(JE00END2-12)                                           14020000
JE00TBL2 DC    CL8'RUN     ',V(UJE20RUN)                                14030000
         DC    CL8'C       ',V(UJE05CAT)        CATLG                   14040000
         DC    CL8'U       ',V(UJE06UNC)        UNCATLG                 14050000
         DC    CL8'K       ',V(UJE07KEE)        KEEP                    14060000
         DC    CL8'S       ',V(UJE08SCR)        SCRATCH                 14070000
         DC    CL8'D       ',V(UJE09DEL)        DELETE                  14080000
         DC    CL8'RETURN  ',V(UJE23RET)                          74365 14090000
         DC    CL8'TYPE    ',V(UJE10TYP)                                14100000
         DC    CL8'DISPLAY ',V(UJE11DIS)                                14110000
         DC    CL8'SIGNAL  ',V(UJE12SIG)                                14120000
         DC    CL8'STOP    ',V(UJE13STP)                                14130000
         DC    CL8'F       ',V(UJE14FRE)        FREE                    14140000
         DC    CL8'OPTIONS ',V(UJE31OPT)                          75311 14150000
JE00END2 DS    0C                                                       14160000
         EJECT                                                          14170000
PARMAREA DSECT                                                          14180000
         COPY  UJECOMM                                                  14190000
IDOVLY   DSECT                                                          14200000
IDSTMT   DS   CL4                                                       14210000
IDNAME   DS   CL8                                                       14220000
IDRETN   DS   CL4                                                       14230000
IDLEVEL  DS   CL1                                                       14240000
IDNEST   DS   CL1                                                       14250000
********  VOLINFO DSECT USED TO REFERENCE A CAMLST *************   DASD 14260000
VOLINFO  DSECT                                                     DASD 14270000
NOVOLS   DS    H                                                   DASD 14280000
CATDEV   DS    XL4  )                                              DASD 14290000
CATVOL   DS    CL6  )   REPEATS NOVOLS TIMES                       DASD 14300000
CATLABEL DS    H    )                                              DASD 14310000
         AIF   (&X8).X8200                                              14320000
UCBS     DSECT ,                                            FIX-X 76200 14330000
         IEFUCBOB  LIST=YES                                 FIX-X 76200 14340000
.X8200   ANOP                                                           14350000
         COPY  UJE04IF                                                  14360000
           TITLE 'UJE05CAT:CATALOGUE DATA SET'                          14370000
          JOLSAVE CSECT=UJE05CAT                                        14380000
* THIS ROUTINE DOES THE CATALOGUING                                     14390000
         AIF   (&X8).X8220                                              14400000
* NOW:- WE FACE MANY PROBLEMS WHEN DOING A 'CATLG' (OR A KEEP)          14410000
* FIRST,WE SHALL CALL THE KEEP ROUTINE WHICH READS THE ODD              14420000
*     JFCB,FIXES PDQ'S ETC                                              14430000
           CLI ICOMMAND,C'U'   UNCATALOGUE CALLING ME TO PRINT          14440000
*                              ERROR MESSAGES ?                         14450000
*          BNE E05DOCAT                                                 14460000
           BE E05PRNTE                                                  14470000
           CLI ICOMMAND,C'D'   DELETE CALLING ME TO PRINT ERR?          14480000
           BE E05PRNTE                                                  14490000
E05DOCAT DS    0H                                                       14500000
           SPACE 3                                                      14510000
         CALL UJE07KEE   KEEPS THE DATA SET.                            14520000
         LTR R15,R15                                                    14530000
         BZ  E05TVOLS                                                   14540000
         LR  R2,R15                                                     14550000
         CH  R15,=H'4'       DOES KEEP WANT TO SKIP TO A NEW OS STEP?   14560000
         BNE E05KEEPE        NO,THERE WAS A REAL ERROR                  14570000
         JOLRETN RC=4                                                   14580000
E05KEEPE LA  R2,32                                                      14590000
E05UNSUC DS    0H                                                       14600000
          JOLERR 202,                                                  *14610000
               'DSID ''',DDDSID,''' DSNAME ''',#DSNAME,''' KEPT ON VOL(*14620000
               S) ',#VOL,' BUT NOT CATALOGUED BECAUSE:-'          74365 14630000
         B     E05PRNTE                                                 14640000
E05TVOLS DS    0H                                                       14650000
* AT THIS POINT WE MIGHT HAVE TO DO SOME EXTRA WORK BEFORE WE CAN  DASD 14660000
* CATALOGUE THIS DATASET                                           DASD 14670000
* FIRST IF THE JFCBNVOL (NUMBER OF VOLUMES) EXCEEDS 5              DASD 14680000
* THE REST OF THE VOLUME SERIAL NUMBERS ARE RECORDED IN            DASD 14690000
* A JFCB EXTENSION BLOCK AT 15 A CRACK                             DASD 14700000
* SO IF WE SUPPORT GREATER THAN 5 WE MUST ALLOW FOR THE            DASD 14710000
* O.S. MAXIMUN OF 255.                                             DASD 14720000
         CLC   JFCBNVOL,=AL1(L'JFCBVOLS/6) > 5 VOLUMES ?           DASD 14730000
         BNH   EO5TOLOW             NOPE DO THIS THE OLD WAY       DASD 14740000
         LA    R14,E05UNIT          POINT TO CATALOGUE AREA        DASD 14750000
         SR    R15,R15              CLEAR REG-15                   DASD 14760000
         IC    R15,JFCBNVOL         INSERT VOLUME COUNT            DASD 14770000
EO5STUFF DS    0H                                                  DASD 14780000
         MVC   0(4,R14),SCTUTYPE    PLUG IN UNIT TYPE              DASD 14790000
         MVC   4(6,R14),BLANKS      CLEAR VOLUME SERIAL            DASD 14800000
         MVC   10(2,R14),JFCBFLSQ   PLUG IN FILE SEQ #             DASD 14810000
         LA    R14,12(R14)          POINT TO NEXT AREA             DASD 14820000
         BCT   R15,EO5STUFF         DO THE REST                    DASD 14830000
         XC    0(12,R14),0(R14)     CLEAR NEXT AREA                DASD 14840000
* NOW PLUG IN THE FIRST 5 VOLUMES SERIALS FROM THE JFCB            DASD 14850000
         LA    R15,5                STOP AFTER 5                   DASD 14860000
         LA    R14,E05UNIT          POINT TO CATALOGUE AREA        DASD 14870000
         LA    R1,JFCBVOLS          POINT TO FIRST 5 VOLUMES       DASD 14880000
E05STJ5  DS    0H                                                  DASD 14890000
         MVC   4(6,R14),0(R1)       MOVE IN VOLSER                 DASD 14900000
         LA    R1,6(R1)             POINT TO NEXT VOLUME           DASD 14910000
         LA    R14,12(R14)          POINT TO NEXT AREA             DASD 14920000
         BCT   R15,E05STJ5          RETURN FOR THE REST            DASD 14930000
         ST    R14,E05START         SAVE THIS GUY FOR LATER        DASD 14940000
         SR    R15,R15              CLEAR REG-15                   DASD 14950000
         IC    R15,JFCBNVOL         INSERT # VOLUMES IN R15        DASD 14960000
         SH    R15,=H'5'            BACKOFF 5                      DASD 14970000
         STH   R15,E05#VOLS         SAVE IT                        DASD 14980000
* NOW READ THE JFCB EXTENSION BLOCK POINTER TO BY JFCBEXAD OF THE JDASD 14990000
         MVC   JFCBETTR,JFCBEXAD    PUT ON A WORD BOUNDARY         DASD 15000000
GJFCBX   GETJOBQ JFCXDECB,JFCBETTR  GET EXTENSION BLOCK            DASD 15010000
         MVC   JFCBETTR,JFCBXTTR    MOVE NEXT GUY TO POINTER       DASD 15020000
         LH    R15,E05#VOLS         GET NUMBER OF VOLS LEFT        DASD 15030000
         LA    R1,15                LETS STOP AFTER 15             DASD 15040000
         L     R14,E05START         START MOVING VOLSERS TO HERE   DASD 15050000
         LA    R2,JFCBXVOL          POINT TO EXTRA VOLSER AREA     DASD 15060000
GJFCBXM  MVC   4(6,R14),0(R2)       MOVE HIM IN                    DASD 15070000
         SH    R15,=H'1'            BACKOFF R15 BY 1               DASD 15080000
         BZ    E05DONE              IF ZERO THATS IT               DASD 15090000
         LA    R14,12(R14)          UP TO NEXT AREA                DASD 15100000
         LA    R2,6(R2)             UP TO NEXT VOLSER IS JFCBX     DASD 15110000
         BCT   R1,GJFCBXM           GO BACK FOR THE REST,          DASD 15120000
         STH   R15,E05#VOLS         SAVE THE # OF VOLS LEFT        DASD 15130000
         ST    R14,E05START         SAVE NEXT AREA ADDRESS         DASD 15140000
         B     GJFCBX               GET THE REST OF THE EXTENSION BDASD 15150000
EO5TOLOW DS    0H                                                  DASD 15160000
* NOW LETS DO THE CATALOGUE,SHALL WE ?                                  15170000
         XC    E05VOLS(E05ETBL-E05VOLS),E05VOLS CLEAR TABLE INITIALLY   15180000
         MVC   E05VOLX+(0*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+0  15190000
         MVC   E05VOLX+(1*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+6  15200000
         MVC   E05VOLX+(2*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+12 15210000
         MVC   E05VOLX+(3*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+18 15220000
         MVC   E05VOLX+(4*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+24 15230000
         MVC   E05UNIT+(0*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE    15240000
         MVC   E05UNIT+(1*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE    15250000
         MVC   E05UNIT+(2*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE    15260000
         MVC   E05UNIT+(3*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE    15270000
         MVC   E05UNIT+(4*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE    15280000
* FIX FOR UCC-1  --- ALWAYS SET LABEL TO ONE FOR FOLLOWING DATA SETS    15290001
         MVC   E05LABEL+(1*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),=H'1'      15300001
         MVC   E05LABEL+(2*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),=H'1'      15310001
         MVC   E05LABEL+(3*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),=H'1'      15320001
         MVC   E05LABEL+(4*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),=H'1'      15330001
         MVC   E05LABEL,JFCBFLSQ                                        15340000
         XC    E05#VOLS,E05#VOLS                                        15350000
E05DONE  DS    0H                                                  DASD 15360000
***** TO SUPPORT RECAT, BLDX (AGAIN)                                    15370000
**SEPT 75                                                               15380000
         MVI   E05CAT,100  CATALOGUE INDICATORS                         15390000
         MVI   E05CAT+1,0  TURN OFF BLDX ENTRY                          15400000
           MVC E05#VOLS+1(1),JFCBNVOL SHIFT IN NUMBER OF VOLUMES        15410000
           LA R1,DSNAME                                                 15420000
           ST R1,E05CAT+4                                               15430000
           CLI DDMBR+1,C'+'      GENERATION DATASET ?             75311 15440000
           BE  E05NOBLD        YES,DON'T CATALOGUE WITH BUILD INDEX     15450000
           CLI DDMBR,C'('      GENERATION DATASET ?                     15460000
           BE  E05NOBLD        YES,DON'T CATALOGUE WITH BUILD INDEX     15470000
         CLI VS,C'2'   MVS                                         DASD 15480000
         BE  E05NOBLD  YEP  MVS WILL NOT RECAT WILL BLDX ON        DASD 15490000
         OI  E05CAT+1,X'40'                                       75128 15500000
E05NOBLD DS    0H                                                       15510000
* NOW TEST RE-CATLG FUNCTION                                            15520000
         IFNULL DDLABTYP,E05NALWA                                       15530000
* ALWAYS HERE                                                           15540000
         MVI E05CAT,X'54'  TURN ON RE-CATLG BIT                   75311 15550000
         CATALOG E05CAT                                           75311 15560000
         LTR     R15,R15   DID WE RECATLG IT?                     75311 15570000
         BZ   E05SUCES YES                                        75311 15580000
* NOW RECATLG FAILED, SO ATTEMPT STRAIGHT CATLG THEN              75311 15590000
         MVI   E05CAT,X'64'                                       75311 15600000
E05NALWA DS    0H                                                       15610000
         CATALOG E05CAT                  DO THE CATALOGUE               15620000
         LTR R15,R15                                                    15630000
         BNZ E05ERR                                                     15640000
E05SUCES DS   0H                                                        15650000
* NOW WE MUST CHECK AGAIN FOR GREATER THAN 5 VOLUMES BECAUSE       DASD 15660000
* ALL OF THE VOLUMES MIGHT NOT FIT ON 1 MESSAGE                    DASD 15670000
         LH    R14,E05#VOLS         LOAD VOL COUNT                 DASD 15680000
         XC    E05#VOLS,E05#VOLS    CLEAR VOL COUNT                DASD 15690000
         CH    R14,=H'5'            > 5 VOLUMES                    DASD 15700000
         BNH   E05SUCE2             NO   LETS DOIT THE OLD WAY     DASD 15710000
         SH    R14,=H'5'            SUBTRACT 5                     DASD 15720000
         STH   R14,E05#VOLS         STORE BACK FOR LATER           DASD 15730000
         MVI   DDVOLUME,C' '        MOVE IN JUST THE 1ST FIVE      DASD 15740000
         MVC   DDVOLUME+1(L'DDVOLUME-1),DDVOLUME                   DASD 15750000
         MVC   DDVOLUME(L'JFCBVOLS),JFCBVOLS                       DASD 15760000
         BAL   R14,E00FXVOL         MOVE TO #VOL,VOL EDITTED       DASD 15770000
         L     R15,=A(E05UNIT+60)   POINT TO 6TH VOLSER IN CAMLST  DASD 15780000
         ST    R15,E05START         SAVE FOR LATER                 DASD 15790000
E05SUCE2 DS    0H                                                  DASD 15800000
         JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',                   *15810000
               #DSNAME,''' CATALOGUED ON VOL(S) ',#VOL            74365 15820000
          LH    R14,E05#VOLS        LOAD NUMBER OF VOLS LEFT       DASD 15830000
          LTR   R14,R14             ALL DONE                       DASD 15840000
          BZ    E05GOODR            YES SIR LETS GO                DASD 15850000
E05LMSGS DS    0H                                                  DASD 15860000
          L     R15,E05START        POINT TO NEXT AREA             DASD 15870000
          MVI   DDVOLUME,C' '       CLEAR CONSTRUCT AREA           DASD 15880000
          MVC   DDVOLUME+1(L'DDVOLUME-1),DDVOLUME                  DASD 15890000
          LA    R1,DDVOLUME         POINT TO CONSTRUCT AREA        DASD 15900000
          LA    R2,5                LETS STOP AFTER 5              DASD 15910000
E05LMSG   MVC   0(6,R1),4(R15)      MOVE IN NEXT VOLUME SERIAL     DASD 15920000
          LA    R1,6(R1)            BUMP DDVOLUME BY 6             DASD 15930000
          LA    R15,12(R15)         BUMP CAMLST BY 12              DASD 15940000
          SH    R14,=H'1'           BACKOFF VOL COUNT BY 1         DASD 15950000
          BZ    E05LMSGD            IF ALL DONE GET OUT EARLY      DASD 15960000
          BCT   R2,E05LMSG          RETURN FOR THE REST            DASD 15970000
E05LMSGD DS    0H                                                  DASD 15980000
          STH   R14,E05#VOLS        SAVE # OF VOLS LEFT            DASD 15990000
          ST    R15,E05START        STORE NEXT AREA ADDRESS        DASD 16000000
          BAL   R14,E00FXVOL        MOVE TO #VOL,VOL EDITTED       DASD 16010000
          B     E05SUCE2            GO PRINT THE  MESSAGE          DASD 16020000
E05GOODR DS    0H                                                  DASD 16030000
          JOLRETN                                                       16040000
E05ERR     LR  R2,R15                                                   16050000
           B   E05UNSUC                                                 16060000
           SPACE 3                                                      16070000
E05PRNTE DS    0H                                                       16080000
           B  E05RETNC(R2)                                              16090000
E05RETNC   B   E05SUCES                                                 16100000
           B   E05RET4                                                  16110000
           B   E05RET8                                                  16120000
           B   E05RET12                                                 16130000
           B   E05RET16                                                 16140000
           B   E05RET20                                                 16150000
           B   E05RET24                                                 16160000
           B   E05RET28                                                 16170000
           B   E05RET32                                                 16180000
           B   E05RET36                                                 16190000
E05RET4    JOLERR 203,'CATALOGUE VOLUME NOT MOUNTED'                    16200000
           B  E05RETN0                                                  16210000
         FIX  'NOTE R0=0 IF C AND ALREADY CATLGD'           FIX-X 76200 16220000
         FIX  'NOTE R0=60 IF U/D AND YSAM'                  FIX-X 76200 16230000
E05RET8    JOLERR 204,'DATA SET NAME FOUND AT LOWER LEVEL'              16240000
           B  E05RETN0                                                  16250000
E05RET12 DS    0H                                                       16260000
           JOLERR 205,'CATLG RETN''D 12'                                16270000
           B  E05RETN0                                                  16280000
E05RET16   JOLERR 206,'NO INDEX LEVEL FOR DATA SET'                     16290000
           B  E05RETN0                                                  16300000
E05RET20   JOLERR 407,'CATALOGUE DATA SET IS FULL'                      16310000
           B  E05RETN0                                                  16320000
E05RET24   JOLERR 208,'INVALID GENERATION NAME'                         16330000
           B  E05RETN0                                                  16340000
E05RET28   JOLERR 409,'PERMANENT I/O ERROR ON CATALOGUE DATA SET'       16350000
           B  E05RETN0                                                  16360000
E05RET32   JOLERR 210,'KEEP FAILED FOR DATA SET'                        16370000
           B  E05RETN0                                                  16380000
E05RET36   JOLERR 211,'NO VOLUMES WERE SUPPLIED'                        16390000
E05RETN0   B    RETN0                                                   16400000
E05CAT     CAMLST CAT,0,,E05VOLS                                        16410000
         AGO   .NX8220                                                  16420000
.X8220   ANOP                                                           16430000
         L     R4,ATCB              ADDRESS MY TCB                      16440000
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB                     16450000
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT                 16460000
         BZ    E05NOFCT              EXIT IF NONE ?!! & SSSSSSSSS       16470000
         SPACE                                                          16480000
*   FOUND THE FCT CHAIN. NOW FIND A DATASET ENTRY                       16490000
         SPACE                                                          16500000
         USING FCT,R4                                                   16510000
E05NXFCT DS    0H                                                       16520000
         CLC   FCTFLN,DSN            Q... IS THIS IT?                   16530000
         BE    E05FFCT               A... YES, GO AND FIX IT            16540000
         ICM   R4,7,FCTNFCTA         NEXT FCT                           16550000
         BNZ   E05NXFCT              BR IF THERE IS ONE                 16560000
         B     E05NOFCT                                                 16570000
E05FFCT  DS    0H    FOUND AN FCT TO "FIX"                              16580000
         $TELL (R4)                                                     16590000
         MODESET  KEY=ZERO                                              16600000
         NI    FCTSTS1,X'FF'-FCTS1DLT  IF CAT, DO NOT DELETE            16610000
         NI    FCTFDST1,X'FF'-FCTFSNFD DITTO                            16620000
         OI    FCTFLG3,FCTF3CAT      TURN CAT BIT ON                    16630000
         NI    FCTFLG3,X'FF'-FCTF3UCT TURN OFF UNCAT                    16640000
         SPACE 2                                                        16650000
*  WELL, THAT SHOULD BE ALL                                             16660000
         SPACE                                                          16670000
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY              16680000
         SPACE 3                                                        16690000
* WHILE HERE, COPY THE VOLUME SERIAL NUMBERS TO RESOLVE FUTURE VOLREFS  16700000
         SPACE 2                                                        16710000
         CLEAR DDVOLUME                                                 16720000
         SLR   R8,R8                                                    16730000
         ICM   R8,1,FCTVOLNO        LOAD VOLUME COUNT                   16740000
         BZ    E05NVCT             EXIT IF THERE ARE NO VOLUMES         16750000
         LA    R0,L'DDVOLUME/6      LOAD NUMBER OF VOLUMES ALLOWED      16760000
         CR    R0,R8                CHECK THAT THE SERIAL NUMBERS FIT   16770000
         BH    E05VOK               BE IF OK                            16780000
         JOLERR 512,'DS ',DDDSID,',',#DSN,                             .16790000
               ' VOLUME REFERENCES CANNOT BE RESOLVED, DATASET RESIDES .16800000
               ON TOO MANY VOLUMES'                                     16810000
E05VOK   DS    0H                                                       16820000
         L     R6,FCTVCT                                                16830000
         LA    R15,DDVOLUME         ADDRESS FOR VOLUMES                 16840000
E05VNXTV DS    0H                                                       16850000
         MVC   0(6,R15),8(R6)       COPY THE VOLUME SERIAL NUMBER       16860000
         LA    R15,6(,R15)          ADDRESS FOR NEXT AREA               16870000
         L     R6,4(,R6)            ADDRESS THE NEXT VCT                16880000
         BCT   R8,E05VNXTV          CONTINUE UNTIL ALL AREA DONE        16890000
         SPACE 2                                                        16900000
*  WELL, THAT SHOULD BE ALL: NOW FREE THE ORIGINAL DATASET              16910000
         SPACE                                                          16920000
         UJE22UPD DDDSNAME,DDVOLUME FIX FUTURE VOLUME REFERENCES        16930000
         CALL  UJE07KEE       KEEP THE DATASET                          16940000
         JOLERR 004,'DSID ',DDDSID,' MARKED "CATALOGUE"'                16950000
         MVI   DDDISP+1,C'L' LAST USE                                  .16960000
                                (A LIE OF COURSE, BUT HE WON'T KNOW)    16970000
         MVC   DDDDNAME,FCTACSN    ENSURE HE USES THE CORRECT DDNAME    16980000
         CALL  UJE14FRE            FREE THE DATASET                     16990000
         B     RETN0                                                    17000000
E05NVCT  JOLERR 201,                                                   .17010000
               'DSID ',DDDSID,' NOT CATALOGUED, HAS NO VOLUMES  '       17020000
         B     RETN0                                                    17030000
E05RETN0 B     RETN0                                                    17040000
E05NOFCT JOLERR 202,                                                   .17050000
               'DSID ',DDDSID,' NOT CATALOGUED, IS NOT ALLOCATED'       17060000
         B     RETN0                                                    17070000
.NX8220  ANOP                                                           17080003
         LTORG                                                     DASD 17090000
         DC    80S(*)                                              DASD 17100000
         AIF   (&X8).X8240                                              17110000
JFCXDECB DC    F'0'                                                DASD 17120000
          LA       R1,JFCBXTTR                                     DASD 17130000
          SPACE 3                                                  DASD 17140000
          EYEBALL  JFCX                                            DASD 17150000
          IEFJFCBX                                                 DASD 17160000
JFCBETTR  DC       F'0' JFCB EXTENSION POINTER                     DASD 17170000
E05START  DC       F'0' AREA ADDRESS WORK AREA                     DASD 17180000
.X8240   ANOP                                                           17190000
          ENTRY E05VOLS                                            DASD 17200000
E05VOLS   DS 0D                                                         17210000
E05#VOLS  DS H                                                          17220000
E05UNIT   DS CL4                                                        17230000
E05VOLX   DS CL6                                                        17240000
E05LABEL  DS CL2                                                        17250000
          PRINT NODATA SAVE SOME PAPER                                  17260000
          DC    254CL12' '          EXTENDED WORK AREA FOR 255 VOLUDASD 17270000
          PRINT DATA WASTE MORE PAPER FOR CLEM                          17280000
E05ETBL   EQU   E05VOLS+100                                        DASD 17290000
*RECAT B'0001'                                                          17300000
*CAT   B'0010'                                                          17310000
*UNACT B'00001000'                                                      17320000
*BLD   B'0100'                                                          17330000
*DELETE INDEXES B'00001100'                                             17340000
********* ALL THE ABOVE APPLY TO BYTE 0                                 17350000
*  +2  (3RD) B'00000001'=VSAM                                           17360000
           TITLE 'UJE06UNC:UNCATALOGUE DATA SET'                        17370000
           JOLSAVE CSECT=UJE06UNC                                       17380000
         LA    R1,DSNAME                                                17390000
         ST    R1,E06REMUV+4                                            17400000
         ST    R1,E06REMDT+4   REMOVE INDEXES,TOO                       17410000
****************************************************************   DASD 17420000
* NEW 8-1-77 "UNCATLG GDGALL"   NO JCL NEED   ITS ALL DONE HERE*   DASD 17430000
****************************************************************   DASD 17440000
         CLI   DDCATLGS,104    UNCAT GDG ALL ?                     DASD 17450000
         BE    E06GDGAL        GO DO IT                            DASD 17460000
         CLI   DDMBR,C'+'      GDG ?                                    17470000
         BE    E06NODLT        YES,DON'T DELETE INDEX                   17480000
         CLI   DDMBR,C'('      GDG ?                                    17490000
         BE    E06NODLT        YES,DON'T DELETE INDEX                   17500000
         CATALOG E06REMDT    DO THE UNCATALOG AND REMOVE INDEXES        17510000
         LTR   R15,R15         ERROR ?                                  17520000
         BNZ   E06FAIL         YES,PRINT ERROR MESSAGES                 17530000
         B     E06SUCES                                                 17540000
E06NODLT DS    0H                                                       17550000
         CATALOG E06REMUV                                               17560000
         LTR   R15,R15                                                  17570000
          BNZ E06FAIL                                                   17580000
E06SUCES  DS    0H                                                      17590000
           JOLERR 101,'DSID ',DDDSID,' DSNAME ',                       *17600000
               #DSNAME,' UNCATALOGUED'                                  17610000
          B    E06RETN                                                  17620000
E06FAIL  DS    0H                                                       17630000
           LR  R2,R15          SAVE UNCATLG RETURN CODE                 17640000
           JOLERR 202,                                                 *17650000
               'UNCATLG FOR DSID ''',DDDSID,                           *17660000
               ''' NAME ''',#DSNAME,''' FAILED BECAUSE:-'               17670000
         CALL UJE05CAT       LET IT PRINT WHY                           17680000
E06RETN  JOLRETN   RC=0                                            DASD 17690000
E06GDGAL L     R15,=V(E05VOLS)         LOAD CAMLIST ADDRESS        DASD 17700000
         ST    R15,E06LOCAT+12         POINT TO LOCATE AREA        DASD 17710000
         MVC   #DSNAME(2),=H'44'       SET DSNAME TO THE BIGGIE    DASD 17720000
         LA    R6,300(R15)             GO UP A FEW AND SAVE POINTERDASD 17730000
         LA    R1,DSNAME               POINT TO DSNAME             DASD 17740000
         LA    R15,43(R1)              POINT TO END OF DSNAME      DASD 17750000
         LA    R14,1                   INCR BY 1                   DASD 17760000
E06FIND  CLI   0(R1),C' '              END OF DSNAME YET           DASD 17770000
         BE    *+8                     YEP LETS MOVE               DASD 17780000
         BXLE  R1,R14,E06FIND          RETURN                      DASD 17790000
         MVC   0(3,R1),=C'(0)'         LOOK FOR RELATIVE GDG 0     DASD 17800000
         MVC   0(44,R6),DSNAME         MOVE TO LOCATE AREA         DASD 17810000
E06LOOK  MVC   DSNAME,0(R6)            MOVE DSNAME IN              DASD 17820000
         LOCATE E06LOCAT                                           DASD 17830000
         LTR   R15,R15                 DID LOACTE FIND ANYTHING ?? DASD 17840000
         BNZ   E06RETN                 NOPE THAT ALL               DASD 17850000
         CATALOG E06REMUV                                          DASD 17860000
         LTR   R15,R15                 DID THIS WORK OK            DASD 17870000
         BNZ   E06FAIL                 NOPE SOMETHINGS WRONG       DASD 17880000
         JOLERR 103,'DSID ''',DDDSID,''' DSNAME ''',                   *17890000
               #DSNAME,''' GDGALL UNCATALOGED'                     DASD 17900000
         B     E06LOOK                 RETURN TO LOOK FOR MORE GDGADASD 17910000
E06LOCAT CAMLST NAME,DSNAME,,0                                     DASD 17920000
E06REMUV   CAMLST UNCAT,0                                               17930000
E06REMDT   CAMLST UCATDX,0     UNCATLG,REMOVE INDEXES                   17940000
.X8260    ANOP                                                          17950000
         JOLRETN                                                        17960000
         SPACE 2                                                        17970000
         DC    80S(*)                                                   17980000
           TITLE 'UJE07KEE:KEEP DATA SET'                               17990000
           JOLSAVE CSECT=UJE07KEE                                       18000000
* A KEEP INSTRUCTION IS TO BE EXECUTED.                                 18010000
         AIF   (&X8).X8280                                              18020000
* THE KEEP IS A PRETTY EASY INSTRUCTION TO DO,AS IT BASICALLY           18030000
*    MEANS THAT THE PDQ MUST BE FOOLED INTO THINKING THAT THE           18040000
*    DATA SET WAS ORIGINALLY OLD.                                       18050000
* THE ONLY COMPLICATION THAT CAN ARISE IS THAT WE WOULD (ON OCCASIONS)  18060000
*    LIKE THE VOLUME TO BE UNLOADED(OR SET INTO AN UN-LOADABLE          18070000
*    STATUS                                                             18080000
* PERMANENT,RETAINED,'JOL PREFERRED' ETC VOLUMES DO NOT HAVE TO         18090000
*    HAVE THEIR STATUS SET SO THEY MAY BE UNLOADED AND THIS IS          18100000
*    LEFT TO THE OPERATORS DISCRETION.                                  18110000
* IF IT IS A TAPE OR A NON-PREFERRED,(PRIVATE IN OTHER WORDS)           18120000
*    VOLUME AND IT IS NOT RETAINED,IT SHOULD BE DISMOUNTED.             18130000
          CLC DDDSNAME,=C'*DUMMY  '                                     18140000
          BNE  E07NOTDM                           74365                 18150000
          JOLERR 206,'DSID ''',DDDSID,''' DSNAME ''',#DSN,             *18160000
               ''' NOT KEPT:- DUMMY DATA SET'                    75003  18170000
          JOLRETN RC=16                                                 18180000
E07NOTDM DS    0H                                                       18190000
           CALL UJE81PDQ                                                18200000
           LTR R15,R15                                                  18210000
           BZ  E07INPDQ                                                 18220000
           CLI ICOMMAND,C'K'   KEEP ?                                   18230000
           BE  E07ERR1         YES,FLAG IT AS AN ERROR THEN             18240000
           CLC =C'*.',DDVOLUME VOLUME REFERENCE SPECIFIED,BUT DATA SET  18250000
* NOT CREATED ? THIS CAN OCCUR IF THE CREATING STEP WAS BYPASSED        18260000
           BE  E07ERR1         GO FLAG AS AN ERROR                      18270000
           CLI DDVOLUME,C' '   VOL SPECIFIED ?                          18280000
           BE  E07RETNF        NO,SO ERROR                              18290000
           CLI DDUNITYP,C' '   UNIT SPECIFIED ?                         18300000
           BE  E07RETNF        NO,ERROR TOO                             18310000
* WELL A UNIT AND VOLUME WERE SPECIFIED,SO WE SHALL CONVERT             18320000
*     THE UNIT TO AN IBM TYPE OF NAME AND GENTLY RETURN                 18330000
* (THE USER CODED 'CATLG DSN X UNIT Y VOL Z')                           18340000
          SPACE                                                         18350000
E07FIXU   DS    0H                                                      18360000
           NI DDUNITYP,B'10011111' TURN OFF PERM BIT                    18370000
* SPECIAL CODE FOR MVS                                            76200 18380000
         CLI   VS,C' '  IS IT A VS SYSTEM OF ANY SORT?            76200 18390000
         BE    E07NVS9                                             DASD 18400000
* OK, SPECIAL FOR VS AND 3330-1                                   76200 18410000
         CLC   =C'3330-1',DDUNIT                                  76200 18420000
         BNE   E07NVS9                                            76200 18430000
         LA    R1,MVS3330                                         76200 18440000
         B     E07GOTU                                            76200 18450000
         SPACE 2                                                  76200 18460000
E07NVS9  DS    0H                                                 76200 18470000
          L   R1,HEXUNITS                                               18480000
          LM  R14,R15,HEXUNITS+4                                        18490000
E07FINDU   CLC DDUNITYP,4(R1)                                           18500000
           BE  E07GOTU                                                  18510000
           BXLE R1,R14,E07FINDU                                         18520000
           CALL  UJEDEVNM  WELL HOW ABOUT THE DEVICE NAME TABLE    DASD 18530000
           LTR   R15,R15                                           DASD 18540000
           BZ    E07GOTU+6  GREAT                                  DASD 18550000
           JOLERR 403,'INVALID UNIT FOUND IN KEEP'                      18560000
           B   E07RETNF                                                 18570000
E07GOTU    MVC SCTUTYPE,0(R1)                                           18580000
* SET UP NUMBER NUMBER OF VOLUMES IN JFCB,AND VOLUMES                   18590000
           MVC JFCBVOLS,DDVOLUME                                        18600000
           MVI JFCBNVOL,1                                               18610000
           CLI DDVOLUME+06,C' '                                         18620000
           BE E07RETN0                                                  18630000
           MVI JFCBNVOL,2                                               18640000
           CLI DDVOLUME+12,C' '                                         18650000
           BE E07RETN0                                                  18660000
           MVI JFCBNVOL,3                                               18670000
           CLI DDVOLUME+18,C' '                                         18680000
           BE E07RETN0                                                  18690000
           MVI JFCBNVOL,4                                               18700000
           CLI DDVOLUME+24,C' '                                         18710000
           BE E07RETN0                                                  18720000
           MVI JFCBNVOL,5                                               18730000
           B  E07RETN0                                                  18740000
E07ERR1  DS    0H                                                       18750000
           JOLERR 204,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *18760000
               '''',                                                   *18770000
               ' NOT YET CREATED:-KEEP IGNORED'                         18780000
E07RETNF DS    0H                                                       18790000
           JOLRETN RC=16                                                18800000
           SPACE 3                                                      18810000
E07INPDQ DS    0H                                                       18820000
* NOW JUST BECAUSE THE NAME APPEARS IN THE PDQ DOESN'T MEAN FOR         18830000
*    1 SECOND THAT IT HASN'T :-                                         18840000
*          1.  BEEN SCRATCHED                                           18850000
*          2.  BEEN ALREADY KEPT                                        18860000
           LH  R1,PDQDSNNO     1ST,2ND OR 3RD NAME IN PDQ ?             18870000
          CLI VS,C'2'    IS IT AN MVS SYSTEM?                           18880000
        BNE  E07NMV1S  NO                                          DASD 18890000
* OK, MVS HAS DIFFERENT TYPE OF PASSED DATA SET Q                       18900000
         MH  R1,=AL2(PDILEN)                                            18910000
          LA R14,PDITERM1(R1)                                           18920000
        B   E07NMVS1                                                    18930000
E07NMV1S   MH  R1,=AL2(PDQBLKLN)                                   DASD 18940000
           LA  R14,PDQTERM(R1)                                          18950000
E07NMVS1 DS    0H                                                       18960000
           TM  0(R14),X'C0'    OLD,DELETE ?                             18970000
           B   *+8             ****************                         18980000
           BO  E07DELET                                                 18990000
           SPACE 3                                                      19000000
*** LAST BYTE OF JFCB TTR =0 IN SIOT                                    19010000
           GETJOBQ JFCBDECB,SCTPJFCB  GET THE JFCB                      19020000
           CLI JFCBVOLS,X'FF'  UNOPENED SCRATCH VOLUME ?                19030000
           BNE E07NOTFF        GO WRITE BACK JFCB,SIOT                  19040000
           JOLERR 205,'DSID ''',DDDSID,''' DSNAME ''',#DSNAME,         *19050000
               ''' NOT KEPT:UNOPENED SCRATCH VOLUME'                    19060000
           B   E07RETNF                                                 19070000
E07NOTFF  DS    0H                                                      19080000
           NI JFCBIND2,B'01111111' TELL OS AN OLD DATA SET              19090000
           OI JFCBIND2,B'01000000'                                      19100000
           PUTJOBQ JFCBDECB                                             19110000
           MVC CALLAREA,SIOT                                            19120000
           MVI CALLAREA+3,0                                             19130000
           GETJOBQ SIOTDECB,CALLAREA                                    19140000
*                                                           FIX-X 76200 19150000
* THE NEXT FEW LINES ARE NEW IN 3.1 AND ARE CODED IN        FIX-X 76200 19160000
*  THE HOPE THAT WE CAN HAVE THE OPERATING SYSTEM UNLOAD    FIX-X 76200 19170000
*  THE VOLUME FOR US AT STEP TERM.                          FIX-X 76200 19180000
* IN ADDITION, THE DSNAME SHOULD BE TAKEN OFF THE PASSED    FIX-X 76200 19190000
*  DATA SET QUEUE. CURRENTLY, AT JOB TERMINATION, A NUMBER  FIX-X 76200 19200000
*  OF UNNECESSARY MESSAGES ARE DISPLAYED INDICATING THAT    FIX-X 76200 19210000
*  DATA SETS HAVE BEEN KEPT. THESE SHOULD NO LONGER OCCUR.  FIX-X 76200 19220000
*                                                           FIX-X 76200 19230000
*                                                           FIX-X 76200 19240000
         CLI   DDDISP+1,C'L'  LAST USE OF DATA SET ?        FIX-X 76200 19250000
*                             IF WE CAN LET OS UNLOAD ?     FIX-X 76200 19260000
         BNE   E07NLAST       NOT LAST USE                  FIX-X 76200 19270000
* MARK SIOT AND LET IT THINK WE HAVE FINISHED WITH          FIX-X 76200 19280000
*  THE DATASET (WHICH WE HAVE, OF COURSE).                  FIX-X 76200 19290000
         NI    SCTSDISP,X'FF'-SIOTRETN-S3400DSP-PRIVATE     FIX-X 76200 19300000
         OI    SCTSDISP,8     TURN KEEP ON                  FIX-X 76200 19310000
         OI    SCTSBYT2,SCTRECVD MARK RECIEVED              FIX-X 76200 19320000
         B     E07MAKOL       MAKE IT OLD, RE-WRITE SIOT    FIX-X 76200 19330000
E07NLAST DS    0H                                           FIX-X 76200 19340000
         OI  SCTSDISP,B'00001000'   SIOT = KEEP                         19350000
E07MAKOL OI    SCTSBYT4,1     MARK OLD                      FIX-X 76200 19360000
           PUTJOBQ SIOTDECB                                             19370000
           SPACE 3                                                      19380000
           MVC DDVOLUME,JFCBVOLS                                        19390000
           BAL R14,E00FXVOL    SET UP VOLUME(S) IN #VOL           74365 19400000
* NOW TO MARK THE PDQ                                                   19410000
* TEST IF MVS, DIFFERENT...                                             19420000
         CLI  VS,C'2'   MVS?                                            19430000
         BNE E07NMVS2  NOPE ->                                          19440000
* MVS SIOT CONTAINS THE UCB POINTER, MVT THE PDG DOES                   19450000
          LH R14,SCTUTYPE                                               19460000
          B    E07TUNIT                                                 19470000
E07NMVS2  DS    0H                                                      19480000
           MVC CALLAREA,PDQABLK                                         19490000
           MVI CALLAREA+3,0                                             19500000
           GETJOBQ PDQDECB,CALLAREA                                     19510000
           LH R1,PDQDSNNO                                               19520000
           MH R1,=AL2(PDQBLKLN)                                         19530000
           L   R14,PDQUCBS(R1) GET UCB POINTER FOR DEVICE TYPE    74365 19540000
           MVC SCTUTYPE,16(R14) MOVE IN UCB DEVICE TYPE                 19550000
E07TUNIT DS    0H                                                       19560000
*                                                                       19570000
* THIS FIXES A PROBLEM WHEN A TAPE IS WRITTEN ON A DUAL     FIX-X 76200 19580000
*  DENSITY DRIVE, AND A CATALOGUE IS PERFORMED              FIX-X 76200 19590000
* WE SHALL (AS OS DOES), MAKE THE UNIT IN THE CATALOGUE ONE FIX-X 76200 19600000
*  WHICH WILL ALLOW THE TAPE TO BE MOUNTED ON A NON-DUAL    FIX-X 76200 19610000
*  DENSITY DRIVE IF THE TAPE WAS WRITTEN IF HIGH DENSITY    FIX-X 76200 19620000
*  MODE.                                                    FIX-X 76200 19630000
         CLI   SCTUTYPE+2,UCB3TAPE TAPE DEVICE ?            FIX-X 76200 19640000
         BNE   E07DA          NO->                          FIX-X 76200 19650000
* TAPE DEVICE HERE.                                         FIX-X 76200 19660000
         TM    SCTUTYPE+1,UCBDUDN1+UCBDUDN2 DUAL DENSITY?   FIX-X 76200 19670000
         BZ    E07UOK         UNIT IS OK, LEAVE IT.         FIX-X 76200 19680000
* THE UCB THAT THE DATA SET IS ON IS A DUAL DENSITY UCB,    FIX-X 76200 19690000
*  BUT NOW WE MUST CHECK THE DENSITY OF THE DATA SET.       FIX-X 76200 19700000
*                                                                       19710000
*  FOR 800 BPI, WE WANT TO SET UP UNIT AS 30,00,80,XX                   19720000
*  FOR 1600 BPI, WE WANT TO SET UP UNIT AS 34,00,80,XX                  19730000
*  FOR 6250 BPI, WE WANT TO SET UP UNIT AS 32,00,80,XX                  19740000
         CLI   JFCDEN,JFC800  IS IT 800 BPI ?               CVC   81220 19750000
         BNE   E07T1600       TEST IF 1600 BPI.             CVC   81220 19760000
         MVC   SCTUTYPE(2),=X'3000'   SET 800 BPI NOW       CVC   81220 19770000
         B     E07UOK                                       CVC   81220 19780000
         SPACE 2                                                        19790000
E07T1600 CLI   JFCDEN,JFC1600 IS IT 1600 BPI ?              CVC   81220 19800000
         BNE   E07T6250       TEST IF 6250 BPI.             CVC   81220 19810000
         MVC   SCTUTYPE(3),=X'3400'   SET 1600 BPI NOW      CVC   81220 19820000
         B     E07UOK                                       CVC   81220 19830000
         SPACE 2                                                        19840000
E07T6250 CLI   JFCDEN,JFC6250 IS IT 6250 BPI ?              CVC   81220 19850000
         BNE   E07UOK         LEAVE IT, DON'T KNOW WHAT IT ISVC   81220 19860000
         MVC   SCTUTYPE(3),=X'3200'   SET 6250 BPI NOW      CVC   81220 19870000
         B     E07UOK                                       CVC   81220 19880000
         SPACE 2                                                        19890000
E07DA    NI    SCTUTYPE+1,X'FF'-UCBRR TURN OFF 'SHARE'      FIX-X 76200 19900000
         SPACE 2                                                        19910000
E07UOK  CLI  VS,C'2'  MVS AGAIN?                                        19920000
         BNE   E07NMVS3                                                 19930000
         LH    R1,PDQDSNNO                                              19940000
         MH    R1,=AL2(PDILEN)                                          19950000
         LA    R14,PDITERM1(R1)                                         19960000
         B     E07MARK9                                                 19970000
E07NMVS3 DS    0H                                                       19980000
           LA R14,PDQTERM(R1)                                           19990000
E07MARK9 DS    0H                                                       20000000
         NI    0(R14),X'0F'     TURN OFF TOP 4 BITS                     20010000
         CLI   DDDISP+1,C'L'   LAST USE,IE OLD,KEEP ?                   20020000
         BNE   E07PASS                                                  20030000
         OI    0(R14),B'01000000' OLD,KEEP                              20040000
         NI    0(R14),B'11000000'  INDICATE RECIEVED        FIX-X 76200 20050000
         B     E07MARKD                                                 20060000
E07PASS  OI    0(R14),B'11100000' OLD,PASS                              20070000
E07MARKD DS    0H                                                       20080000
         CLI   VS,C'2'    MVS AGAIN?????                                20090000
         BNE   E07NMVS4                                                 20100000
         SH    R14,=H'44'         BACKUP TO DSNAME              DASD    20110000
         MVI   0(R14),C' '        WIPE OUT THE NAME IN PDQ      DASD    20120000
         PUTJOBQ PDQDECB2                                               20130000
         B    E07RETN0                                                  20140000
E07NMVS4 DS    0H                                                       20150000
         PUTJOBQ PDQDECB                                                20160000
         SPACE 3                                                        20170000
E07RETN0  DS    0H                                                      20180000
           CLI ICOMMAND,C'K'   IS THIS A KEEP INSTRUCTION?        74365 20190000
           BNE E07RETNO W      NO,SO NO MESSAGE,JUST RETURN       74365 20200000
           JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *20210000
               ''' KEPT ON VOL(S) ',#VOL                          74365 20220000
E07RETNO  TM    JFCDSRG1,JFCORGIS  IS THIS A ISAM FILE             DASD 20230000
          BNO   E07RTN        NOPE LETS LEAVE                      DASD 20240000
           CALL UJEISPDQ   GO SAVE THE DUPLICATE PDQ DSNS          DASD 20250000
E07RTN     JOLRETN RC=0                                            DASD 20260000
**** THESE NEXT FEW INSTRUCTIONS NEVER GET EXECUTED ********            20270002
E07TRETN   EQU *                                                        20280002
* TEST NOW IF'RETAIN' AND IF NOT,STEP ON TO UNLOAD THE VOLUME.          20290002
           CLI DDDISP+1,C'P'                                            20300002
           BE  E07MARK                                                  20310002
*          CLI DDRETAIN,C' '                                            20320002
           B  E07MARK   ********************************                20330002
           BE  E07LETOS                                                 20340002
E07MARK    DC H'0'             ABEND IF IT GETS HERE                    20350002
           B   E07MARK                                                  20360002
E07LETOS DS    0H                                                       20370000
           JOLRETN RC=4                                                 20380000
           SPACE 3                                                      20390000
E07DELET DS    0H                                                       20400000
           JOLERR 202,'DSID ''',DDDSID,''' DSNAME ',                   *20410000
               ''' PREVIOUSLY DELETED :- KEEP IGNORED'                  20420000
           JOLRETN RC=16                                                20430000
         AGO   .NX8280                                                  20440000
.X8280   ANOP                                                           20450000
         SLR   R2,R2                 COUNT THE FCTS FOUND               20460000
         L     R4,ATCB              ADDRESS MY TCB                      20470000
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB                     20480000
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT                 20490000
         BZ    E07NOFCT              EXIT IF NONE ?!! & SSSSSSSSS       20500000
         SPACE                                                          20510000
*   FOUND THE FCT CHAIN. NOW FIND A DATASET ENTRY                       20520000
         SPACE                                                          20530000
         USING FCT,R4                                                   20540000
E07NXFCT DS    0H                                                       20550000
         CLC   FCTFLN,DSN            Q... IS THIS IT?                   20560000
         BNE   E07NOTIT              A... NO                            20570000
         BAL   R2,E07FFCT            GO AND FIX THE BITS                20580000
E07NOTIT DS    0H                                                       20590000
         ICM   R4,7,FCTNFCTA         NEXT FCT                           20600000
         BNZ   E07NXFCT              BR IF THERE IS ONE                 20610000
         B     E07NOFCT                                                 20620000
E07FFCT  DS    0H    FOUND AN FCT TO "FIX"                              20630000
         $TELL (R4)                                                     20640000
         MODESET  KEY=ZERO                                              20650000
         NI    FCTSTS1,X'FF'-FCTS1DLT  IF KEEP, DO NOT DELETE           20660000
         NI    FCTFDST1,X'FF'-FCTFSNFD DITTO                            20670000
         OI    FCTFLG2,FCTF2KEP      TURN KEEP ON                       20680000
         SPACE 2                                                        20690000
*  WELL, THAT SHOULD BE ALL                                             20700000
         SPACE                                                          20710000
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY              20720000
         BR    R2             GO AND SEE IF THERE AREA ANY MORE         20730000
E07NOFCT DS    0H                                                       20740000
         LTR   R2,R2                                                    20750000
         BZ    E07NOKPT                                                 20760000
         CLI   ICOMMAND,C'K' Q... IS THIS A GENUINE KEEP?               20770000
         BNE   E07RETN0      A... NO, PROBABLY A CATLG: SKIP MSG        20780000
         JOLERR 003,'DSID ',DDDSID,' ',#DSN,' MARKED "KEEP"'            20790000
E07RETN0 DS    0H                                                       20800000
         B     RETN0                                                    20810000
E07NOKPT DS    0H   NO ENTRIES MARKED KEEP                              20820000
         JOLERR 202,'DSID ',DDDSID,' NOT KEPT, IS NOT ALLOCATED'        20830000
         B     RETN0                                                    20840000
.NX8280  ANOP                                                           20850000
         SPACE 3                                                        20860000
         DC    80S(*)                                                   20870000
         TITLE 'UJE08SCR:SCRATCH DATA SET'                              20880000
         JOLSAVE CSECT=UJE08SCR                                         20890000
* SCRATCH INSTRUCTION IS TO BE EXECUTED.                                20900000
         AIF   (&X8).X8300                                              20910000
*    NOW IF IT IS A DISC,WE ISSUE A SCRATCH.                            20920000
*          IF THE VOLUME IS NOT MOUNTED,WE GO AND FIND THE STEP         20930000
*          WHICH WE WANT TO EXECUTE (IT HAS A DD-CARD WHICH MOUNTS      20940000
*          THE VOLUME).                                                 20950000
           SPACE                                                        20960000
*    IF IT IS A TAPE,AND IT CAN BE FREED NOW (NOT RETAINED)             20970000
*          IT MUST BE GIVEN A DISPOSITION OF DELETE                     20980000
*          THIS MUST BE DONE BY JCL AT THE MOMENT                       20990000
*    IF IT IS RETAINED,THE PDQ IS MARKED DELETE,UNLESS WE HAVE          21000000
*          TIOT ENTRY,IN WHICH CASE IT IS MARKED DELETE,AND OS WILL     21010000
*          PROBABLY REMOVE THE VOLUME.                                  21020000
*    IF IT IS NOT RETAINED,WE MUST STEP DOWN TO THE CORRECT             21030000
*          STEP AND HAVE IT REMOVED FROM THE SYSTEM FOR US.             21040000
           SPACE 3                                                      21050000
* PUT INTO LOGICAL TERMS,THE CODE COES LIKE THIS:-                      21060000
*                                                                       21070000
*          IF INPDQ                                                     21080000
*          THEN DO;                                                     21090000
* ERROR2:      IF ^STILL_IN_PDQ,ERROR AND RETURN; /*ALREADY GONE*/      21100000
*              IF ALLOCATED_TO_THIS_STEP                                21110000
*              THEN DO;                                                 21120000
*                  TURN ON DELETE_BITS IN SIOT;                         21130000
*                  REWRITE SIOT;                                        21140000
*                  RETURN;                                              21150000
*              END;                                                     21160000
*              GO TO E08_NOT_IN_THIS_STEP_MAYBE;                        21170000
*          END;                                                         21180000
*  /* NOT IN PDQ */                                                     21190000
*                                                                       21200000
*          IF VOL & UNIT ^=''                                           21210000
*          THEN DO;                                                     21220000
*              SET UP DSNAME,VOL,UNIT;                                  21230000
*              GO TO E08_NOT_IN_THIS_STEP_MAYBE;                        21240000
*          END;                                                         21250000
*          GO TO ERROR2;                                                21260000
* NOT_HERE?:                                                            21270000
*                                                                       21280000
*                                                                       21290000
*          IF IS MAG TAPE THEN GO TO E08MAGTP                           21300000
* /* DISC HERE */                                                       21310000
*          SCRATCH;                                                     21320000
*          VOL_NOT_MOUNTED,GO TO LETOS;                                 21330000
*          RETURN;                                                      21340000
* LETOS:   SET UP STEP NAME TO SKIP TO FOR OS STEP                      21350000
*          RETURN(4);                                                   21360000
* E08MAGTP:                                                             21370000
*          MARK DELETE; /* IF OLD,MARK NEW,DELETE*/                     21380000
*          IF VOLUME TO BE RETAINED                                     21390000
*          THEN RETURN;                                                 21400000
*          GO TO LETOS;        /*UNLESS IN THIS STEP*/                  21410000
*                                                                       21420000
*                                                                       21430000
* THE SITUATION THEN BASICALLY MEANS THAT IF A SCRATCH IS ISSUED        21440000
*    FOR A DISC,AND THE DISC/IS NOT MOUNTED,A NEW OS STEP OCCURRS       21450000
*                                                                       21460000
* IF A TAPE IS TO BE SCRATCHED,AND IT CAN BE UNLOADED (IE OTHER         21470000
*    DATA SETS ARE STILL BEING USED ON IT) NO REAL ACTION OCCURRS       21480000
*    BUT IF IT CAN BE UNLOADED A NEW OS STEP IS INITIATED.              21490000
********** UNTIL I CAN FOOL OS ***********                              21500000
           SPACE 3                                                      21510000
* NOW IF THE NAME IS A TEMPORARY DSNAME,WE MUST FIDDLE AROUND UNTIL WE  21520000
*    HAVE THE PART OF THE NAME THAT OS PUT IN FRONT OF OURS,AND PUT     21530000
*    OURS AT THE BACK. THIS THEN GIVES US A REAL DSNAME WHICH SHOULD    21540000
*    BE IN THE PASSED DATA SET QUEUE.                                   21550000
*                                                        JOL30112 76200 21560000
* DELETE GDGALL PROCESSING IS HANDLED BY OS.             JOL30112 76200 21570000
* IF THE CATLG INDICATOR HAS 104,IT MEANS THAT THE       JOL30112 76200 21580000
* COMPILER FOUND GDGALL. ALL WE HAVE TO DO IS            JOL30112 76200 21590000
* RETURN A 4, AND THAT WILL EXECUTE THE SCRATCH STEP     JOL30112 76200 21600000
*                                                        JOL30112 76200 21610000
         CLI   DDCATLGS,104   GDGALL ?                   JOL30112 76200 21620000
         BNE   E08TTEMP       NO,TEST TEMPORARY THEN     JOL30112 76200 21630000
           JOLERR 112,'DSID ',DDDSID,' DSNAME ',#DSN,                  *21640000
               ' IS GDGALL, THE OPERATING SYSTEM WILL DELETE IT'        21650000
         JOLRETN RC=4                                    JOL30112 76200 21660000
E08TTEMP CLI   DDDSNAME,C'&&' TEMPORARY ?                JOL30112 76200 21670000
           BNE E08NTEMP        NO,SO FORGET THIS BIT OF PROCESSING      21680000
*                                                        JOL30116 76200 21690000
* NOW READ THE JFCB OF THE $$INST FILE AND               JOL30116 76200 21700000
* FIND OUT WHAT DSN HAS BEEN GIVEN TO                    JOL30116 76200 21710000
* TEMPORARY DATA SETS                                    JOL30116 76200 21720000
*                                                        JOL30116 76200 21730000
         RDJFCB TEMPDCB       GET DSNAME                 JOL30116 76200 21740000
* NOW FIND LAST DOT,AND SHIFT IN OUR TEMP NAME (&&WORK000I FOR EXAMPLE) 21750000
         LA    R15,JFCBDSNM+43 GET END OF DSNAME         JOL30116 76200 21760000
E08FSTOP   CLI 0(R15),C'.'     GOT THE LAST '.' ?                       21770000
           BE  E08GOTST        YES                                      21780000
           BCT R15,E08FSTOP    FIND STOP LOOP                           21790000
           JOLERR 508,'INTERNAL ERROR:NO ''.'' IN TEMP DSN'             21800000
           SPACE                                                        21810000
E08GOTST CLI   DDDSNAME+1,C'&&' DOUBLE & CODED ?         JOL30116 76200 21820000
         BNE   E08ONEA                                   JOL30116 76200 21830000
         MVC   DDDSNAME+1(8),DDDSNAME+2 DROP 2ND         JOL30116 76200 21840000
E08ONEA  MVC   1(8,R15),DDDSNAME+1 SET UP REAL DSNAME    JOL30116 76200 21850000
         MVC   DDDSNAME,JFCBDSNM   SHIFT BACK            JOL30116 76200 21860000
E08NTEMP DS    0H                                                       21870000
           CALL UJE81PDQ       SEE IF NAME IN PDQ                       21880000
*                              NOTE,IT ALSO READS IN SIOT AND JFCB      21890000
           LTR R15,R15                                                  21900000
           BNZ E08NOTHR        NOT IN PDQ                               21910000
* NOW IT WAS IN THE PDQ HERE.                                           21920000
* A QUICK CHECK TO SEE IF IT HAS ALREADY BEEN DELETED                   21930000
*************** FAILURE HERE,JUST ATTEMPT TO SCRATCH                    21940000
           LH  R1,PDQDSNNO     1ST,2ND,3RD DSNAME IN PDQ ?              21950000
             CLI  VS,C'2'   MVS???                                      21960000
           BNE E08NMVS1                                                 21970000
            MH  R1,=AL2(PDILEN)                                         21980000
            LA  R14,PDITERM1(R1)                                        21990000
            B  E08TDEL                                                  22000000
E08NMVS1 DS    0H                                                       22010000
           MH R1,=AL2(PDQBLKLN)                                         22020000
           LA  R14,PDQTERM(R1)                                          22030000
E08TDEL   DS   0H                                                       22040000
           TM  0(R14),X'C0'    HAS IT BEEN (OLD,DELETED) ?              22050000
           B  E08TSTP                                                   22060000
           BO E08ERR2          ALREADY GONE MY FRIEND                   22070000
* OK,IT IS STILL PASSED SUCCESSFULLY APPARENTLY                         22080000
*    HOWEVER,NOW WE MUST SEE IF THE DATA SET IS BEING USED BY           22090000
*    THIS STEP,IF SO,MERELY MARK THE SIOT DELETE AND THAT'S THAT        22100000
E08TSTP  DS    0H                                                       22110000
          CLI   VS,C'2'                                                 22120000
         BNE   E08MARKD                                                 22130000
           LA  R14,PDQCSTEP(R1) CURRENT STEP NUMBER ADDRESS IN PDQ      22140000
           CLC 0(1,R14),JCTSNUMB CURRENT STEPS EQUAL                    22150000
           BNE E08RJFCB        READ THE JFCB                            22160000
* NOW MARK THE SIOT TO DELETE AND OUTPUT A MESSAGE SAYING               22170000
*    WILL BE SCRATCHED.                                                 22180000
E08MARKD DS    0H                                                       22190000
           MVC CALLAREA,SIOT                                            22200000
           MVI CALLAREA+3,0                                             22210000
           GETJOBQ SIOTDECB,CALLAREA                                    22220000
           OI  SCTSDISP,B'00000100' TURN ON DELETE BIT                  22230000
           OI  SIOTALTD,B'00000100' TURN ON DELETE BIT IN CONDITION     22240000
*                                   DISPOSITION PROCESSING              22250000
           PUTJOBQ SIOTDECB                                             22260000
E08RJFCB   DS 0H                                                        22270000
E08TEST  DS    0H                                                       22280000
           GETJOBQ JFCBDECB,SCTPJFCB GET CORRESPONDING JFCB             22290000
           LH  R1,PDQDSNNO     DATA SET NUMBER IN PDQ                   22300000
           MH  R1,=AL2(PDQBLKLN)                                        22310000
           L   R14,PDQUCBS(R1) GET UCB ADDRESS FOR DEVICE TYPE    74365 22320000
            CLI  VS,C'2'   MVS AGAIN??                                  22330000
          BNE   E08NMVS2                                                22340000
* THE SIOT IN MVS CONTAINS THE UCB POINTER, NOT THE PDQ                 22350000
          LH   R14,SCTUTYPE                                             22360000
       B  E08NOSTP                                                      22370000
E08NMVS2 DS    0H                                                       22380000
           MVC SCTUTYPE,16(R14) MOVE IN UCB UNIT TYPE                   22390000
           B  E08NOSTP         DO THE SCRATCH                           22400000
           SPACE 3                                                      22410000
E08NOTHR DS    0H              NOT IN PDQ                               22420000
* THE DATA SET WAS NOT IN THE PASS QUEUE,AND THEREFORE IT SHOULD        22430000
*    (MUST?) HAVE A VOL & UNIT,AND WILL HAVE A DDCARD SOMEWHERE         22440000
*    FOR IT TO BE MOUNTED IF ITS NOT NOW.                               22450000
           CLI DDVOLUME,C' '   VOL SPECIFIED ?                          22460000
           BE  E08NOPDQ        NOPE                                     22470000
           CLI DDUNITYP,C' '   UNIT GIVEN ?                             22480000
           BE  E08NOPDQ        NOPE                                     22490000
* OK,NOW SET UP THE JFCBDSN,AND THE VOLUME & UNIT AND                   22500000
*    GO TO THE SCRATCH ROUTINES.                                        22510000
           MVC JFCBDSNM,DDDSNAME                                        22520000
           MVC JFCBVOLS,DDVOLUME                                        22530000
           NI DDUNITYP,B'10011111' DROP PERM BIT                        22540000
           MVI JFCBNVOL,1                                               22550000
           CLI DDVOLUME+06,C' '                                         22560000
           BE  E08FIXUN                                                 22570000
           MVI JFCBNVOL,2                                               22580000
           CLI DDVOLUME+12,C' '                                         22590000
           BE  E08FIXUN                                                 22600000
           MVI JFCBNVOL,3                                               22610000
           CLI DDVOLUME+18,C' '                                         22620000
           BE  E08FIXUN                                                 22630000
           MVI JFCBNVOL,4                                               22640000
           CLI DDVOLUME+24,C' '                                         22650000
           BE  E08FIXUN                                                 22660000
           MVI JFCBNVOL,5                                               22670000
           BE  E08FIXUN                                                 22680000
E08FIXUN DS    0H                                                       22690000
         NI DDUNITYP,B'10011111'                                        22700000
* SPECIAL CODE FOR MVS,VS1                                        76200 22710000
         CLI   VS,C' ' IS IT A VS SYSTEM OF SOME SORT?            76200 22720000
         BE    E08NVS9                                             DASD 22730000
* OK SPECIAL FOR VS AND 3330-1                                    76200 22740000
         CLC   =C'3330-1',DDUNIT                                  76200 22750000
         BNE   E08NVS9                                            76200 22760000
         LA    R7,MVS3330                                         76200 22770000
         B     E08GOTUN                                           76200 22780000
E08NVS9  DS    0H                                                 76200 22790000
           L   R1,=A(HEXUNITS)                                          22800000
           LM  R7,R9,0(R1)                                              22810000
E08FHEXU   CLC DDUNITYP,4(R7)  UNIT WE WANT ?                           22820000
           BE  E08GOTUN                                                 22830000
           BXLE R7,R8,E08FHEXU                                          22840000
           CALL UJEDEVNM   HOW ABOUT THE DEVICE NAME TABLE         DASD 22850000
           LTR  R15,R15                                            DASD 22860000
           BZ   E08NOSTP   SUPER   SAVED AGAIN                     DASD 22870000
           JOLERR 402,'SCRATCH REQUIRES UNIT ''',DDUNIT,''' UNKNOWN TO *22880000
               JOL'                                                     22890000
           B   E08RETNF                                                 22900000
           SPACE 3                                                      22910000
E08GOTUN   MVC SCTUTYPE,0(R7)  SHIFT IN IBM UNIT TYPE                   22920000
           B   E08NOSTP        DO THE SCRATCH ETC                       22930000
E08ERR2  DS    0H              NOT IN PDQ AND NO VOL/UNIT SPECIFIED     22940000
           JOLERR 209,'DSID ''',DDDSID,''' DSNAME ''',#DSN,''' ALREADY *22950000
               SCRATCHED'                                               22960000
           JOLRETN RC=16                                                22970000
           SPACE 3                                                      22980000
E08NOSTP DS    0H              NOT USED IN THIS STEP                    22990000
* NOW THIS SITUATION IS JUST A FRACTION MORE DIFFICULT THAN THE         23000000
*    OTHERS.                                                            23010000
* IF THE DATA SET IS ON DISK,ISSUE A SCRATCH                            23020000
           CLI SCTUTYPE+2,X'80' MAG TAPE ?                              23030000
           BE  E08MAGTP                                                 23040000
* DISK,LETS ISSUE THE SCRATCH AFTER SETTING THINGS UP                   23050000
           CLC JFCBNVOL,=AL1(L'JFCBVOLS/6)                              23060000
           BH  E08LETOS        HELP,TOO MANY VOLUMES,LET                23070000
*                              OS DO ALL THE SCRATCHING IT LIKES        23080000
*                              THANKS                                   23090000
           XC E08NOVOL(E08SCREN-E08NOVOL),E08NOVOL                      23100000
           MVC E08NOVOL+1(1),JFCBNVOL                                   23110000
           MVI E08NOVOL,0                                               23120000
           MVC E08UNIT+(0*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE       23130000
           MVC E08UNIT+(1*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE       23140000
           MVC E08UNIT+(2*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE       23150000
           MVC E08UNIT+(3*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE       23160000
           MVC E08UNIT+(4*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE       23170000
           MVC  E08VOL+(0*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+0     23180000
           MVC  E08VOL+(1*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+6     23190000
           MVC  E08VOL+(2*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+12    23200000
           MVC  E08VOL+(3*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+18    23210000
           MVC  E08VOL+(4*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+24    23220000
           CLEAR DDVOLUME                                         74365 23230000
           MVC DDVOLUME(L'JFCBVOLS),JFCBVOLS                      74365 23240000
           BAL R14,E00FXVOL    SET UP VOLUME LIST IN #VOL         74365 23250000
           SR  R0,R0                                                    23260000
           MVI   E08SCRA+2,X'40'  RESET SCRATCH (LAST ALWAYS?)          23270000
           IFNULL DDLABTYP,E08NALWA                                     23280000
* ALWAYS                                                                23290000
           MVI   E08SCRA+2,X'50'  OVER-RIDE PURGE DATE                  23300000
E08NALWA DS    0H                                                       23310000
           SCRATCH E08SCRA                                              23320000
           LTR R15,R15                                                  23330000
           BNZ E08WHAT                                                  23340000
           JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *23350000
               ''' SCRATCHED FROM ',#VOL                          74365 23360000
E08MAGTP DS    0H                                                       23370000
           CLI ISINPDQ,C' '    WELL,IS IT?                              23380000
           BNE E08INPDQ                                                 23390000
           JOLRETN                                                      23400000
E08INPDQ DS    0H                                                       23410000
* THE NAME IN THE PDQ MUST BE SET TO OLD,DELETED SO THAT OS             23420000
*   WON'T BOTHER DELETING  THE THING AGAIN AT JOB TERMINATION           23430000
         CLI  VS,C'2'   VS2                                             23440000
         BE    E08MVS5                                                  23450000
           MVC CALLAREA,PDQABLK                                         23460000
           MVI CALLAREA+3,0                                             23470000
           GETJOBQ PDQDECB,CALLAREA                                     23480000
E08MVS5  DS    0H                                                       23490000
           LH R1,PDQDSNNO                                               23500000
            CLI  VS,C'2'                                                23510000
           BNE  E08NMVS4                                                23520000
           MH   R1,=AL2(PDILEN)                                         23530000
           LA   R14,PDITERM1(R1)                                        23540000
            MVI   0(R14),0           OLD,DELETE FLAGS              DASD 23550000
            SH    R14,=H'44'         BACKUP TO DSNAME              DASD 23560000
            MVI   0(R14),C' '        WIPE OUT THE NAME IN PDQ      DASD 23570000
            PUTJOBQ PDQDECB2  OP PDI BLOCK                              23580000
            JOLRETN  RC=0                                               23590000
E08NMVS4  DS    0H                                                      23600000
           MH R1,=AL2(PDQBLKLN)                                         23610000
           LA R14,PDQTERM(R1)                                           23620000
           OI 0(R14),B'10100000'  OLD,DELETE FLAGS                      23630000
           PUTJOBQ PDQDECB                                              23640000
           JOLRETN                                                      23650000
           SPACE 3                                                      23660000
E08WHAT  DS    0H                                                       23670000
* SCRATCH FAILED                                                        23680000
* WHY ??                                                                23690000
         CH   R15,=H'8'  DID WE BUILD A BAD CAMLIST ENTRY ??       DASD 23700000
         BH   E08BADCM   BETTER TELL SOMEONE ABOUT THIS            DASD 23710000
           SPACE 2                                                      23720000
* IF FAILURE OCCURRED BECAUSE THE VOLUMES WEREN'T MOUNTED,              23730000
*    I KNOW THAT THERE IS A JCL STEP BELOW WHICH WILL MOUNT             23740000
*    THE VOLUMES AND PERFORM THE SCRATCHES,SO LETS GO.                  23750000
           LA  R1,E08SEQ+1+(0*(L'E08UNIT+L'E08VOL+L'E08SEQ))            23760000
           BAL R2,E08ERR                                                23770000
           LA  R1,E08SEQ+1+(1*(L'E08UNIT+L'E08VOL+L'E08SEQ))            23780000
           BAL R2,E08ERR                                                23790000
           LA  R1,E08SEQ+1+(2*(L'E08UNIT+L'E08VOL+L'E08SEQ))            23800000
           BAL R2,E08ERR                                                23810000
           LA  R1,E08SEQ+1+(3*(L'E08UNIT+L'E08VOL+L'E08SEQ))            23820000
           BAL R2,E08ERR                                                23830000
           LA  R1,E08SEQ+1+(4*(L'E08UNIT+L'E08VOL+L'E08SEQ))            23840000
           BAL R2,E08ERR                                                23850000
           B   E08RETNF                                                 23860000
E08ERR   DS    0H                                                       23870000
* CALLED BECAUSE WE HAVE TO ANALYSE THE REASON WHY A SCRATCH FAILED     23880000
           CLI 0(R1),0         IS THIS ONE A ZERO ?                     23890000
           BE  0(R2)           YES,SO JUST RETURN TO CALLER.            23900000
           CLI 0(R1),5         UNABLE TO MOUNT COS NO DEVICE ?          23910000
           BE  E08NPACK        LET OS DO SCRATCH (STEP DOWN TO RIGHDASD 23920000
*                              STEP)                                    23930000
           CLI 0(R1),6         DIDN'T OPERATOR WANT TO MOUNT VOL ?      23940000
           BE  E08NPACK                                            DASD 23950000
           CLI 0(R1),1         NOT IN VTOC ?                            23960000
         BNE   E08TRET2                                     FIX-X 76200 23970000
           JOLERR 204,'DSID ''',DDDSID,''' DSNAME ''',                 *23980000
               #DSN,''' NOT FOUND IN VOLUME :-SCRATCH IGNORED'          23990000
           BR  R2                                                       24000000
E08TRET2 CLI   0(R1),2                                      FIX-X 76200 24010000
         BNE   E08TRET3                                     FIX-X 76200 24020000
         JOLERR 410,'DSID ''',DDDSID,''' DSNAME ''',#DSN,   FIX-X 76200*24030000
               ''' IS A VSAM DATA SPACE OR ',               FIX-X 76200*24040000
               'INCORRECT PASSWORD SUPPLIED'                FIX-X 76200 24050000
         BR    R2                                           FIX-X 76200 24060000
E08TRET3   CLI 0(R1),3         RETENTION PERIOD ?                       24070000
           BNE E08TRET4                                                 24080000
           JOLERR 205,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *24090000
               ''' NOT SCRATCHED,CONTAINS RETENTION DATE'               24100000
         BR    R2                                           FIX-X 76200 24110000
E08TRET4   CLI 0(R1),4         I/O ERROR ?                              24120000
         BNE   E08TRET7                                     FIX-X 76200 24130000
           JOLERR 406,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *24140000
               ''' NOT SCRATCHED,I/O ERROR ON VTOC'                     24150000
         BR    R2                                           FIX-X 76200 24160000
E08TRET7 CLI   0(R1),7                                      FIX-X 76200 24170000
         BNE   E08ERRXY                                     FIX-X 76200 24180000
         JOLERR 411,'DSID ''',DDDSID,''' DSNAME ''',#DSN,   FIX-X 76200*24190000
               ''' IS BEING USED BY SOMEONE ELSE:-'         FIX-X 76200*24200000
               'TRY AGAIN LATER'                            FIX-X 76200 24210000
         BR    R2                                           FIX-X 76200 24220000
E08ERRXY SR    R2,R2                                        FIX-X 76200 24230000
         IC    R2,0(R1)                                     FIX-X 76200 24240000
         JOLERR 507,'SCRATCH RETURNED INVALID CODE;SEE REG 2'   X 76200 24250000
E08BADCM DS    0H                                                  DASD 24260000
         JOLERR 213,'DSID ''',DDDSID,'''DSNAME ''',#DSN,               *24270000
               ''' ON VOLS ',#VOL,' NOT SCRATCHED',                    *24280000
               'CATALOGUE INVALID DEVICE UNIT=',                       *24290000
               DDUNIT                                              DASD 24300000
          B   E08LETOS                                             DASD 24310000
E08NPACK  DS    0H                                                 DASD 24320000
         JOLERR 214,'DSID ''',DDDSID,'''DSNAME ''',#DSN,               *24330000
               ''' ON VOLS ',#VOL,' NOT SCRATCHED',                    *24340000
               'PACK NOT MOUNTED, UNIT=',                              *24350000
               DDUNIT                                              DASD 24360000
           SPACE 3                                                      24370000
E08LETOS  DS    0H                                                      24380000
* IT HAS BEEN DECIDED THAT,FOR NO DOUBT AN EXTREMELY GOOD REASON,       24390000
*    WE MUST STEP DOWN TO THE STEP THAT SHOULD BE THERE TO              24400000
*    HAVE THE VOLUME MOUNTED SO THE SCRATCH MAY BE PERFORMED.           24410000
           JOLRETN RC=4                                                 24420000
E08RETNF  DS    0H JOLRETN RC=16                                   DASD 24430000
*******************************************************            DASD 24440000
*    PDQ RECORDS NOT DELETED IF SCRATCH FAILS         *            DASD 24450000
*******************************************************            DASD 24460000
* WHEN A PROGRAMMER SAYS TO DELETE A DATASET BEFORE   *            DASD 24470000
* THE FIRST STEP OF THE JOB,  JOL WILL GENERATE A STEP*            DASD 24480000
* WITH A DDCARD REFERENCE TO THE DATASET TO BE DELETED*            DASD 24490000
* IF THE DATASET IS CATALOGED BUT NOT ON THE PACK THE *            DASD 24500000
* THIS SCRATCH ROUTINE WILL RETURN WITHOUT REMOVING   *            DASD 24510000
* THE PDQ RECORD.     ANY REFERENCE TO THIS DATASET   *            DASD 24520000
* LATER ON WILL ADD NEW PDQ RECORDS BUT WILL POINT    *            DASD 24530000
* TO THE FIRST ENTRY RESULTING IN ABEND=213           *            DASD 24540000
*******************************************************            DASD 24550000
         CLI   ISINPDQ,C' '    IS BAD GUY IN PDQ                   DASD 24560000
         BE    E08NFRPQ        NOPE  BETTER GO NOW                 DASD 24570000
* THE NAME IN THE PDQ MUST BE SET TO OLD,DELETED SO THAT OS        DASD 24580000
*   WON'T BOTHER DELETING  THE THING AGAIN AT JOB TERMINATION      DASD 24590000
           MVC CALLAREA,SIOT                                       DASD 24600000
           MVI CALLAREA+3,0                                        DASD 24610000
           GETJOBQ SIOTDECB,CALLAREA                               DASD 24620000
           OI  SCTSDISP,B'00000100' TURN ON DELETE BIT             DASD 24630000
           OI  SIOTALTD,B'00000100' TURN ON DELETE BIT IN CONDITIONDASD 24640000
*                                   DISPOSITION PROCESSING         DASD 24650000
           PUTJOBQ SIOTDECB                                        DASD 24660000
         CLI   VS,C'2'   VS2                                       DASD 24670000
         BE    E08MVS6                                             DASD 24680000
         MVC   CALLAREA,PDQABLK                                    DASD 24690000
         MVI   CALLAREA+3,0                                        DASD 24700000
         GETJOBQ PDQDECB,CALLAREA                                  DASD 24710000
E08MVS6  DS    0H                                                  DASD 24720000
         LH    R1,PDQDSNNO                                         DASD 24730000
         CLI   VS,C'2'                                             DASD 24740000
         BNE   E08NMVS5                                            DASD 24750000
         MH    R1,=AL2(PDILEN)                                     DASD 24760000
         LA    R14,PDITERM1(R1)                                    DASD 24770000
         MVI   0(R14),0           OLD,DELETE FLAGS                 DASD 24780000
         SH    R14,=H'44'         BACKUP TO DSNAME                 DASD 24790000
         MVI   0(R14),C' '        WIPE OUT THE NAME IN PDQ         DASD 24800000
         PUTJOBQ PDQDECB2  OP PDI BLOCK                            DASD 24810000
         B     E08NFRPQ                                            DASD 24820000
E08NMVS5 DS    0H                                                  DASD 24830000
         MH    R1,=AL2(PDQBLKLN)                                   DASD 24840000
         LA    R14,PDQTERM(R1)                                     DASD 24850000
         MVI   0(R14),B'10100000'  OLD,DELETE FLAGS                DASD 24860000
         PUTJOBQ PDQDECB                                           DASD 24870000
E08NFRPQ JOLRETN RC=16                                             DASD 24880000
****************************************************************   DASD 24890000
* IF DOING A DELETE CHECK THE CATALOGUE TO SEE IF THE DATASET  *   DASD 24900000
* IS CATALOGUED AND IF SO REUTRN TO THE SCRATCH                *   DASD 24910000
*                                                              *   DASD 24920000
* THE FOLLOWING MESSSAGE IS ONLY ISSUED WHEN THE DATASET       *   DASD 24930000
* IS NOT ON THE PDQ                                            *   DASD 24940000
*                                                              *   DASD 24950000
* HERE AT STANDARD OIL A MODIFICATION EXISTS WHERE IF THE      *   DASD 24960000
* SCRATCH FAILED THE UNCATLG WILL STILL RUNS                   *   DASD 24970000
****************************************************************   DASD 24980000
E08NOPDQ NOP   E08PDQMG    TURN THIS ON TO SHUT OFF THIS CODE      DASD 24990000
         CLI   ICOMMAND,C'D'     DELETE STMT ?                     DASD 25000000
         BNE   E08PDQMG          NO---ISSUE THE MESSAGE            DASD 25010000
         CALL  UJELOCAT          CALL LOCATE MODULE                DASD 25020000
         LTR   R15,R15           ARE WE IN LUCK ?                  DASD 25030000
         BNZ   E08PDQMG          NOPE NOT TODAY                    DASD 25040000
         MVC   JFCBDSNM,DSNAME  COPY DATA SET NAME TO JFCB         DASD 25050000
         L     R15,=V(E05VOLS)  POINT TO CAMLST                    DASD 25060000
         USING VOLINFO,R15       GET SOME ADDDRESSILITY            DASD 25070000
         MVC   JFCBNVOL,NOVOLS+1 # VOLUMES                         DASD 25080000
         MVC   SCTUTYPE,CATDEV   UNIT TYPE                         DASD 25090000
         LH    R1,NOVOLS         # VOLUMES AGAIN                   DASD 25100000
         CH    R1,=H'5'          MORE THAN WE CAN HANDLE ?         DASD 25110000
         BNH   *+8               NO                                DASD 25120000
         LA    R1,5              ADJUST # VOLUMES FOR US           DASD 25130000
         LA    R14,JFCBVOLS      MOVE TO HERE                      DASD 25140000
         MVI   JFCBVOLS,C' '                                       DASD 25150000
         MVC   JFCBVOLS+1(L'JFCBVOLS-1),JFCBVOLS   CLEAR JFCB      DASD 25160000
E08LPVOL DS    0H                                                  DASD 25170000
         MVC   0(6,R14),CATVOL   MOVE VOL SER                      DASD 25180000
         LA    R15,12(R15)       POINT TO NEW CAMLST ENTRY         DASD 25190000
         LA    R14,6(R14)        UP TO NEXTBUCKET IN JFCB          DASD 25200000
         BCT   R1,E08LPVOL       GET ALL OF THE VOLUMES            DASD 25210000
         B     E08NOSTP          LETS DO THE SCRATCH AGAIN         DASD 25220000
         DROP  R15                                                 DASD 25230000
E08PDQMG   JOLERR 203,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *25240000
               ''' NOT YET CREATED:-SCRATCH IGNORED'                    25250000
           B  E08RETNF                                                  25260000
           SPACE 3                                                      25270000
E08SCRA    CAMLST SCRATCH,JFCBDSNM,,E08NOVOL                            25280000
E08NOVOL   DS  H                                                        25290000
E08UNIT    DS  CL4                                                      25300000
E08VOL     DS  CL6                                                      25310000
E08SEQ     DS  H                                                        25320000
         DS  ((L'JFCBVOLS/6)*12)C                                       25330000
E08SCREN DS    0H                                                       25340000
         AGO   .NX8300                                                  25350000
.X8300   ANOP                                                           25360000
E08FRST  DS    0H                                                       25370000
         L     R4,ATCB              ADDRESS MY TCB                      25380000
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB                     25390000
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT                 25400000
         BZ    E08NOFCT              EXIT IF NONE ?!! & SSSSSSSSS       25410000
         SPACE                                                          25420000
*   FOUND THE FCT CHAIN. NOW FIND A DATASET ENTRY                       25430000
         SPACE                                                          25440000
         USING FCT,R4                                                   25450000
E08NXFCT DS    0H                                                       25460000
         CLC   FCTFLN,DSN            Q... IS THIS IT?                   25470000
         BNE   E08NOTIT              A... NO                            25480000
         BAL   R2,E08FFCT            GO AND FIX THE BITS                25490000
         MVC   DDDDNAME,FCTACSN      DDNAME TO MY AREA                  25500000
         MVI   DDDISP+1,C'L'         LAST USE                           25510000
         CALL  UJE14FRE              FREE THE FILE                      25520000
         B     E08FRST               GO AND START AGAIN                 25530000
E08NOTIT DS    0H                                                       25540000
         ICM   R4,7,FCTNFCTA         NEXT FCT                           25550000
         BNZ   E08NXFCT              BR IF THERE IS ONE                 25560000
E08NOFCT DS    0H                                                       25570000
         LTR   R2,R2                                                    25580000
         BZ    E08NOKPT                                                 25590000
         JOLERR 003,'DSID ',DDDSID,' ',#DSN,' SCRATCHED'                25600000
E08RETN0 DS    0H                                                       25610000
         B     RETN0                                                    25620000
E08NOKPT DS    0H   NO ENTRIES MARKED                                   25630000
         SPACE 3                                                        25640000
* IT SEEMS WE NEED TO ALLOCATE THE DATASET                              25650000
         SPACE 1                                                        25660000
         TM    DDUNITYP,X'80'  IF IT'S A TAPE, FORGET IT                25670000
         BZ    E08NOSCR                                                 25680000
         SPACE 1                                                        25690000
         MVC   DDDDNAME,=C'JOL00000' HOPE NOBODY ELSE USES THIS         25700000
         OI    E21FLAG,E21CONT       TELL ALLOC NOT TO ABEND US         25710000
         CALL  UJE21ALL              ALLOC THE DATASET                  25720000
         LTR   R15,R15                                                  25730000
         BZ    E08ALLOK             IT WENT WELL                        25740000
         JOLERR 301,'DATASET ',#DSN,' IS NOT SCRATCHED'                 25750000
         B     E08NOSCR                                                 25760000
E08ALLOK DS    0H                                                       25770000
         B     E08FRST              NOW IT'S ALLOCATED, GO BACK         25780000
*                                    AND FIDDLE THE FCT                 25790000
E08NOSCR DS    0H                                                       25800000
         B     RETN0                                                    25810000
         SPACE 3                                                        25820000
E08FFCT  DS    0H    FOUND AN FCT TO "FIX"                              25830000
         $TELL (R4)                                                     25840000
         MODESET  KEY=ZERO                                              25850000
         OI    FCTSTS1,FCTS1DLT            TURN DELETE ON               25860000
         OI    FCTFDST1,X'FF'-FCTFSNFD      "    "    "                 25870000
         NI    FCTFLG2,X'FF'-FCTF2KEP      TURN KEEP OFF                25880000
*        OI    FCTFLG3,FCTF3UCT+FCTF3CTR   UNCAT + CAT REF              25890000
         NI    FCTFLG3,X'FF'-FCTF3CAT      SINCE WE ARE SCRATCHING,     25900000
*                                           DON'T CATALOGUE IT          25910000
         SPACE 2                                                        25920000
*  WELL, THAT SHOULD BE ALL                                             25930000
         SPACE                                                          25940000
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY              25950000
         BR    R2             GO AND SEE IF THERE AREA ANY MORE         25960000
         SPACE 3                                                        25970000
.NX8300  ANOP                                                           25980000
         SPACE 3                                                        25990000
         DC    80S(*)                                                   26000000
         TITLE 'UJE09DEL:DELETE DATA SET'                               26010000
         AIF   (&X8).X8320                                              26020000
JSCBOFFS   EQU 180                                                      26030000
CVT        EQU 16                                                       26040000
JCTTTRA    EQU 261                                                      26050000
.X8320   ANOP                                                           26060000
         JOLSAVE CSECT=UJE09DEL                                         26070000
         CALL  UJE08SCR                                                 26080000
         LTR   R15,R15                                                  26090000
         BZ    E09UNCAT  O.K. GUYS THE SCRATCH WORKED KEEP GOING   DASD 26100000
* STANDARD OIL REQUESTED THIS MOD                                  DASD 26110000
* THEY WANTED THE UNCATLG TO ALWAYS RUN EVEN IF THE SCRATCH FAILED DASD 26120000
         CLI   DDCATLGS,104   GDGALL ?                             DASD 26130000
         BNE   E09UNCAT   LET THE UNCATLG RUN THEN                 DASD 26140000
         JOLRETN RC=(15)                                                26150000
E09UNCAT DS    0H                                                 76200 26160000
         AIF   (&X8).X8321                                              26170002
         CLI   #DSN+2,C'&&'   TEMPORARY DATA SET ?                76200 26180002
         BE    E09RETN0                                           76200 26190002
.X8321   ANOP                                                           26200002
         CLI   DDTYPE,DDREALDS    Q... TEMPORARY DATASET?               26210000
         BL    E09RETN0           A... YES                              26220000
         CALL  UJE06UNC                                           76200 26230000
E09RETN0 B     RETN0                                              76200 26240000
         TITLE 'UJE10TYP:TYPE A MESSAGE'                                26250000
         JOLSAVE CSECT=UJE10TYP                                         26260000
* THIS ROUTINE DOES THE TYPING                                          26270000
           L   R7,=A(#TKN)                                              26280000
           USING #TKN,R7                                                26290000
           JOLERR 301,#TKN                                              26300000
           JOLRETN                                                      26310000
          TITLE 'UJE11DIS:DISPLAY A MESSAGE'                            26320000
           JOLSAVE CSECT=UJE11DIS                                       26330000
           L   R7,=A(#TKN)                                              26340000
           USING #TKN,R7                                                26350000
* DISPLAY HANDLER                                                       26360000
           JOLERR 101,#TKN                                              26370000
           JOLRETN                                                      26380000
          TITLE 'UJE12SIG:SIGNAL AN ERROR MESSAGE'                      26390000
           JOLSAVE CSECT=UJE12SIG                                       26400000
* SIGNAL ERROR ROUTINE                                                  26410000
           L   R7,=A(#TKN)                                              26420000
           USING #TKN,R7                                                26430000
           SR R2,R2                                                     26440000
           NI TKN,X'0F'        DROP 'F' FROM SEVERITY NUMBER            26450000
           IC R2,TKN           AND SAVE SEVERITY NUMBER                 26460000
           GETTKN 3            GET MESSAGE TEXT                         26470000
           CH R2,=H'3'                                                  26480000
           BL  SIGONLY                         ONLY WARNINGS            26490000
           BE  SIGWTOR                         WTOR                     26500000
* HERE A TERMINAL ERROR TO BE RASIED                                    26510000
           JOLERR 407,'TERMINAL ERROR ',#TKN,' SIGNALLED'               26520000
SIG&RSVDRC MVC TASKRETN,=F'&RSVDRC'                                     26530000
           MVI  GOBACK,C'1'                                             26540000
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS     26550000
SIGTERM    JOLERR 406,'JOB TERMINATING'                                 26560000
           JOLRETN RC=&RSVDRC                                           26570000
           SPACE 3                                                      26580000
SIGONLY  DS    0H                                                       26590000
           CH R2,=H'2'                                                  26600000
           BL SIGERR1                                                   26610000
         JOLERR 202,'SEVERE ERROR ',#TKN,'SIGNALLED'        FIX-X 76200 26620000
           B  SIGRETN                                                   26630000
SIGERR1  JOLERR 101,'MINOR ERROR ',#TKN,' SIGNALLED'        FIX-X 76200 26640000
SIGRETN    JOLRETN                                                      26650000
           SPACE 3                                                      26660000
SIGWTOR  DS    0H                                                       26670000
      FIX 'SEE CHC CODING ON X8 SCHD'                                   26680002
           JOLERR 403,'MAJOR ERROR ',#TKN,' SIGNALLED'                  26690000
SIGRETRY   CLEAR SIGREPLY                                               26700000
           XC  SIGECB,SIGECB                                            26710000
ERE1204  DS    0H                                                       26720000
      WTOR 'JOLE12-04 REPLY GO OR STOP',SIGREPLY,4,SIGECB,DESC=(2)      26730000
           WAIT ECB=SIGECB                                              26740000
           CLC =C'GO  ',SIGREPLY                                        26750000
           BE  SIGCONT                                                  26760000
           CLC =C'STOP',SIGREPLY                                        26770000
           B  SIGTERM                                                   26780000
           B   SIGRETRY                                                 26790000
           SPACE 3                                                      26800000
SIGECB     DS  F                                                        26810000
SIGREPLY   DS CL4                                                       26820000
           SPACE 3                                                      26830000
SIGCONT  DS    0H                                                       26840000
         JOLERR 405,'JOB CONTINUING'                                    26850000
         B   SIGRETN                                                    26860000
         TITLE 'UJE13STP:STOP HANDLER'                                  26870000
         JOLSAVE CSECT=UJE13STP                                         26880000
* STOP EXECUTER                                                         26890000
         L     R7,=A(#TKN)                                              26900000
         USING #TKN,R7                                                  26910000
         JOLERR 401,'STOP ''',#TKN,''' EXECUTED'                        26920000
STPRETN  MVI   GOBACK,C'1'                                              26930000
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS     26940000
         MVC   TASKRETN,=F'&RSVDRC'                                     26950000
         JOLRETN RC=&RSVDRC                                             26960000
         TITLE 'UJE14FRE:FREE (MARK NOT IN USE) DATASETS'               26970000
         JOLSAVE CSECT=UJE14FRE                                         26980000
         AIF   (NOT &X8).X8E14N                                         26990002
         CLI   DDTYPE,DDPUNCH   Q... SYSIN, SYSOUT OF SOME KIND?        27000000
         BNH   E14FREE          A... YES, FREE IT NOW                   27010000
*        CLI   DDDISP+1,C'L'  LAST USE?                                 27020000
         CLI   DDDISP+1,C'P'  LAST USE?                                 27030000
         BE    E14DISUS        NO, JUST MAKE MARKS                      27040000
*        BNE   E14DISUS        NO, JUST MAKE MARKS                      27050000
E14FREE  DS    0H                                                       27060000
         XC    CALLAREA(12),CALLAREA   CLEAR PARAMETER AREA             27070000
         MVI   CALLAREA,C'F'   INDICATE FREEFILE                        27080000
         MVI   CALLAREA+1,12   TABLE SIZE                               27090000
         MVC   CALLAREA+4(8),DDDDNAME  DDNAME TO THE AREA               27100000
         FREEFL MF=(E,CALLAREA)                                         27110000
         LTR   R1,R15                                                   27120000
         BZ    E14FREED                                                 27130000
         CVD   R15,DBL                                                  27140000
         CALL  UJS46FER                                                 27150000
         MVC   TASKSSI(4),=X'40202120'                                  27160000
         ED    TASKSSI,DBL+6                                            27170000
         JOLERR 102,'DSID ',DDDSID,''',DDNAME ',                       .27180000
               DDDDNAME,' NOT UNALLOCATED DUE TO RETURN CODE ',        .27190000
               TASKSSI                                                  27200000
         B     E14RETN                                                  27210000
E14FREED DS    0H                                                       27220000
         JOLERR 003,'DSID ',DDDSID,' DDNAME ',                         .27230000
               DDDDNAME,' UNALLOCATED'                                  27240000
E14RETN  DS    0H                                                       27250000
         B     RETN0                                                    27260000
E14DISUS DS    0H    MARK DATASET NOT IN USE                            27270000
         L     R4,ATCB              ADDRESS MY TCB                      27280000
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB                     27290000
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT                 27300000
         BZ    E14NOFCT              EXIT IF NONE ?!! & SSSSSSSSS       27310000
         CLC   =CL8' ',DDDDNAME      Q... CONCATENATED FILE?            27320000
         BE    E14NXFCT              A... YES                           27330000
         MVC   SAVEDD,DDDDNAME       COPY THE DDNAME                    27340000
         SPACE                                                          27350000
*   FOUND THE FCT CHAIN. NOW FIND THE DATASET ENTRY                     27360000
         SPACE                                                          27370000
         USING FCT,R4                                                   27380000
E14NXFCT DS    0H                                                       27390000
         CLC   FCTACSN,SAVEDD        Q... IS THIS IT?                   27400000
         BE    E14FFCT               A... YES, GO AND FIX IT            27410000
         ICM   R4,7,FCTNFCTA         NEXT FCT                           27420000
         BNZ   E14NXFCT              BR IF THERE IS ONE                 27430000
E14NOFCT JOLERR 104,                                                   .27440000
               'DSID ',DDDSID,                                         .27450000
               ' DDNAME ',DDDDNAME,                                    .27460000
               ' NOT MARKED NOT IN USE: NO FCT FOUND'                   27470000
         B     RETN0                                                    27480000
E14FFCT  DS    0H    FOUND AN FCT TO "FIX"                              27490000
         AP    DDCTR,=P'1'          ADD TO MY COUNTER                   27500000
         $TELL (R4)                                                     27510000
         MODESET  KEY=ZERO                                              27520000
*        NI    FCTACSN,X'BF'        MAKE MY MARK FOR "NOT IN USE"       27530000
         MVC   FCTACSN(4),=C'$JOL'  MAKE MY MARK FOR "NOT IN USE"       27540000
         UNPK  FCTACSN+4(4),DDCTR                                       27550000
         SPACE                                                          27560000
* WHILE I AM HERE, LET'S HAVE A LOOK AT SOME OTHER BITS                 27570000
         SPACE                                                          27580000
         LR    R2,R4                 SAVE THIS ADDRESS                  27590000
         TM    FCTFLG6,FCTF6CF       Q... CONCATENATED?                 27600000
         BZ    E14NOCAT              A... NO                            27610000
         NI    FCTFLG6,X'FF'-FCTF6CF TURN THAT OFF                      27620000
E14NXTCF DS    0H                                                       27630000
         L     R1,FCTCFNO            ADDRESS NEXT IN THIS CHAIN         27640000
         XC    FCTCFNO(4),FCTCFNO    CLEAR THIS FIELD                   27650000
         LA    R4,0(,R1)             CLEAR THE HIGH ORDER BYTE          27660000
         LTR   R4,R4                 Q... ANYTHING THERE?               27670000
         BZ    E14NOCAT              A... NO                            27680000
         CLC   FCTACSN,DDDDNAME      CHECK THIS, JUST IN CASE           27690000
         BNE   E14NOCAT              UM, ER, I'LL SEE YOU LATER         27700000
         NI    FCTFLG6,X'FF'-FCTF6CF TURN OFF CONCAT FLAG               27710000
         B     E14NXTCF              LET'S PLAY WITH THE NEXT ONE TOO   27720000
E14NOCAT DS    0H                                                       27730000
         LR    R4,R2                 ADDRESS OF THE ORIGINAL            27740000
         SPACE 2                                                        27750000
*  WELL, THAT SHOULD BE ALL                                             27760000
         SPACE                                                          27770000
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY              27780000
         SPACE 3                                                        27790000
         JOLERR 005,                                                   .27800000
               'DSID ',DDDSID,                                         .27810000
               ' DDNAME ',DDDDNAME,                                    .27820000
               ' MARKED NOT IN USE'                                     27830000
.X8E14N ANOP                                                            27840002
         B     RETN0                                                    27850000
         TITLE 'UJ20RUN:PERFORM A RUN INSTRUCTION'                      27860000
         JOLSAVE CSECT=UJE20RUN                                         27870000
* HANDLE RUN STATEMENT                                                  27880000
           MVI ISRUN,C'1'                                               27890000
           MVC RUNNAME,PGM                                              27900000
           MVC TASKNAME,PGM                                             27910000
           MVC TASKLABL,PGMLABEL                                        27920000
* NOW LETS SEE IF WE EXECUTE IN THIS STEP,OR IN THE NEXT,               27930000
*     AND IF A PARM IS USED IN THIS RUN                                 27940000
* NOW BEFORE XCTL TO THE USER PROGRAM,WE MUST DETERMINE WHETHER         27950000
*     OR NOT THERE ARE ANY DD-CARDS REFERRING TO THIS PROGRAM           27960000
*     OR IF THERE IS A PARM FIELD OR NOT.                               27970000
* IF THERE ARE NO DD-CARDS,WE MAY XCTL NOW,OTHERWISE WE                 27980000
*     MUST CHECK THAT THIS IS THE CORRECT OS STEP OR NOT                27990000
*          L  R2,TTR$INST      SAVE TTR OF NEXT INSTRUCTION             28000000
*                              BECAUSE IF WE DECIDE NOT TO DO           28010000
*                              THE USERS PROGRAM HERE WE WILL           28020000
*                              HAVE TO RESET THE TTR SO THE             28030000
*                              NEXT OS STEP THAT IS EXECUTED            28040000
*                              WILL START AT THE CORRECT STEP           28050000
         AIF   (&X8).X820NN                                             28060003
           CLC PGMNODDS,=A(0)    ARE THERE ANY DDCARDS?           75128 28070003
         BNE   E20AREDD        YES                                      28080003
.X820NN  ANOP                                                           28090003
         CALL  UJE50RD        READ NEXT STATEMENT                       28100000
         LTR   R15,R15        EOF PERHAPS ?                             28110000
         BZ    E20TPARM                                                 28120000
* NO DD'S  AND NO PARM,RETURN A 0,SO WE WILL XCTL TO                    28130000
*     PROBLEM PROGRAM.                                                  28140000
         NOTE  INSTRUCT                                                 28150000
         ST    R1,TTR$INST                                              28160000
         MVI   TTR$INST+3,0    SO WE RE-READ THE LAST STATEMENT         28170000
E20RETN0 DS    0H                                                       28180000
         BLDL  0,RUNBLDL                                                28190000
         B     RUNBLD(R15)                                              28200000
RUNBLD   B     RUNBLD0                                                  28210000
         B     RUNBLD4                                                  28220000
         B     RUNBLD8                                                  28230000
RUNBLD4  JOLERR 001,'PROGRAM ''',RUNNAME,''' ABSENT:- TRYING LPALIB'    28240000
         MVC   TASKSSI,=X'00000000'         CLEAR THE SSI INFO          28250000
         B     E20RETN                                                  28260000
RUNBLD8  JOLERR 402,'PERM I/O ERR FINDING ',RUNNAME                     28270000
E20806   DS    0H                                                       28280000
         MVI   ISRUN,C' '                                               28290000
         JOLRETN RC=&RSVDRC                                             28300000
         SPACE 3                                                        28310000
RUNBLD0  SR    R8,R8                                                    28320000
         IC    R8,RUNC1                                                 28330000
         LA    R9,X'1F'                                                 28340000
         NR    R8,R9                                                    28350000
         ALR   R8,R8                                                    28360000
         LA    R9,RUNUSDTA-4                                            28370000
         AR    R9,R8                                                    28380000
         MVC   TASKSSI,0(R9)                                            28390000
         AGO   .NTIOT                                                   28400000
         B     E20NTIOT     *************************             75002 28410000
*  NOW SET PROGRAM NAME UP IN TIOT.                                     28420000
         LA    R1,TASKNAME       LOAD THE ADRESS OF PGM NAME      75002 28430000
         ST    R1,INST           STORE IN WORK AREA               75002 28440000
         MVI   INST,8       SET LENGTH OF PARM TO 8               75002 28450000
         LA    R1,INST      LOAD A(PARM)                          75002 28460000
         L     R0,ATIOT    -> TIOT                                75002 28470000
         AH    R0,=H'16'    ->PGM NAME SPOT                       75002 28480000
         SVC   255          POP PGM NAME IN TIOT                  75002 28490000
E20NTIOT DS    0H                                                 75002 28500000
.NTIOT   ANOP                                                           28510000
E20RETN  JOLRETN RC=0                                                   28520000
E20TPARM DS    0H                                                       28530000
         NOTE  INSTRUCT      SAVE THIS ADDRESS, TO REPROCESS THE DDS    28540000
         ST    R1,TTR$INST                                              28550000
         MVI   TTR$INST+3,0       CONTINUE WITH THIS RECORD IF NOT PARM 28560000
         CLC   =C'PARM ',ICOMMAND                                       28570000
         BNE   E20TDD            NOT PARM, TRY DD                       28580000
         MVI   TTR$INST+3,1       CONTINUE WITH THE NEXT RECORD         28590000
* FIX UP USER'S PARM FIELD                                              28600000
         L     R1,ATASKPRM                                              28610000
         L    R15,=A(#TKNSTRG)                                          28620000
         USING  #TKNSTRG,R15                                            28630000
         MVC   0(256,R1),#TKNSTRG                                       28640000
         CLC   =X'00027D7D',0(R1)  FIX FOR BUG IN COMPILER              28650000
         BNE   E20T10                                                   28660000
         XC    0(6,R1),0(R1)                                            28670000
E20T10   DS    0H                                                       28680000
         DROP  R15                                                      28690000
         SPACE  3                                                       28700000
E20TDD   DS    0H           TEST FOR DD                                 28710003
         CLI   DDDD1,C'D'                                               28720003
         B     E20RETN                                                  28730003
         FIX 'NEXT LINES                 CVC *******'                   28740003
         BNE   E20NOTDD                                                 28750003
         CALL  UJE21ALL     ALLOCATE THE DD                             28760003
         B     E20READD                                                 28770003
E20NOTDD DS    0H                                                       28780003
         POINT INSTRUCT,TTR$INST                                        28790003
         B     E20RETN0        TO XCTL                                  28800003
         SPACE 3                                                        28810003
E20AREDD DS    0H                                                       28820000
* THE USER'S PROGRAM HAS DD-CARDS AND WE MUST DILIGENTLY                28830000
         AIF   (&X8).X8340                                              28840000
*     CHECK WHETHER OR NOT WE ARE IN THE CORRECT OS JOB-STEP            28850000
*     (I.E DO WE HAVE THE DD-CARDS NECESSARY FOR THIS PROGRAM)          28860000
           CLC  SCTSNAME(8),PGMSTEP RIGHT OS JOB STEP ?           75311 28870000
           BE  E20TPM2         TEST IF THIS HAS A PARM NOW              28880000
           BH  E20TOOHI        ERROR,GONE TOO FAR                       28890000
* RIGHTO,MUST CHANGE OS STEPS OLD BOY.                                  28900000
E20CHNG    ST R2,TTR$INST                                               28910000
           MVI TTR$INST+3,0    RESET 'Z' IN TTR                         28920000
           B  *+4                                                       28930000
           B  *+4                                                       28940000
           B  *+4                                                       28950000
           JOLRETN RC=4        TELL US TO GO TO ANOTHER OS STEP         28960000
E20TPM2  DS    0H                                                       28970000
           CALL UJE50RD                                                 28980000
           LTR R15,R15                                                  28990000
           BNZ E20RETN0                                                 29000000
           B   E20TPARM                                                 29010000
E20TOOHI CLC   =C'$$',PGMSTEP                                     75311 29020000
         B     E20CHNG  **********************LET MAIN FIX IT *** 75311 29030000
         BNE   E20CHNG                                            75311 29040000
         JOLERR 503,'CANNOT FIND STEP FOR ',PGMESTMT                    29050000
         AGO   .NX8340                                                  29060000
.X8340   ANOP                                                           29070000
*   ALLOCATE THEM                                                       29080000
         SPACE                                                          29090000
E20READD DS    0H                                                       29100000
         CALL  UJE50RD                                                  29110000
         LTR   R15,R15                                                  29120000
         BNZ   E20RETN0                                                 29130000
E20TDD   DS    0H           TEST FOR DD                                 29140000
         CLI   DDDD1,C'D'                                               29150000
         BNE   E20NOTDD                                                 29160000
         CALL  UJE21ALL     ALLOCATE THE DD                             29170000
         B     E20READD                                                 29180000
E20NOTDD DS    0H                                                       29190000
         POINT INSTRUCT,TTR$INST                                        29200000
         B     E20RETN0        TO XCTL                                  29210000
         SPACE 3                                                        29220000
.NX8340  ANOP                                                           29230000
         DC    80S(*)                                                   29240000
         TITLE 'UJE21ALL: HANDLE DATASET ALLOCATION'                    29250000
         JOLSAVE CSECT=UJE21ALL                                         29260000
         AIF   (NOT &X8).X8E21N                                         29270002
         FIX   'IF DATASET IS TO BE RE-WRITTEN, CALL DELETE NEAR HERE'  29280000
*            AND THEN ALLOCATE AS A NEW DATASET                         29290000
         LA    R0,WORK                                                  29300000
         LA    R1,L'WORK                                                29310000
         SLR   R15,R15                                                  29320000
         MVCL  R0,R14                                                   29330000
         CLC   =CL8' ',DDDDNAME      Q... CONCATENATED FILE?            29340000
         BE    E21NOTCT              A... NO                            29350000
         MVC   SAVEDD,DDDDNAME       COPY THE DDNAME                    29360000
E21NOTCT DS    0H                                                       29370000
         CLC   =C'PRGLIB  ',DDDDNAME Q... PRGLIB?                       29380000
         BE    E21MVDDN              A... YES                           29390000
         CLC   =C'STEPLIB ',DDDDNAME Q... STEPLIB?                      29400000
         BNE   E21X8A                A... NO                            29410000
E21MVDDN MVC   STEPLBDD,DDDDNAME      MOVE IN THE DDNAME                29420000
E21X8A   DS    0H                                                       29430000
         CLI   DDTYPE,DDSYSIN      Q... SYSIN DATASET?                  29440000
         BNE   E21NSSIN            A.. NO                               29450000
         MVC   DDMBR,DDDSNAME+2    ESTABLISH MEMBER NAME                29460000
         CLEAR DDDSNAME,DSN                                             29470000
         MVC   DDDSNAME(L'FCTFLN),SYSINDSN   COPY DSN                   29480000
         MVC   #DSN(28),#SYSINDS                                        29490000
         CLEAR DDVOLUME                                                 29500000
         MVC   DDVOLUME(6),SYSINVOL                                     29510000
         MVI   DDUSE,B'00001000'   DISP=(SHR,KEEP)                      29520000
         MVI   DDTYPE,DDMEMSPC                                          29530000
         B     E21X8A4                                                  29540000
E21NSSIN DS    0H                                                       29550000
         SPACE 2                                                        29560000
*  BEFORE GOING ANY FURTHER, WHY NOT HAVE A LOOK AROUND TO SEE          29570000
*   WHAT IS ALREADY AVAILABLE?                                          29580000
         SPACE 2                                                        29590000
         L     R4,ATCB              ADDRESS MY TCB                      29600000
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB                     29610000
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT                 29620000
         BZ    E21NOFCT              EXIT IF NONE ?!! & SSSSSSSSS       29630000
         SPACE                                                          29640000
*   FOUND THE FCT CHAIN. NOW FIND THE DATASET ENTRY                     29650000
         SPACE                                                          29660000
         USING FCT,R4                                                   29670000
E21NXFCT DS    0H                                                       29680000
         CLC   FCTFLN,DDDSNAME       Q... IS THIS IT?                   29690000
         BNE   E21NTDS               A... NO, GO AND TRY THE NEXT       29700000
         CLC   =C'$JOL',FCTACSN      Q... NOT IN USE?                   29710000
         BNE   E21NTDS               A... NO                            29720000
         SPACE                                                          29730000
* NOT IN USE, BUT ONLY USE IT IF:                                       29740000
*     A)   ALLOCATION REQUEST INCLUDES MEMBER AND FCT HAS MEMBER        29750000
*  OR                                                                   29760000
*     B)   NEITHER HAS MEMBER SPECIFIED                                 29770000
         SPACE                                                          29780000
         TM    FCTFLG1,FCTF1MEB     Q... MEMBER IN FCT?                 29790000
         BO    E21MEB1              A... YES, GO AND CHECK DDDET        29800000
         CLI   DDMBR,C' '           Q... MEMBER HERE?                   29810000
         BE    E21FFCT              A... NO, NEITHER HAS                29820000
         B     E21NTDS              CONTINUE THE SEARCH                 29830000
         SPACE                                                          29840000
E21MEB1  DS    0H                   MEMBER IN FCT, CHECK DDDET          29850000
         CLI   DDMBR,C' '           Q... MEMBER HERE?                   29860000
         BNE   E21FFCT              A... YES, THEY BOTH HAVE            29870000
E21NTDS  DS    0H                                                       29880000
         ICM   R4,7,FCTNFCTA         NEXT FCT                           29890000
         BNZ   E21NXFCT              GO AND TEST THE NEXT ONE           29900000
         B     E21NOFCT              END OF CHAIN, AND NOT FOUND        29910000
E21FFCT  DS    0H    FOUND AN FCT TO "FIX"                              29920000
         $TELL (R4)                                                     29930000
         MODESET  KEY=ZERO                                              29940000
         TM    FCTFLG1,FCTF1MEB     Q... MEMBER IN FCT?                 29950000
         BZ    E21NMEB              A... NO, GO AND FIX THE DDNAME      29960000
         L     R15,FCTFFBT          ADDRESS FBT                         29970000
         MVC   028(8,R15),DDMBR     COPY THE MEMBER NAME                29980000
E21NMEB  DS    0H                                                       29990000
 FIX 'ONE SHOULD ALSO FIX LRECL,BLKSIZE ETC HERE'                       30000000
         MVC   FCTACSN,DDDDNAME     CHANGE THE DDNAME                   30010000
         SPACE 2                                                        30020000
*  WELL, THAT SHOULD BE ALL                                             30030000
         SPACE                                                          30040000
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY              30050000
         SPACE 3                                                        30060000
         JOLERR 005,                                                   .30070000
               'DSID ',DDDSID,                                         .30080000
               ' DDNAME ',DDDDNAME,                                    .30090000
               ' ALLOCATED'                                             30100000
         B     E21RETN                                                  30110000
         SPACE 5                                                        30120000
E21NOFCT DS    0H                                                       30130000
E21X8A4  DS    0H                                                       30140000
         SPACE 2                                                        30150000
*  NOW CHECK FOR VOLREF                                                 30160000
         SPACE                                                          30170000
         CLI   DDVOLUME,C'*'         VOLREF USED?                       30180000
         BNE   E21X8A5             NO                                   30190000
         BAL   R14,E21VREF         GO AND FIX VOLREF                    30200000
E21X8A5  DS    0H                                                       30210000
         CALL UJE03X8A,(DDOSVB,CALLARE2),VL,MF=(E,CALLAREA)             30220000
         ST    R15,TASKRETN                                             30230000
         LTR   R1,R15                                                   30240000
         BZ    E21DDOK          ALLOCATED PROPERLY                      30250000
         CH    R15,=H'172'      FAIL BECAUSE OF NO DEVICE AVAIL?        30260000
         BNE   U21CVCAF         NO, GIVE FAILURE MESSAGE                30270000
         XC    ALLOCECB,ALLOCECB                                        30280000
         WTOR  'WHEN A TAPE IS AVAILABLE, PLEASE REPLY GO',ALLOCREP,   *30290000
               2,ALLOCECB                                               30300000
         WAIT  ECB=ALLOCECB                                             30310000
         B     E21X8A5          TRY AGAIN                               30320000
         CVD   R15,DBL                                                  30330000
         MVC   TASKSSI,=X'40202120'                                     30340000
         ED    TASKSSI,DBL+6                                            30350000
         JOLERR 406,'DSID ',DDDSID,', DDNAME ',                        .30360000
               DDDDNAME,', DS ',#DSN,' FAILED WITH RETURN CODE',       .30370000
               TASKSSI                                                  30380000
         CLEAR DPDATA                                                   30390000
         LA    R0,DPBLKL                                                30400000
         SLL   R0,16                                                    30410000
         ST    R0,DPBLOCK                                               30420000
         LA    R0,DPLINEL                                               30430000
         SLL   R0,16                                                    30440000
         ST    R0,DPLINE                                                30450000
         L     R2,CALLARE2     ADDRESS OF AREA TO DUMP                  30460000
E21LP0   DS    0H                                                       30470000
         ST    R2,CALLAREA                                              30480000
         UNPK  DBL(9),CALLAREA(5)                                       30490000
         TR    DBL,HEX                                                  30500000
         MVC   DPADDR,DBL+2                                             30510000
         MVC   DPCHARS,0(R2)   COPY DATA IN CHARACTERS                  30520000
         TR    DPCHARS,TRTAB   REMOVE SOME HARD-TO-PRINT DATA           30530000
         LA    R14,DPHEX       ADDRESS FOR HEX DATA                     30540000
         LA    R1,2                                                     30550000
E21LP1   DS    0H                                                       30560000
         LA    R0,4            4 SEGMENTS                               30570000
E21LP2   DS    0H                                                       30580000
         UNPK  DBL(9),0(5,R2)  CONVERT SOME TO HEX                      30590000
         TR    DBL,HEX                                                  30600000
         MVC   0(8,R14),DBL    INTO THE PRINT LINE                      30610000
         LA    R14,9(,R14)     NEXT FOR OUTPUT                          30620000
         LA    R2,4(,R2)       NEXT FOR INPUT                           30630000
         BCT   R0,E21LP2                                                30640000
         LA    R14,1(,R14)    AN EXTRA SKIP IN PAGE CENTRE              30650000
         BCT   R1,E21LP1                                                30660000
         L     R1,=A(S23DECB)                                           30670000
         WRITE (1),SF,,DPBLOCK,MF=E                                     30680000
         L     R1,=A(S23DECB)                                           30690000
         CHECK (1)                                                      30700000
         C     R2,CALLARE2+4   Q... ANY MORE?                           30710000
         BNH   E21LP0          A... YES                                 30720000
         L     R1,TASKRETN                                              30730000
         CALL  UJS45AER                                                 30740000
         TM    E21FLAG,E21CONT                                          30750000
         BO    E21RETN                                                  30760000
         JOLERR 500,'RUN TERMINATED DUE TO ALLOCATION ERROR'            30770000
         ABEND 2,,STEP                                                  30780000
E21DDOK  DS    0H                                                       30790000
         JOLERR 004,                                                   .30800000
               'DSID ',DDDSID,                                         .30810000
               ' DDNAME ',DDDDNAME,                                    .30820000
               ' ALLOCATED'                                             30830000
E21RETN  DS    0H                                                       30840000
         MVI   E21FLAG,0                                                30850000
         L     R15,TASKRETN                                             30860000
         B     RETRN                                                    30870000
         SPACE 3                                                        30880000
*  IT IS NECESSARY TO LOCATE THE FCT FOR THE DATASET WHOSE NAME IS      30890000
*    IN DDVOLUME, TO FIND THE CURRENT VOLUMES AND COPY THE LIST TO      30900000
*    THE ALLOCATION REQUEST FOR THIS DATASET                            30910000
E21VREF  DS    0H                                                       30920000
         LR    R10,R14              SAVE RETURN ADDRESS                 30930000
         L     R4,ATCB              ADDRESS MY TCB                      30940000
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB                     30950000
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT                 30960000
         BZ    E21VNFCT              EXIT IF NONE ?!! & SSSSSSSSS       30970000
         SPACE                                                          30980000
*   FOUND THE FCT CHAIN. NOW FIND THE DATASET ENTRY                     30990000
         SPACE                                                          31000000
         USING FCT,R4                                                   31010000
E21VNXTF DS    0H                                                       31020000
         CLC   FCTFLN,DDVOLUME+1   Q... IS THIS IT?                     31030000
         BE    E21VFFCT            A... YES, GO AND GET THE VOLUME INFO 31040000
         SPACE                                                          31050000
         ICM   R4,7,FCTNFCTA         NEXT FCT                           31060000
         BNZ   E21VNXTF              GO AND TEST THE NEXT ONE           31070000
E21VNFCT DS    0H                    END OF CHAIN, AND NOT FOUND        31080000
         JOLERR 507,'DSID ',DDDSID,',DS ',#DSN,                        .31090000
               ' IS NOT ALLOCATED,',' VOLREF COULD NOT BE RESOLVED'     31100000
E21VFFCT DS    0H                                                       31110000
         SPACE 3                                                        31120000
* NOW I HAVE FOUND THE FCT, COPY THE VOLUME SERIAL NUMBERS              31130000
         SPACE 2                                                        31140000
         CLEAR DDVOLUME                                                 31150000
         SLR   R8,R8                                                    31160000
         ICM   R8,1,FCTVOLNO        LOAD VOLUME COUNT                   31170000
         BZ    E21VNFCT             EXIT IF THERE ARE NO VOLUMES        31180000
         LA    R0,L'DDVOLUME/6      LOAD NUMBER OF VOLUMES ALLOWED      31190000
         CR    R0,R8                CHECK THAT THE SERIAL NUMBERS FIT   31200000
         BH    E21VOK               BE IF OK                            31210000
         JOLERR 512,'DS ',DDDSID,',',#DSN,                             .31220000
               ' IS NOT ALLOCATED,',' REFERS TO TOO MANY VOLUMES'       31230000
E21VOK   DS    0H                                                       31240000
         L     R6,FCTVCT                                                31250000
         LA    R15,DDVOLUME         ADDRESS FOR VOLUMES                 31260000
E21VNXTV DS    0H                                                       31270000
         MVC   0(6,R15),8(R6)       COPY THE VOLUME SERIAL NUMBER       31280000
         LA    R15,6(,R15)          ADDRESS FOR NEXT AREA               31290000
         L     R6,4(,R6)            ADDRESS THE NEXT VCT                31300000
         BCT   R8,E21VNXTV          CONTINUE UNTIL ALL AREA DONE        31310000
         SPACE 2                                                        31320000
*  WELL, THAT SHOULD BE ALL: NOW FREE THE ORIGINAL DATASET              31330000
         SPACE                                                          31340000
         MVC   SAVEDDET,DDDSNDET                                        31350000
         MVC   DDDDNAME,FCTACSN                                         31360000
         MVI   DDDISP+1,C'L'      LAST USE                              31370000
         CALL  UJE14FRE           FREE THE FILE, ASSUME IT WORKED       31380000
         MVC   DDDSNDET(DDLEN),SAVEDDET RESTORE THE ORIGINAL            31390000
         UJE22UPD FCTFLN,DDVOLUME FIX FUTURE VOLUME REFERENCES          31400000
         DROP  R4                                                       31410000
         BR    R10                  RETURN                              31420000
         SPACE 5                                                        31430000
         DC    20S(*)   FOR PATCHES                                     31440000
TRTAB    DC    256AL1(*-TRTAB) ALL THINGS TO ALL THINGS                 31450000
         ORG   TRTAB                                                    31460000
         DC    64X'40'         FIX THE FIRST ONES                       31470000
         ORG   TRTAB+C'9'+1                                             31480000
         DC    6C' '           AND THE LAST ONES                        31490000
         ORG                                                            31500000
ALLOCREP DC C'   ' FOR ALLOCATION REPLIES                               31510000
ALLOCECB DC  F'0'  FOR ALLOCATION REPLIES                               31520000
.X8E21N  ANOP                                                           31530002
         JOLRETN                                                        31540002
         TITLE 'UJE23RET: HANDLE RETURN INSTRUCTION'                    31550000
           JOLSAVE CSECT=UJE23RET                                 74365 31560000
           L   R7,=A(#TKN)                                              31570000
           USING #TKN,R7                                                31580000
         JOLERR 101,'RETURN ',#TKN,' EXECUTED'              FIX-X 76200 31590000
           L R14,=A(RETURN)                                       74365 31600000
           JOLRETN (15,12),RC=0                                   74365 31610000
         DC  10S(*)                                                     31620000
           SPACE 3                                                75311 31630000
           JOLSAVE CSECT=UJE31OPT                                 75311 31640000
           MVI JOLSVC,X'0A'    SVC INSTRUCTION CODE               75311 31650000
           MVC JOLSVC+1(1),ITEXT+2 SVC NUMBER                     75311 31660000
           JOLRETN  RC=0                                          75311 31670000
           TITLE 'UJE50RD:READ A STATEMENT FROM JOL INSTRUCT FILE'      31680000
           JOLSAVE CSECT=UJE50RD                                        31690000
* THIS CSECT IS CALLED WHEN A NEW INSTRUCTION HAS TO BE                 31700000
*    READ FROM THE INSTRUCT FILE.                                       31710000
           MVC #VOL,=H'0'     STOP SPURIOUS 0C4                  75311  31720000
           CLC TTR$INST,=A(0)  FIRST TIME IN,I.E. WE HAVEN'T            31730000
*                              EVEN REALLY STARTED YET ?                31740000
           BNE E50NOTF                                                  31750000
           MVC RUNNAME,=CL8'$$INST'                                     31760000
           BLDL INSTRUCT,RUNBLDL                                        31770000
           B   E5002R(R15)                                              31780000
E5002R     B   E50GOTIT                                                 31790000
           B   E5002R4                                                  31800000
           B   E5002R8                                                  31810000
E5002R4    JOLERR 501,'MEMBER $$INST ABSENT'                            31820000
E5002R8    JOLERR 502,'I/O ERROR READING DIRECTORY'                     31830000
           DS 0D                                                        31840000
E50GOTIT DS    0H                                                       31850000
         MVC TTR$INST,RUNTTRK                                           31860000
         MVI TTR$INST+3,0     SET Z=0 FIRST                             31870000
         FIND  INSTRUCT,TTR$INST,C                                      31880000
         B     E50RD                                                    31890000
E50NOTF  DS    0H                                                       31900000
*        POINT INSTRUCT,TTR$INST                                        31910000
E50RD    DS    0H                                                       31920000
           MVC INSTRUCT+33(3),=AL3(EOF)                                 31930000
           L  R15,=A(#TKNSTRG)                                          31940000
           USING  #TKNSTRG,R15                                          31950000
           CLEAR TKNSTRG                                                31960000
           DROP  R15                                                    31970000
           L  R2,=A(INSTRDA)                                            31980000
           USING    INSTRDA,R2                                          31990000
           READ E50DECB,SF,INSTRUCT,(R2)                                32000000
           CHECK E50DECB                                                32010000
* IF EOF WOULD HAVE GONE ELSE-WHERE                                     32020000
*******************************************************************DASD 32030000
*   THIS CALL TO MODULE $$JOLBUG WILL PRINT THE INSTRUCTION        DASD 32040000
*   JUST READ TO DDNAME '$JOL$BUG$' IF IT'S PRESENT                DASD 32050000
*   -----MAYBE A GOOD TRACE FACILITY----                           DASD 32060000
*   YOU MIGHT DO A JOLOPT CARD1='//JOLBUG DD SYSOUT=A'             DASD 32070000
*   IN THE COMPILE TO GET THIS DD IN EVERY STEP                    DASD 32080000
****************************************************02-23-78*******DASD 32090000
      CALL   $$JOLBUG,((2))     CALL PRINT MODULE                  DASD 32100000
           DROP  R2                                                     32110000
           SPACE 3                                                      32120000
           L   R7,=A(#TKN)                                              32130000
           USING #TKN,R7                                                32140000
*          NOTE INSTRUCT                                                32150000
*          ST  R1,TTR$INST                                              32160000
*          MVI TTR$INST+3,1    SET Z TO 1 SO NEXT READ GETS NEW BLK     32170000
           MVC INST(IBODY),INSTRDA                                      32180000
           MVC DDDSNDET(DDLEN),INSTRDA                                  32190000
           MVC STMT,ISTMT                                               32200000
           MVC GOTOLAB,=CL8'$$'                                         32210000
           CLI DDDD1,C'E'      EXEC PGM ?                               32220000
           BNE E50TDD                                                   32230000
           MVC ICOMMAND,=CL8'RUN'                                       32240000
           MVC STMT,PGMESTMT                                            32250000
           MVC GOTOLAB,PGMSTEP SHIFT STEPNAME FOR 'REAL' STEPNAME 75311 32260000
           JOLRETN                                                      32270000
E50TDD    DS    0H                                                      32280000
          CLI DDDD1,C'D'      DD-CARD TYPE ENTRY?                       32290000
          BNE ISALABEL                                                  32300000
* NOW FOR DD-CARD TYPE ENTRIES,WE DON'T SPLIT INTO TOKENS.              32310000
* SET UP SHORT DSNAME FOR ERROR MESSAGES                                32320000
          MVC DSNAME,DDDSNAME                                           32330000
          LA  R15,L'DDDSNAME-1                                          32340000
E50TEDSN DS    0H                                                       32350000
          LA  R14,DDDSNAME(R15)                                         32360000
          CLI 0(R14),C' '                                               32370000
          BNE E50DSNOK                                                  32380000
          BCT R15,E50TEDSN                                              32390000
E50DSNOK DS    0H                                                       32400000
          LA  R15,1(R15)                                                32410000
          STH R15,#DSN                                                  32420000
       FIX 'JCS DID NOT SEE ANY USE FOR THE FOLLOWING LINE'             32430000
*          MVC STMT,DDDDNAME+2                                          32440000
          MVC GOTOLAB(2),=C'$$'                                         32450000
          MVC GOTOLAB+2(6),DDDDNAME+2                                   32460000
          MVC #TKN,=H'8'                                                32470000
           MVC TKN(8),BLANKS                                            32480000
           MVC TKN(1),DDDDNAME+1                                        32490000
           MVC ICOMMAND,TKN                                             32500000
          CLI   DDDDNAME,C'%'                                           32510000
          BE    E50RETN0                                                32520000
          MVI   TKN,C'F'     INDICATE FREE COMMAND                      32530000
          MVI   ICOMMAND,C'F'                                           32540000
E50RETN0  DS    0H                                                      32550000
          JOLRETN                                                       32560000
ISALABEL  DS    0H                                                      32570000
          CLC INST,=AL2(IBODY+1)                                        32580000
           BH  E50SPLIT                                                 32590000
           L  R15,=A(#TKNSTRG)                                          32600000
           USING  #TKNSTRG,R15                                          32610000
           XC #TKNSTRG,#TKNSTRG                                         32620000
           DROP  R15                                                    32630000
E50SPLIT DS    0H                                                       32640000
* THE DOUBLE QUOTE ROUTINE IN THE COMPILER NOW REMOVES            76200 32650000
* ALL QUOTES FROM THE STRING, AND THEREFORE IF                    76200 32660000
* SOMEONE HAS QUOTES IN A STRING FOR A PARM, THERE                76200 32670000
* WILL NOW ONLY BE ONE. THIS CAUSES ALL SORTS OF                  76200 32680000
* PROBLEMS WHEN THE TOKEN SPLITTER GETS IT.                       76200 32690000
         CLC   ICOMMAND,=CL8'PARM' PARM?                          76200 32700000
         BNE   E50SPL2                                            76200 32710000
         JOLRETN RC=0                                             76200 32720000
E50SPL2  DS    0H                                                 76200 32730000
           CALL UJCTKN,TKNX                                             32740000
*           B *+4                                                  DASD 32750000
*           B *+4                                                  DASD 32760000
*           LTR R15,R15                                            DASD 32770000
*           BZ  GOTINSTR                                           DASD 32780000
            B  *+4(R15)                                            DASD 32790000
            B  GOTINSTR  SUPER INSTRUCTION IS CLEAN                DASD 32800000
            B  E50BINST  STMT > 1000 BYTES   CANN"T HANDLE THIS    DASD 32810000
            B  GOTINSTR  TOO MANY TOKENS > 150                     DASD 32820000
            B  GOTINSTR  TOKEN > 120 BYTES                         DASD 32830000
            B  GOTINSTR  NO ENDING QUOTE                           DASD 32840000
E50BINST   JOLERR 503,'ERROR IN INSTRUCTION'                       DASD 32850000
GOTINSTR DS    0H                                                       32860000
           GETTKN 1                                                     32870000
           JOLRETN                                                      32880000
EOF        JOLRETN RC=4                                                 32890000
         DC    80S(*)                                                   32900000
          LTORG                                                         32910000
         AIF   (&X8).X8400                                              32920000
           TITLE 'UJE81PDQ:READ PASSED DATA SET QUEUE'                  32930000
           JOLSAVE CSECT=UJE81PDQ                                       32940000
* THIS CSECT MUST FIND THE PDQ ENTRY THAT REFERS TO THE DSNAME          32950000
*    IN THE DSNAME FIELD. A 4 IS RETURNED IF IT CAN'T                   32960000
*                                                                       32970000
******                                                                  32980000
* CHECK IF JCTPDIP = 0 (MAY BE IF RUNNING UNDER                         32990000
*                       TSO).                                           33000000
******                                                                  33010000
           MVI ISINPDQ,C' '                                        DASD 33020000
         SPACE 1                                                  76200 33030000
         CLC   JCTPDIP,=F'0'                                      76200 33040000
         BNE   E81GO                                              76200 33050000
         JOLRETN RC=4                                             76200 33060000
E81GO    DS    0H                                                 76200 33070000
           GETJOBQ PDQDECB2,JCTPDIP                                     33080000
           B  E81GOTRD                                                  33090000
E81READ1 GETJOBQ PDQDECB2,CALLAREA                                      33100000
E81GOTRD DS   0H                                                        33110000
         CLI  VS,C'2'   MVS?                                            33120000
         BNE   E81NMVS1                                                 33130000
E81MVDS1 CLC   DDDSNAME,PDIDSN1                                         33140000
         BE    E81PASS1                                                 33150000
         CLC   DDDSNAME,PDIDSN2                                         33160000
         BE    E81PASS2                                                 33170000
         CLC  DDDSNAME,PDIDSN3                                          33180000
         BE    E81PASS3                                                 33190000
* NOT IN PDI, GET NEXT                                                  33200000
         CLC  =AL3(0),PDINPDIP  IS THIS THE LAST BLOCK?                 33210000
         BE   E81RETN4    YES, NOT FOUND THEN                           33220000
         GETJOBQ  PDQDECB2,PDINPDIP                                     33230000
         B    E81MVDS1                                                  33240000
E81NMVS1 DS    0H                                                       33250000
         CLC DDDSNAME,PDQDSN1                                           33260000
         BE  E81PASS1                                                   33270000
         CLC DDDSNAME,PDQDSN2                                           33280000
         BE  E81PASS2                                                   33290000
         CLC DDDSNAME,PDQDSN3                                           33300000
         BE  E81PASS3                                                   33310000
* NOT IN THAT BLOCK,GET THE NEXT                                        33320000
         CLC =AL3(0),PDQNPDQ LAST BLOCK IN PDQ ?                        33330000
         BE  E81RETN4        YES,THERE-FORE COULDN'T FIND DSET          33340000
         MVC CALLAREA,PDQNPDQ                                           33350000
         MVI CALLAREA+3,0                                               33360000
*                                                                       33370000
         B   E81READ1                                                   33380000
E81PASS1 MVC PDQDSNNO,=H'0'                                             33390000
         B   E81PDQB                                                    33400000
E81PASS2 MVC PDQDSNNO,=H'1'                                             33410000
         B   E81PDQB                                                    33420000
E81PASS3 MVC PDQDSNNO,=H'2'                                             33430000
E81PDQB  DS   0H                                                        33440000
* THERE USED TO BE A NOTE FOR JOBQ HERE, NOT NEC NOW              75128 33450000
         ST R1,APDQDIR       AND SAVE IT                                33460000
         CLI  VS,C'2'     MVS                                           33470000
         BNE   E81NMVS2                                                 33480000
* GET SIOT FOR MVS SYSTEMS                                              33490000
         LH  R1,PDQDSNNO                                                33500000
         MH  R1,=AL2(PDILEN)                                            33510000
         LA  R14,PDISIOT1(R1)   GET SIOT ADDRESS LOCN                   33520000
         MVC  CALLAREA,0(R14)                                           33530000
         B   E81GETSI         GO GET THE SIOT                           33540000
E81NMVS2 DS   0H                                                        33550000
         MVC CALLAREA,PDQABLK                                           33560000
         MVI CALLAREA+3,0                                               33570000
         GETJOBQ PDQDECB,CALLAREA                                       33580000
* NOW GET THE SIOT AS WELL                                              33590000
         LH  R1,PDQDSNNO     DATA SET NUMBER                            33600000
         MH  R1,=AL2(PDQBLKLN) LENGTH OF BLOCK                          33610000
         LA  R1,PDQASIOT(R1)   ABSOLUTE ADDRESS                         33620000
         MVC CALLAREA(3),0(R1) SIOT TTR                                 33630000
         MVI CALLAREA+3,0                                               33640000
E81GETSI DS    0H                                                       33650000
         GETJOBQ SIOTDECB,CALLAREA                                      33660000
         MVI ISINPDQ,C'1'                                               33670000
         JOLRETN                                                        33680000
E81RETN4 DS    0H                                                       33690000
         JOLRETN RC=4                                                   33700000
         DC   80S(*)                                                    33710000
.X8400   ANOP                                                           33720000
         TITLE 'UJE94CLN:CLEANUP ROUTINE'                               33730000
         JOLSAVE CSECT=UJE94CLN                                         33740000
         AIF   (NOT &X8).X8E94N                                         33750002
         MVC   STMT,=C'99999'                                           33760000
E94#010  DS    0H                                                       33770000
         L     R4,ATCB      TCB ADDRESS                                 33780000
         L     R4,TCBJSCB-TCB(,R4)  ADDRESS MY JSCB                     33790000
         ICM   R4,7,JSCBFCTA-JSCB(R4)                                   33800000
         BZ    E94DONE                                                  33810000
         USING FCT,R4                                                   33820000
         SPACE 2                                                        33830000
*  FOUND THE START OF THE FCT CHAIN: NOW SCAN CHAIN FOR A FILE TO FREE  33840000
         SPACE 2                                                        33850000
E94NXTF  DS    0H                                                       33860000
         CLC   =C'$JOL',FCTACSN  Q... ONE I MARKED?                     33870000
         BNE   E94NXTF1          A... NO                                33880000
         BAL   R14,E94FREE                                              33890000
         B     E94#010                                                  33900000
E94NXTF1 DS    0H                                                       33910000
         ICM   R4,7,FCTNFCTA   ADDRESS THE NEXT                         33920000
         BNZ   E94NXTF                                                  33930000
E94DONE  DS    0H                                                       33940000
         B     RETN0                                                    33950000
         SPACE 4                                                        33960000
E94FREE  DS    0H                                                       33970000
         ST    R14,CALLAREA+12                                          33980000
         XC    CALLAREA(12),CALLAREA                                    33990000
         MVI   CALLAREA,C'F'   FREE FILE                                34000000
         MVI   CALLAREA+1,12   TABLE SIZE                               34010000
         MVC   CALLAREA+4(8),FCTACSN ACCESS NAME                        34020000
         MVC   STEPLBDD,FCTACSN FOR MESSAGES B LOW                      34030000
         FREEFL MF=(E,CALLAREA)                                         34040000
         LTR   R1,R15                                                   34050000
         BZ    E94FREE5                                                 34060000
         CVD   R15,DBL                                                  34070000
         CALL  UJS46FER                                                 34080000
         MVC   TASKSSI(4),=X'40202120'                                  34090000
         ED    TASKSSI,DBL+6                                            34100000
         JOLERR 102,'DDNAME ',                                         .34110000
               STEPLBDD,' NOT UNALLOCATED DUE TO RETURN CODE',         .34120000
               TASKSSI                                                  34130000
         B     E94FREE9                                                 34140000
E94FREE5 DS    0H                                                       34150000
         JOLERR 001,'DDNAME ',                                         .34160000
               STEPLBDD,' UNALLOCATED'                                  34170000
E94FREE9 DS    0H                  RETURN                               34180000
         L     R14,CALLAREA+12                                          34190000
         BR    R14                                                      34200000
.X8E94N  ANOP                                                           34210002
         JOLRETN                                                        34220002
         TITLE 'UJE98INI:INITIALISATION ROUTINES'                       34230000
         JOLSAVE CSECT=UJE98INI                                         34240000
* THIS CSECT IS CALLED IMMEDIATELY AFTER THE JOL SCHEDULER GETS CONTROL 34250000
*    AND IT  OPENS THE FILES ETC                                        34260000
* SECOND DETERMINE WHETHER WE ARE RUNNING UNDER 'HASP' OR 'OS'          34270000
*    IF THERE IS A DD-CARD FOR '$$PRINT' THEN THE SYSOUT FILE           34280000
*    ASSOCIATED WITH THAT FILE WILL BE USED SIMILIARLY TO THE           34290000
*    'HASP' SYSTEM LOG,I.E ALL COMMENTS WILL GO OUT TO IT.              34300000
         SPACE 3                                                        34310000
* NOTE *** UNDER VS, WE ATTACH RATHER THAN XCTL TO THE USER PROGRAM     34320000
*     AS WE SAVE TIME THEN BY NOT CLOSING AND RE-OPENING OUR FILES.     34330000
*     SO, LET'S SEE IF THEY ARE OPEN, AS TO OPEN AGAIN WOULD DEFEAT     34340000
*     THE WHOLE EXERCISE, WOULDN'T IT?                                  34350000
         SPACE 1                                                        34360000
         TM INSTRUCT+48,X'10'                                     74365 34370000
         BO  SCHEDGO                                              74365 34380000
         SPACE 1                                                        34390000
         MVC STMT,=CL4'   0'                                            34400000
&C1      SETC  (1-&X8)'AQMRAW'                                          34410000
&C2      SETC  (1-&X8)'IBMRTN'                                          34420000
&C3      SETC  (1-&X8)'JOBQ'                                            34430000
&C4      SETC  (1-&X8)'JCTTTR'                                          34440000
         CALL  UJE70OPN,(&C1,&C2,INSTRUCT,PRINT,RETN,&C3,         ******34450000
               &C4,VS,ATCB),MF=(E,CALLAREA)                       ***** 34460000
*** ABOVE OPENS REQUIRED FILES, AND :-                            ***** 34470000
*    1. SETS 'JCTTTR' TO CORE ADDRESS, OR TTR ON JOBQ.            ***** 34480000
*    2. LOADS (MAYBE) AN IBM ROUTINE TO ACCESS JOBQ.              ***** 34490000
*    3. OPENS 'INSTRUCT'                                          ***** 34500000
*    4. OPENS 'PRINT' IF $$PRNT DD CARD PRESENT                   ***** 34510000
*    5. OPENS 'JOBQ'  IF $$JOBQ DD CARD PRESENT AND ^MFT |MVT|MVS ***** 34520000
*    6. SETS 'VS' TO ' ' | '1' | '2' | 'M'                        ***** 34530000
*    7. SETS 'ATCB' = A(OUR TCB)                                  ***** 34540000
           SPACE 3                                                ***** 34550000
         AIF   (NOT &X8).X8E9801                                        34560002
         L     R4,ATCB               ADDRESS MY TCB                     34570000
         L     R14,TCBJSCB-TCB(,R4)           MY JSCB                   34580000
         ICM   R14,7,JSCBCSCA-JSCB(R14)       MY CSCB                   34590000
         MVC   JBNAME,CSCBUJNM-CSCB(R14)      WOT IME CALLED            34600000
.X8E9801  ANOP                                                          34610002
SCHEDGO  DS    0H                                                       34620000
         L     R1,ATASKPRM      CLEAR USER'S PARM                       34630000
         XC    0(2,R1),0(R1)                                            34640000
       SPACE                                                            34650000
* NOW CHECK THAT THE INSTRUCT AND RETNCODE FILES ARE OPEN               34660000
         SR    R8,R8                                                    34670000
         TM    INSTRUCT+48,X'10'                                        34680000
         BO    FILE1OK                                                  34690000
         LA    R8,1                                                     34700000
         JOLERR 501,'NO DD CARD FOR $$INST'                             34710000
FILE1OK  DS    0H                                                 75128 34720000
         AIF   (NOT &X8).X8E9802                                        34730002
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB                     34740000
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT                 34750000
         BZ    E98NOFCT              EXIT IF NONE ?!! & SSSSSSSSS       34760000
         SPACE                                                          34770000
*   FOUND THE FCT CHAIN. NOW FIND A DATASET ENTRY                       34780000
         SPACE                                                          34790000
         USING FCT,R4                                                   34800000
E98NXFCT DS    0H                                                       34810000
         CLC   FCTACSN,=CL8'&DDINST' Q... IS THIS MY INSTRUCTION FILE?  34820000
         BE    E98FFCT               A... YES, GO AND FIX IT            34830000
         ICM   R4,7,FCTNFCTA         NEXT FCT                           34840000
         BNZ   E98NXFCT              BR IF THERE IS ONE                 34850000
E98NOFCT JOLERR 500,'NO FCT FOR THE INSTRUCTION FILE'                   34860000
E98FFCT  DS    0H    FOUND THE FCT, NOW COPY THE DSNAME                 34870000
         MVC   SYSINDSN(L'FCTFLN),FCTFLN   COPY THE FILE NAME           34880000
         LA    R1,SYSINDSN+L'FCTFLN-1 ADDR LAST BYTE                    34890000
         CLI   0(R1),C' '           TRUNCATE TRAILING BLANKS            34900000
         BNE   *+8                                                      34910000
         BCT   R1,*-8                                                   34920000
         LA    R0,SYSINDSN                                              34930000
         SR    R1,R0                                                    34940000
         STH   R1,#SYSINDS            STORE LENGTH                      34950000
         L     R15,FCTVCT            ADDRESS VOLUME INFORMATION         34960000
         MVC   SYSINVOL,8(R15)       COPY THE VOLUME SERIAL NUMBER      34970000
         ZAP   DDCTR,=P'0'           INITIALISE DD COUNTER              34980000
         SPACE 2                                                        34990000
.X8E9802 ANOP                                                           35000002
         FIND  INSTRUCT,MBRRETN,D                                       35010000
         B     E98INITR(R15)                                            35020000
E98INITR B     E98GOTMB                                                 35030000
         B     E98FIND4                                                 35040000
         B     E98FIND8                                                 35050000
MBRRETN  DC    CL8'$$RETN'                                              35060000
         SPACE 3                                                        35070000
E98FIND8 JOLERR 504,'I/O ERROR READING DIRECTORY'                       35080000
         SPACE 3                                                        35090000
E98FIND4 DS    0H                                                       35100000
* THE $$RETN MEMBER HASN'T BEEN SET UP APPARENTLY                       35110000
         JOLERR 109,'JOL MONITOR VERSION IS ',                   74365 *35120000
               '4.0-A  '                                         76200  35130000
*          LA R1,READAREA                                               35140000
*          USING READAREA,R1                                            35150000
*          CLEAR READAREA  ****** FOR TESTS ONLY ?????                  35160000
         LA    R0,READAREA                                              35170000
         L     R1,=A(L'READAREA)                                        35180000
         SLR   R15,R15        ZEROES TO ALL THE AREA                    35190000
         MVCL  R0,R14                                                   35200000
*          DROP R1                                                      35210000
*          XC TTR$RETN(100),TTR$RETN                              75311 35220000
           MVI   COND,C' ' CLEAR COND TO BLANKS                    DASD 35230000
           MVC   COND+1(L'COND-1),COND                             DASD 35240000
           WRITE E98DEC9,SF,RETN,READAREA,'S'                           35250000
           CHECK E98DEC9                                                35260000
           NOTE RETN                                                    35270000
           ST  R1,TTR$RETN                                              35280000
           STOW RETN,STOWBLK,A                                          35290000
           LTR R15,R15                                                  35300000
           BZ  E98RDJCT                                                 35310000
           JOLERR 503                                                   35320000
E98GOTMB DS    0H                                                       35330000
* WE HAVE NOW FOUND THE $$RETN MEMBER OF THE DATA SET                   35340000
           LH R2,INSTRUCT+X'3E'                                         35350000
           MVC INSTRUCT+X'3E',=Y(&RETNSIZ)                         DASD 35360000
           READ E98DECBX,SF,INSTRUCT,RETNAREA                           35370000
           CHECK E98DECBX                                               35380000
           STH R2,INSTRUCT+X'3E'                                        35390000
           NOTE INSTRUCT                                                35400000
           ST  R1,TTR$RETN     FOR REWRITING                            35410000
* FIND OUT HOW MUCH DATA WE READ (ALSO USED FOR REWRITING)              35420000
           L  R1,E98DECBX+16   IOB ADDRESS                              35430000
           LH R14,INSTRUCT+X'3E'  BLOCKSIZE                             35440000
           SH R14,14(R1)  MINUS RESIDUAL COUNT                          35450000
           STH R14,RETNBLKS    LENGTH OF RETN BLOCK                     35460000
           SPACE 3                                                      35470000
           MVC STMT,DBL                                                 35480000
         POINT INSTRUCT,TTR$INST                                        35490000
E98RDJCT DS    0H                                                       35500000
           AIF   (&X8).X8420                                            35510000
           SPACE 3                                                      35520000
* BETTER SET UP THE JOBNAME ETC                                         35530000
           LA  R4,CALLAREA                                              35540000
           EXTRACT (4),'S',FIELDS=(TIOT)                                35550000
           L   R1,CALLAREA                                              35560000
           ST  R1,ATIOT        SAVE ADDRESS OF TIOT                     35570000
* NOW READ IN JCT AND SCT                                               35580000
           GETJOBQ JCTDECB,JCTTTR                                 ***** 35590000
           MVC CALLAREA(3),JCTSSTR  POINT TO CURRENT SCT                35600000
E80RDSCT DS    0H                                                       35610000
           MVI CALLAREA+3,0                                             35620000
           GETJOBQ SCTDECB,CALLAREA                                     35630000
*****************************************************************       35640000
* NOW BECAUSE OS DOES NOT UPDATE THE CURRENT JCT                        35650000
*     SCT POINTER AFTER A STEP HAS BEEN BYPASSED,I MUST                 35660000
*     CHECK THAT THE SCT I'VE JUST READ IN IS THE RIGHT ONE             35670000
*     FOR THIS OS STEP.                                                 35680000
*     IF ITS NOT,I STEP ON TO THE CORRECT ONE.                          35690000
* ALSO THE CURRENT OS STEP COUNTER MUST BE UPDATED COS I USE            35700000
*     IT IN THE SCRATCH ROUTINE                                         35710000
******************************************************************      35720000
* WE'LL USE THE TIOT STEP NUMBER,COS THAT MUST BE RIGHT ?????           35730000
           SPACE                                                        35740000
           ST R1,CALLAREA                                               35750000
           MVC  JCTSSTR(3),CALLAREA                                     35760000
* NOW CHECK THAT THE STEPS ARE RIGHT                                    35770000
           L R1,ATIOT          GET TIOT ADDTRESS                        35780000
           CLC SCTSNAME,8(R1)   RIGHT STEP ?                            35790000
           BE E98T1ST          TEST IF 1ST TIME IN THIS OS STEP         35800000
* OK THEN,STEP ON TO READ NEXT SCT,AND ADD 1 TO CURRENT                 35810000
*     JCT STEP COUNTER                                                  35820000
           SR R1,R1                                                     35830000
           IC R1,JCTSNUMB                                               35840000
           LA R1,1(R1)                                                  35850000
           STC R1,JCTSNUMB                                              35860000
           MVC CALLAREA(4),SCTANSCT  NEXT SCT ADDRESS                   35870000
           B  E80RDSCT                                                  35880000
E98T1ST  DS   0H                                                        35890000
.X8420     ANOP                                                         35900000
           SPACE 6                                                      35910000
           CLI TASKIND,C' '    IS THIS THE FIRST TIME I'VE BEEN CALLED  35920000
*                              THIS OS STEP ?                           35930000
           BE  E98RETN0        YES,SO NOW FILES ETC INITIALISED,GO BACK 35940000
*                              TO THE MAIN-LINE LIKE A GOOD BOY.        35950000
           SPACE 3                                                      35960000
* THE SCHEDULER HAS BEEN RE-ATTACHED AFTER AN XCTL TO A PROBLEM         35970000
*    PROGRAM. THEREFORE WE MUST DO NICE THINGS LIKE PRINT OUT           35980000
*    THE RETURN CODES ETC,                                              35990000
* WE HAD BETTER STORE ITS RETURN CODE IN THE TABLE ANYWAY               36000000
           LH R1,NOIDS                                                  36010000
           MH R1,=H'18'                                                 36020000
           LA R1,IDSTART(R1)                                            36030000
           USING IDOVLY,R1                                              36040000
           MVC IDRETN,TASKRETN                                          36050000
           MVI IDRETN,0        TURN OFF HIGH ORDER BITS FOR COMPARISONS 36060000
*                              IN THE 'IF' STATEMENT LATER              36070000
******* MORE FOR  MAXCC,LASTCC   SEPT 75                                36080000
         TM    TASKRETN,TCBFA   DID AN ABEND OCCUR?      CHG26028 76200 36090000
         BO    E98LMAX        YES, SO LEAVE LASTCC AND MACHG26028 76200 36100000
         MVC  LASTCC,IDRETN   LASTCC DONE                               36110000
         CLC   MAXCC,LASTCC                                             36120000
         BH    E98LMAX                                                  36130000
         MVC   MAXCC,LASTCC   MAXCC DONE                                36140000
         DROP  R1                                                       36150000
E98LMAX  UNPK  CALLAREA(9),TASKSSI(5)                                   36160000
         TR    CALLAREA(8),HEX                                          36170000
         MVC   ENDMSSI,CALLAREA 3(5)                                    36180000
*        OI    ENDMSSI+7,X'F0'                                          36190000
* NOW SEE IF TASK ABENDED OR RETURNED PROPERLY.                         36200000
         TM    TASKRETN,TCBFA                  ABEND ?                  36210000
         BZ    NOTABND                                                  36220000
         MVI   ERRORIND,1     TURN ON ABEND INDICATOR    CHG26028 76200 36230000
* WAS IT A USER ABEND OR A SYSTEM ABEND ?                               36240000
         L     R1,TASKRETN                                              36250000
         N     R1,=X'00FFF000'                                          36260000
         BZ    USERABND                                                 36270000
         UNPK  CALLAREA(9),TASKRETN(5)                                  36280000
         TR    CALLAREA(8),HEX                                          36290000
         MVC   ENDMRETC(4),CALLAREA+1                                   36300000
         MVC   ENDMRETC+5(3),CALLAREA+5                                 36310000
         MVI   ENDMRETC,C'S'                                            36320000
         MVI   ENDMRETC+4,C'-'                                          36330000
           JOLERR 307,'STEP ',TASKLABL,' LM ',TASKNAME,' SSI ',   74365*36340000
               ENDSSI,' SYSTEM ABEND ',ENDRETC                    74365 36350000
E98CLRAB CLEAR TASKRETN    CLEAR ABEND                   CHG26028 76200 36360000
*        B     E20R16       TAKE BRANCH TO COND CODE TERMINATE   C DASD 36370000
         B     E98RETN0                                          A DASD 36380000
           SPACE 3                                                      36390000
NOTABND    XC TASKRETN(2),TASKRETN                                      36400000
USERABND DS    0H                                                       36410000
         L   R0,=X'0000FFFF'  IF NEGATIVE NUMBER LETS SHOW IT      DASD 36420000
         N   R0,TASKRETN                                                36430000
         CVD R0,DBL                                                     36440000
         OI  DBL+7,X'0F'                                           DASD 36450000
         UNPK ENDRETB,DBL                                          DASD 36460000
         CLI ENDRETB,C'0'                                          DASD 36470000
         BNE ENDMSSOK  ITS A BIG ONE                               DASD 36480000
         MVI ENDRETB,C' '  PRINT AS BEFORE (4 BYTE RETN CODE)      DASD 36490000
ENDMSSOK DS    0H                                                       36500000
         TM  TASKRETN,TCBFA  ABEND ?                                    36510000
         BO  E98TYPER                                                   36520000
         JOLERR 105,'STEP ',TASKLABL,' LM ',TASKNAME,' SSI ',     74365*36530000
               ENDSSI,' RETURNED ',ENDRETB                         DASD 36540000
         AIF   (&X8).X8440                                              36550000
*                                                                 76200 36560000
* TO HANDLE THE STOP WHEN, WE MUST EXAMINE THE JCT JOB TERMINATION76200 36570000
* INDICATORS, AND COMPARE THIS RETURN CODE AND IF NECESSARY,      76200 36580000
* TERMINATE THE RUN.                                              76200 36590000
*                                                                 76200 36600000
* WE HAVE RESERVED TO US 1 JOB COND OF 'EQ,4000', AND SO WE CAN   76200 36610000
* FLUSH THE JOB BY SETTING 4000 ANY TIME WE WISH.                 76200 36620000
*                                                                 76200 36630000
*                                                                 76200 36640000
         LA    R1,JCTJDPCD                                        76200 36650000
         LA    R15,JCTJDPCD+4+28-1 END LOOP INDIC                 76200 36660000
         LA    R14,4               LENGTH OF TABLE                76200 36670000
E98DEPL  CLI   2(R1),0       ANY COND (END LOOP)            76200       36680000
         BE    E98RETN0            END -> RETURN                  76200 36690000
         IC    R6,2(R1)            GET DEPENDENCY CODE AND        76200 36700000
*                                  GET REDY FOR EXECUTE           76200 36710000
         CLC   0(2,R1),TASKRETN+2 COMPARE                        76200  36720000
         EX    R6,E98GO40          BRANCH IF TRUE                 76200 36730000
         BXLE  R1,R14,E98DEPL      LOOP THEN ...                  76200 36740000
.X8440   ANOP                                                           36750000
         B     E98RETN0                                           76200 36760000
         AIF   (&X8).X8460                                              36770000
E98GO40  BC    0,E98R16       EXECUTED  *****                     76200 36780000
E98R16   DS    0H                                                       36790000
E20R16   DS    0H                                                       36800000
* DUE TO USING MVS MACRO, MUST MOVE JOBNAME BEFORE 'JOLERRINR'          36810000
            MVC  TASKLABL,JCTJNAME                                      36820000
           JOLERR 408,'JOB ',TASKLABL,                                 *36830000
               ' TERMINATED DUE TO CONDITION CODES'                     36840000
           B   E98RET4K                                                 36850000
.X8460   ANOP                                                           36860000
         FIX   '"STOP WHEN ANY" NEEDS TO BE HANDLED: I SUGGEST PASSING .36870000
               THE INFO FROM THE COMPILER AS FIRST INSTRUCTION'         36880000
E98TYPER   JOLERR 306,'STEP ',TASKLABL,' LM ',TASKNAME,' SSI ',   74365*36890000
               ENDSSI,' USER ABEND ',ENDRETB                       DASD 36900000
         B     E98CLRAB                                  CHG26028 76200 36910000
E98RET4K  DS    0H                                                      36920000
           XC TASKRETN(2),TASKRETN                                      36930000
* THE NEXT MVC WILL STOP MVS FROM RUNNING AFTER A ABEND            DASD 36940000
* THIS PROBLEM IS BEING WORKED ON AS OF 4/1/77                     DASD 36950000
* SORRY ABOUT THE "IF ERROR LOGIC"                                 DASD 36960000
*          MVC TASKRETN(4),=F'&RSVDRC'                             DASD 36970000
* THIS PROBLEM IS NOW FIXED IN THE MONTOR AS OF 7/10/77            DASD 36980000
           MVI TASKIND,C'1'                                             36990000
           JOLRETN RC=&RSVDRC                                           37000000
E98RETN0 DS    0H                                                       37010000
           MVI TASKIND,C'1'                                             37020000
           JOLRETN                                                      37030000
STOWBLK    DC  CL8'$$RETN'                                              37040000
STOWTTR    DC  XL3'00'                                                  37050000
STOWC      DC  X'00'                                                    37060000
           DS CL50                                                      37070000
ENDSSI     DS 0CL8                                                      37080000
ENDMSSI    DS  CL8                                                      37090000
ENDRETB    DS 0CL5            FOR MINUS RETURN CODES               DASD 37100000
ENDRETC    DS 0CL8                                                      37110000
ENDMRETC   DS CL8                                                       37120000
           DS H                                                         37130000
           DC   80S(*)                                                  37140000
           LTORG                                                        37150000
           TITLE 'UJS23ER:WTP,WTO ERROR MESSAGES'                       37160000
UJS23ER    CSECT                                                        37170000
           USING *,R15                                                  37180000
           STM R14,R12,12(R13)                                          37190000
           LA  R0,SAVEAREA                                              37200000
           ST  R0,8(R13)                                                37210000
           ST  R13,SAVEAREA+4                                           37220000
           BAL R13,STARTERR                                             37230000
SAVEAREA   DS  18F                                                      37240000
STARTERR   DS    0H                                                     37250000
           DROP R15                                                     37260000
           USING SAVEAREA,R13                                           37270000
* R14 IS THE RETURN ADDRESS BUT IT ALSO POINTS TO A LIST OF INSTRUCTION 37280000
*    S WHICH ARE TO BE EXECUTED                                         37290000
* THEY CAN BE :-                                                        37300000
*    MVC   CONSTANT                                                     37310000
*    LA    VARYING STRING                                               37320000
           CLEAR S23MSSG       CLEAR MESSAGE AREA                       37330000
* NEW, END DEC 1974. IF AN ERROR MESSAGE IS BEING ISSUED, THEN OFFSET   37340000
*    THE MESSAGE AND PUT '***' IN IT.                                   37350000
           LA  R1,S23MSSG                                         74365 37360000
         CLC   =C'DISPLAY ',ICOMMAND                     CHG30062 76200 37370000
         BE    S23OFF10                                  CHG30062 76200 37380000
         CLC   =C'TYPE ',ICOMMAND                        CHG30062 76200 37390000
         BE    S23OFF10                                  CHG30062 76200 37400000
         CLC   =C'RETURN ',ICOMMAND                      CHG30062 76200 37410000
         BE    S23OFF10       PUT 10 BLANKS IN START     CHG30062 76200 37420000
         B     S23TSEV                                   CHG30062 76200 37430000
S23OFF10 MVC   0(10,R1),BLANKS OFFSET MESSAGE BY 10      CHG30062 76200 37440000
         LA    R1,10(R1)      SKIP BLANKS                CHG30062 76200 37450000
         B     S23START       GO FORM UP MESSAGE         CHG30062 76200 37460000
S23TSEV  CLI   S23SEV,2                                  CHG30062 76200 37470000
         BNL   S23REALE       REAL ERROR, PUT JOB NAME   CHG30062 76200 37480000
         MVC   0(5,R1),BLANKS                            CHG30062 76200 37490000
         LA    R1,5(R1)                                  CHG30062 76200 37500000
         B     S23START                                  CHG30062 76200 37510000
S23REALE MVC   0(4,R1),=C'***('  PUT '***('              CHG30062 76200 37520000
&C       SETC  (&X8)'JBNAME'.(1-&X8)'JCTJNAME'                          37530003
         MVC   4(8,R1),&C        + JOBNAME               CHG30062 76200 37540000
         MVI   12(R1),C')'       + ')'                   CHG30062 76200 37550000
         LA    R1,13(R1)         SKIP ABOVE              CHG30062 76200 37560000
S23START   MVC 0(3,R1),=C'JOL' SHIFT IN 'JOL'                     74365 37570000
           LA  R1,3(R1)        SKIP OVER IT SO WE WON'T OVER-WRITE IT   37580000
S23LUP1  DS    0H                                                       37590000
           CLI 0(R14),X'D2'    MOVE ?                                   37600000
           BE  S23MUV1                                                  37610000
           CLI 0(R14),X'41'    LA ?                                     37620000
           BE  S23LA1                                                   37630000
           B   S23END1         SHOULD BE '00'                           37640000
           SPACE                                                        37650000
S23MUV1    EX  R0,0(R14)        EXECUTE THE MOVE                        37660000
           SR  R0,R0                                                    37670000
           IC  R0,1(R14)       LENGTH MOVED                             37680000
           AR  R1,R0           ADD TO OUTPUT POSN                       37690000
           LA  R1,1(R1)        COS ASSMBLR REMOVED 1                    37700000
           LA  R14,6(R14)      SKIP MVC                                 37710000
           B   S23LUP1                                                  37720000
           SPACE                                                        37730000
S23LA1   DS    0H                                                       37740000
           EX  0,0(R14)        EXECUTE THE LA R15,VARYING STRING        37750000
           ST  R14,0(R13)      SAVE REGISTER 14 IN SAVE AREA            37760000
           LH  R14,0(R15)      LOAD LENGTH OF THE STRING                37770000
           LTR  R14,R14        SEE IF STRING LENGTH = 0                 37780000
           BZ  RESET14         NO DATA TO MOVE                          37790000
           BCTR R14,0                                                   37800000
           EX  R14,ERRMUV                                               37810000
           LA  R1,1(R14,R1)    STEP 1 SO NEXT MOVE GOES ONTO RIGHT      37820000
*                              SPOT IN BUFFER                           37830000
RESET14  DS    0H                                                       37840000
           L   R14,0(R13)      RELOAD R14                               37850000
           LA  R14,4(R14)      STEP OVER THE LA                         37860000
           B   S23LUP1                                                  37870000
* OOPS   WTO   'JOLE00-99 CANNOT ALLOCATE ERROR AREA'                   37880000
*        ABEND 16,DUMP,STEP                                             37890000
ERRMUV   MVC   0(*-*,R1),2(R15) **** EXECUTED                           37900000
         SPACE                                                          37910000
S23END1  DS    0H                                                       37920000
         LA    R14,2(R14)      BRANCH AROUND '0' AT END OF LIST         37930000
         L     R15,4(R13)       LOAD OLD SAVE ADDRESS                   37940000
         ST    R14,12(R15)     RESET OLD RETURN ADDRESS                 37950000
         MVC   0(3,R1),=C' AT'  SHIFT IN 'AT'                           37960000
         MVC   4(4,R1),S23STMT                                    75003 37970000
         OC    S23STMT,S23STMT                                          37980000
         BNZ   S23SETL                                                  37990000
         MVC   4(4,R1),STMT                                       75003 38000000
*        OC    4(4,R1),=C'0000' JCS NOTICED BINARY ZEROES IN THERE      38010000
S23SETL  LA    R14,S23MSSG-12 THE -8 IS FOR THE 'AT STMT'         75128 38020000
S23TEST0 CLI   4(R1),C'0'     LEADING ZERO?                       75003 38030000
         BNH   S23SR          -> NO                               75003 38040000
         MVC   4(4,R1),5(R1)  DROP ZERO                           75003 38050000
         BCT   R1,S23TEST0                                        75003 38060000
S23SR    DS    0H                                                 75003 38070000
         SR    R1,R14                                                   38080000
         XC    #S23LNE2,#S23LNE2   CLEAR LENGTH                   76200 38090000
         CH    R1,#S23MAX          CHECK FOR A BIG MESSAGE        76200 38100000
         BNH   S23SHORT            ITS OK, KEEP GOING             76200 38110000
* NOW WE HAVE A MESSAGE THATS GREATER THAN 96 BYTES AND IF        76200 38120000
* WE DONT MAKE TWO LINES OUT OF IT, THE OS WRITER OR HASP...ECT   76200 38130000
* WILL CHOP IT OFF                                                76200 38140000
* SO WE ARE NOW GOING TO TAKE A LOOK AT THE MESSAGE FORM +96 BACK       38150000
* AND WHEN WE FIND A COMMA OR A BLANK THAT WILL END LINE 1 AND          38160000
* START LINE 2                                                          38170000
         STH   R1,#S23LNE2         SAVE OLD LENGTH FOR LATER      76200 38180000
         LA    R15,S23MSSG         POINT TO THE START OF THE MSG  76200 38190000
         AH    R15,#S23MAX         GET TO +96                     76200 38200000
         LA    R1,30               STOP LOOKING AFTER 30 BYTES    76200 38210000
S23LOOK  DS    0H                                                 76200 38220000
         CLI   0(R15),C' '         IS IT A BLANK                  76200 38230000
         BE    S23ENDLK                                           76200 38240000
         CLI   0(R15),C','         HOW ABOUT A COMMA              76200 38250000
         BE    S23ENDLK                                           76200 38260000
         BCTR  R15,0               BACKUP,1 BYTE                  76200 38270000
         BCT   R1,S23LOOK          RETURN                         76200 38280000
S23ENDLK DS    0H                                                 76200 38290000
         LR    R1,R15              R1 = NEW END FOR LINE 1        76200 38300000
         LA    R14,#S23LREC   POINT TO START OF MESSAGE           76200 38310000
         SR    R1,R14              CALC NEW LENGTH FOR LINE 1     76200 38320000
         AH    R14,#S23LNE2        POINT R14 TO END OF MESSAGE    76200 38330000
         SR    R14,R15             CALC LENGTH FOR LINE 2         76200 38340000
         LA    R14,19(R14) LEAVE SOME BLANKS ON CONT LINE         76200 38350000
         STH   R14,#S23LNE2        SAVE IT FOR LATER              76200 38360000
         CLEAR S23LNE2                                            76200 38370000
         MVC   S23LNE2+15(L'S23LNE2-16),1(R15)      SAVE LINE 2   76200 38380000
S23SHORT DS    0H                                                 76200 38390000
         XC    #S23BLKS(8),#S23BLKS CLEAR VB DESCRIPTOR ETC       76200 38400000
           STH R1,#S23LREC                                              38410000
           LA  R1,4(R1)                                                 38420000
           STH R1,#S23BLKS                                              38430000
           XC S23STMT,S23STMT                                           38440000
* GREAT,NOW WHERE ARE WE GOING TO PUT THIS FANTASTIC PIECE OF           38450000
*    INFORMATION ?                                                      38460000
           TM  PRINT+48,X'10'                                           38470000
           BZ  S23WTO                                                   38480000
           WRITE S23DECB,SF,PRINT,#S23BLKS                              38490000
           CHECK S23DECB                                                38500000
S23WTO   DS    0H                                                       38510000
* NOW IF THE SEVERITY IS >=12 THE MESSAGE IS TYPED ON THE CONSOLE,      38520000
*    OTHERWISE A WTO WITH ROUTCDE=11 IS QUITE SATISFACTORY,UNLESS       38530000
*    WE HAVE A PRINT DD CARD,IF WHICH CASE WE CAN RETURN NOW            38540000
           CLI S23SEV,3                                                 38550000
           BL  S23TPRNT                                                 38560000
* HERE A REAL WTO IS REQUIRED,SO SET UP ROUTE-CODES 2 & 11              38570000
           MVC #S23MSSG,=XL2'8000'                                      38580000
           LH  R15,#S23LREC                                             38590000
           LA  R15,#S23LREC(R15)                                        38600000
           MVC 0(4,R15),=X'04004020' DESC 6 RTE 11,2              75311 38610000
           CLI  VS,C'2'    MVS ?                                   DASD 38620000
           BNE  S23TNMVS   NOPE                                    DASD 38630000
           MVC 0(4,R15),=X'04004004' DESC 6 RTE 2,14 JESMSG        DASD 38640000
S23TNMVS DS    0H                                                  DASD 38650000
         WTO   MF=(E,#S23LREC)                                          38660000
           B  S23GOBAK                                                  38670000
           SPACE 3                                                      38680000
S23TPRNT DS    0H                                                 75311 38690000
         TM    PRINT+48,X'10' DID WE PUT MESSAGE ON PRINTER FIX-X 76200 38700000
         BO    S23GOBAK       YES, DON'T FILL WTP ON JCL LOGFIX-X 76200 38710000
* SET UP A WTO WITH ROUTCDE=11                                          38720000
           MVC #S23MSSG,=XL2'8000'                                      38730000
           LH  R15,#S23LREC                                             38740000
           LA  R15,#S23LREC(R15)                                        38750000
           MVC 0(4,R15),=X'00000020' ROUTCODE   11                75128 38760000
           CLI  VS,C'2'   MVS ??                                   DASD 38770000
           BNE  S23NMVS   NOPE                                     DASD 38780000
           MVC 0(4,R15),=X'00000004' ROUTCODE 14 FOR JESMSG        DASD 38790000
S23NMVS  DS    0H                                                  DASD 38800000
*          LA  R1,#S23LREC                                              38810000
         WTO   MF=(E,#S23LREC)                                          38820000
S23GOBAK DS    0H                                                       38830000
         CLC   #S23LNE2,=X'0000'   DO WE HAVE A SECOND LINE       76200 38840000
         BE    S23GOBK2            NOPE                           76200 38850000
         LH    R1,#S23LNE2         LOAD LENGTH OF LINE2           76200 38860000
         XC    #S23LNE2,#S23LNE2   CLEAR                          76200 38870000
         MVC   S23MSSG,S23LNE2     OVERLAY OLD WITH NEW           76200 38880000
        CLI  S23LNE2,C' '  CHECK FOR BLANK SECOND LINE             DASD 38890000
        BNE  S23SHORT                                              DASD 38900000
        LR   R15,R1        LOAD LENGTH OF MESSAGE                  DASD 38910000
        BCTR R15,0         SUBTRACT 1 FOR EXECUTE INST             DASD 38920000
        EX   R15,S23CLCBL                                          DASD 38930000
        BE   S23GOBK2      ITS BLANK  LETS NOT PRINT IT            DASD 38940000
         B     S23SHORT            RETURN AND WRITE LINE2         76200 38950000
S23CLCBL CLC  S23LNE2+1(*-*),S23LNE2                              DASD  38960000
S23GOBK2 DS    0H                                                 76200 38970000
         CLI S23SEV,5           JOL TERMINAL ERROR ?                    38980000
         BNE  S23LMRET                                                  38990000
         AIF   (&X8).X8480                                              39000000
         JOLCLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ),MF=(E,CALLAREA)         39010000
         AGO   .NX8480                                                  39020000
.X8480   ANOP                                                           39030000
         JOLCLOSE (INSTRUCT,,PRINT,,RETN),MF=(E,CALLAREA)               39040000
.NX8480  ANOP                                                           39050000
         ABEND 1,DUMP,STEP                                              39060000
S23LMRET DS    0H                                                       39070000
         JOLRETN                                                        39080000
         LTORG                                                          39090000
         DC   80S(*)                                                    39100000
         AIF   (&X8).X8500                                              39110000
         TITLE 'UJEISPDQ:KEEP EXTRA PDQ ISAM ENTRYS'               DASD 39120000
* THIS LITTLE CSECT WILL KEEP THE 2ND AND 3RD ENTRIES       *      DASD 39130000
* WHICH ARE IN THE PDQ FROM A ISAM DATASET                  *      DASD 39140000
*                                                           *      DASD 39150000
* NOW ALL A J.O.L. PROGRAMMER HAS TO DO IS SAY              *      DASD 39160000
* CATLG ON ANY 1 OF THE 3 DCLS WHICH DEFINE                 *      DASD 39170000
* INDEX, PRIME OR OVFLOW                                    *      DASD 39180000
*                                                           *      DASD 39190000
* AND THE KEEP MODULE WILL CALL THIS GUY AND                *      DASD 39200000
* HE WILL SEARCH THE PDQ FOR MORE ENTRIES AND               *      DASD 39210000
* HANDLE THEM THE SAME WAY                                  *      DASD 39220000
*                                                           *      DASD 39230000
* ALSO THE JFCB VOL COUNT WILL BE UPDATED TO A MAX OF 3     *      DASD 39240000
* SO WHEN THE CATALOGUE MODULE GETS CONTROL THE VOL COUNT   *      DASD 39250000
* AND VOLUMES ARE IN GOOD SHAPE                             *      DASD 39260000
*                                                           *      DASD 39270000
*                                                           *      DASD 39280000
* SO CLEM IF YOUR READING THESE COMMENTS ALL I DID          *      DASD 39290000
* WAS COPY YOUR WORK IN THE UJE81PDQ MODULE                 *      DASD 39300000
* AND ADDED A FEW THINGS HERE AND THERE                     *      DASD 39310000
*                                                           *      DASD 39320000
* J.O.L. IS NOW BETTER THAN JCL WHEN IT COMES TO ISAM       *      DASD 39330000
*                                                           *      DASD 39340000
         JOLSAVE CSECT=UJEISPDQ                                    DASD 39350000
* THIS CSECT MUST FIND THE PDQ ENTRY THAT REFERS TO THE DSNAME     DASD 39360000
*    IN THE DSNAME FIELD. A 4 IS RETURNED IF IT CAN'T              DASD 39370000
*                                                                  DASD 39380000
******                                                             DASD 39390000
* CHECK IF JCTPDIP = 0 (MAY BE IF RUNNING UNDER                    DASD 39400000
*                       TSO).                                      DASD 39410000
******                                                             DASD 39420000
         SPACE 1                                                   DASD 39430000
         CLC   JCTPDIP,=F'0'                                       DASD 39440000
         BE    EISRTN                                              DASD 39450000
         MVI   EISDSN,0      SET DSN SERCH ARG TO ZERO             DASD 39460000
         MVI   ISINPDQ,2     SET SERCH NO. TO 2                    DASD 39470000
         CLI   VS,C'2'       MVS                                   DASD 39480000
         BNE   EISGO         NO START LOOKING FOR SECOND CONCAT    DASD 39490000
         MVI   ISINPDQ,1     SET SERCH NO. TO 1                    DASD 39500000
*REMEMBER THAT THE KEEP GOT RID OF THE 1ST ENTRY ALREADY--MVS ONLY-DASD 39510000
EISGO    DS    0H                                                  DASD 39520000
         GETJOBQ PDQDECB2,JCTPDIP                                  DASD 39530000
         B     EISGOTRD                                            DASD 39540000
EISREAD1 GETJOBQ PDQDECB2,CALLAREA                                 DASD 39550000
EISGOTRD DS    0H                                                  DASD 39560000
         CLI   VS,C'2'   MVS?                                      DASD 39570000
         BNE   EISNMVS1                                            DASD 39580000
EISMVDS1 LA    R14,*+4       POINT TO MVS CLC AREA                 DASD 39590000
         CLC   DDDSNAME,PDIDSN1                                    DASD 39600000
         BE    EISPASS1                                            DASD 39610000
         CLC   DDDSNAME,PDIDSN2                                    DASD 39620000
         BE    EISPASS2                                            DASD 39630000
         CLC   DDDSNAME,PDIDSN3                                    DASD 39640000
         BE    EISPASS3                                            DASD 39650000
* NOT IN PDI, GET NEXT                                             DASD 39660000
         CLC   =AL3(0),PDINPDIP  IS THIS THE LAST BLOCK?           DASD 39670000
         BE    EISRTN    YES, NOT FOUND THEN                       DASD 39680000
         GETJOBQ  PDQDECB2,PDINPDIP                                DASD 39690000
         B     EISMVDS1                                            DASD 39700000
EISNMVS1 DS    0H                                                  DASD 39710000
         LA     R14,*+4         POINT TO NEXT CLC                  DASD 39720000
         CLC   DDDSNAME,PDQDSN1                                    DASD 39730000
         BE    EISPASS1                                            DASD 39740000
         CLC   DDDSNAME,PDQDSN2                                    DASD 39750000
         BE    EISPASS2                                            DASD 39760000
         CLC   DDDSNAME,PDQDSN3                                    DASD 39770000
         BE    EISPASS3                                            DASD 39780000
* NOT IN THAT BLOCK,GET THE NEXT                                   DASD 39790000
         CLC   =AL3(0),PDQNPDQ LAST BLOCK IN PDQ ?                 DASD 39800000
         BE    EISRTN        YES,THERE-FORE COULDN'T FIND DSET     DASD 39810000
         MVC   CALLAREA,PDQNPDQ                                    DASD 39820000
         MVI   CALLAREA+3,0                                        DASD 39830000
*                                                                  DASD 39840000
         B     EISREAD1                                            DASD 39850000
EISPASS1 MVC   PDQDSNNO,=H'0'                                      DASD 39860000
         B     EISPDQB                                             DASD 39870000
EISPASS2 MVC   PDQDSNNO,=H'1'                                      DASD 39880000
         B     EISPDQB                                             DASD 39890000
EISPASS3 MVC   PDQDSNNO,=H'2'                                      DASD 39900000
EISPDQB  DS    0H                                                  DASD 39910000
* THERE USED TO BE A NOTE FOR JOBQ HERE, NOT NEC NOW               DASD 39920000
         ST    R1,APDQDIR       AND SAVE IT                        DASD 39930000
         ST    R14,EISR14       SAVE RETURN POINTER                DASD 39940000
         SR    R1,R1            CLEAN UP R1                        DASD 39950000
         IC    R1,EISDSN        LOAD SEARCH ARG                    DASD 39960000
         LA    R1,1(R1)         UP IT BY 1                         DASD 39970000
         STC   R1,EISDSN        PUT THE BUGGER BACK                DASD 39980000
         CLC   EISDSN,ISINPDQ   DO WE HAVE A HIT                   DASD 39990000
         BE    EISGOOD          ...YEP                             DASD 40000000
EISTRYA  DS    0H                                                  DASD 40010000
         L     R14,EISR14       RELOAD R14 WITH GOOOOD STUFF       DASD 40020000
* NOW RETURN TO THE NEXT COMPARE INSTRUCTION  HOPEFULLY            DASD 40030000
         CLC   PDQDSNNO,=H'0'                                      DASD 40040000
         BE    10(R14)                                             DASD 40050000
         CLC   PDQDSNNO,=H'1'                                      DASD 40060000
         BE    20(R14)                                             DASD 40070000
*        CLC   PDQDSNNO,=H'2'                                      DASD 40080000
         B     30(R14)                                             DASD 40090000
EISGOOD  DS    0H                                                  DASD 40100000
         CLI   VS,C'2'     MVS                                     DASD 40110000
         BNE   EISNMVS2                                            DASD 40120000
* GET SIOT FOR MVS SYSTEMS                                         DASD 40130000
         LH    R1,PDQDSNNO                                         DASD 40140000
         MH    R1,=AL2(PDILEN)                                     DASD 40150000
         LA    R14,PDISIOT1(R1)   GET SIOT ADDRESS LOCN            DASD 40160000
         MVC   CALLAREA,0(R14)                                     DASD 40170000
         B     EISGETSI         GO GET THE SIOT                    DASD 40180000
EISNMVS2 DS    0H                                                  DASD 40190000
         MVC   CALLAREA,PDQABLK                                    DASD 40200000
         MVI   CALLAREA+3,0                                        DASD 40210000
         GETJOBQ PDQDECB,CALLAREA                                  DASD 40220000
* NOW GET THE SIOT AS WELL                                         DASD 40230000
         LH    R1,PDQDSNNO     DATA SET NUMBER                     DASD 40240000
         MH    R1,=AL2(PDQBLKLN) LENGTH OF BLOCK                   DASD 40250000
         LA    R1,PDQASIOT(R1)   ABSOLUTE ADDRESS                  DASD 40260000
         MVC   CALLAREA(3),0(R1) SIOT TTR                          DASD 40270000
         MVI   CALLAREA+3,0                                        DASD 40280000
EISGETSI DS    0H                                                  DASD 40290000
         GETJOBQ SIOTDECB,CALLAREA                                 DASD 40300000
EISINPDQ DS    0H                                                  DASD 40310000
* NOW JUST BECAUSE THE NAME APPEARS IN THE PDQ DOESN'T MEAN FOR    DASD 40320000
*    1 SECOND THAT IT HASN'T :-                                    DASD 40330000
*          1.  BEEN SCRATCHED                                      DASD 40340000
*          2.  BEEN ALREADY KEPT                                   DASD 40350000
         LH    R1,PDQDSNNO     1ST,2ND OR 3RD NAME IN PDQ ?        DASD 40360000
         CLI   VS,C'2'    IS IT AN MVS SYSTEM?                     DASD 40370000
         BNE   EISNMV3S  NO                                        DASD 40380000
* OK, MVS HAS DIFFERENT TYPE OF PASSED DATA SET Q                  DASD 40390000
         MH    R1,=AL2(PDILEN)                                     DASD 40400000
         LA    R14,PDITERM1(R1)                                    DASD 40410000
         B     EISNMVS3                                            DASD 40420000
EISNMV3S MH    R1,=AL2(PDQBLKLN)                                   DASD 40430000
         LA    R14,PDQTERM(R1)                                     DASD 40440000
EISNMVS3 DS    0H                                                  DASD 40450000
         TM    0(R14),X'C0'    OLD,DELETE ?                        DASD 40460000
         B     *+8             ****************                    DASD 40470000
         BO    EISAGN                                              DASD 40480000
         SPACE 3                                                   DASD 40490000
*** LAST BYTE OF JFCB TTR =0 IN SIOT                               DASD 40500000
         GETJOBQ JFCBDECB,SCTPJFCB  GET THE JFCB                   DASD 40510000
         CLI   JFCBVOLS,X'FF'  UNOPENED SCRATCH VOLUME ?           DASD 40520000
         BNE   EISNOTFF        GO WRITE BACK JFCB,SIOT             DASD 40530000
*          JOLERR 205,'DSID ''',DDDSID,''' DSNAME ''',#DSNAME,     DASD 40540000
*              ''' NOT KEPT:UNOPENED SCRATCH VOLUME'               DASD 40550000
         B     EISAGN                                              DASD 40560000
EISNOTFF DS    0H                                                  DASD 40570000
         NI    JFCBIND2,B'01111111' TELL OS AN OLD DATA SET        DASD 40580000
         OI    JFCBIND2,B'01000000'                                DASD 40590000
         PUTJOBQ JFCBDECB                                          DASD 40600000
         MVC   CALLAREA,SIOT                                       DASD 40610000
         MVI   CALLAREA+3,0                                        DASD 40620000
         GETJOBQ SIOTDECB,CALLAREA                                 DASD 40630000
         CLI   DDDISP+1,C'L'  LAST USE OF DATA SET ?               DASD 40640000
*                             IF WE CAN LET OS UNLOAD ?            DASD 40650000
         BNE   EISNLAST       NOT LAST USE                         DASD 40660000
* MARK SIOT AND LET IT THINK WE HAVE FINISHED WITH                 DASD 40670000
*  THE DATASET (WHICH WE HAVE, OF COURSE).                         DASD 40680000
         NI    SCTSDISP,X'FF'-SIOTRETN-S3400DSP-PRIVATE            DASD 40690000
         OI    SCTSDISP,8     TURN KEEP ON                         DASD 40700000
         OI    SCTSBYT2,SCTRECVD MARK RECIEVED                     DASD 40710000
         B     EISMAKOL       MAKE IT OLD, RE-WRITE SIOT           DASD 40720000
EISNLAST DS    0H                                                  DASD 40730000
         OI    SCTSDISP,B'00001000'   SIOT = KEEP                  DASD 40740000
EISMAKOL OI    SCTSBYT4,1     MARK OLD                             DASD 40750000
         PUTJOBQ SIOTDECB                                          DASD 40760000
         SPACE 3                                                   DASD 40770000
* NOW PUT THE VOLSERS INTO DDVOLUME    NO DUPS OFCOURCE            DASD 40780000
         SR    R14,R14        CLEAR REG14                          DASD 40790000
         IC    R14,JFCBNVOL   INSERT JFCB VOLUME COUNT             DASD 40800000
         LA    R1,JFCBVOLS    POINT TO JFCB VOLSERS                DASD 40810000
EISLOADV LA    R15,DDVOLUME   POINT TO JOL VOLSER AREA             DASD 40820000
         CLC   0(6,R15),0(R1) EQUAL VOLUMES ?                      DASD 40830000
         BE    EISNMOVE       YEP DONT BOTHER TO ADD IT            DASD 40840000
EISLUP   CLC   0(6,R15),BLANKS BUCKET EMPTY FOR NEW GUY ?          DASD 40850000
         BE    EISMOVE        YEP GO DO IT                         DASD 40860000
         LA    R15,6(R15)     BUMP TO NEXT ENTRY                   DASD 40870000
         C     R15,=A(DDVOLUME+30) HOPE WE DONT HAVE TO MANY       DASD 40880000
         BNH   EISLUP         NOPE                                 DASD 40890000
         B     EISCVOL        ERROR HERE BETTER TELL SOMEONE       DASD 40900000
EISMOVE  MVC   0(6,R15),0(R1) INSERT NEW VOLSER                    DASD 40910000
EISNMOVE LA    R1,6(R1)       UP TO NEXT JFCB VOLSER               DASD 40920000
         BCT   R14,EISLOADV   RETURN TO LOOK                       DASD 40930000
EISCVOL  LA    R15,DDVOLUME   POINT TO JOL VOLSER AREA AGAIN       DASD 40940000
         LA    R14,5          STOP AFTER FIVE                      DASD 40950000
         SR    R1,R1          CLEAR COUNTER                        DASD 40960000
EISJFVOL CLC   0(6,R15),BLANKS END OF VOLSER LIST ?                DASD 40970000
         BE    EISTJFCB       YES SIR                              DASD 40980000
         LA    R1,1(R1)       UP COUNTER                           DASD 40990000
         LA    R15,6(R15)     UP POINTER                           DASD 41000000
         BCT   R14,EISJFVOL    RETURN                              DASD 41010000
EISTJFCB STC   R1,JFCBNVOL    STORE NEW VOLCOUNT IN JFCB VOL COUNT DASD 41020000
EISDVOL  DS    0H                                                  DASD 41030000
         BAL   R14,E00FXVOL    SET UP VOLUME(S) IN #VOL            DASD 41040000
* NOW TO MARK THE PDQ                                              DASD 41050000
* TEST IF MVS, DIFFERENT...                                        DASD 41060000
         CLI   VS,C'2'   MVS?                                      DASD 41070000
         BNE   EISNMVS4  NOPE ->                                   DASD 41080000
* MVS SIOT CONTAINS THE UCB POINTER, MVT THE PDG DOES              DASD 41090000
         LH    R14,SCTUTYPE                                        DASD 41100000
         B     EISTUNIT                                            DASD 41110000
EISNMVS4 DS    0H                                                  DASD 41120000
         MVC   CALLAREA,PDQABLK                                    DASD 41130000
         MVI   CALLAREA+3,0                                        DASD 41140000
         GETJOBQ PDQDECB,CALLAREA                                  DASD 41150000
         LH    R1,PDQDSNNO                                         DASD 41160000
         MH    R1,=AL2(PDQBLKLN)                                   DASD 41170000
         L     R14,PDQUCBS(R1) GET UCB POINTER FOR DEVICE TYPE     DASD 41180000
         MVC   SCTUTYPE,16(R14) MOVE IN UCB DEVICE TYPE            DASD 41190000
EISTUNIT DS    0H                                                  DASD 41200000
EISDA    NI    SCTUTYPE+1,X'FF'-UCBRR TURN OFF 'SHARE'             DASD 41210000
EISNOTDU DS    0H                                                  DASD 41220000
         SPACE 2                                                   DASD 41230000
         CLI   VS,C'2'  MVS AGAIN?                                 DASD 41240000
         BNE   EISNMVS5                                            DASD 41250000
         LH    R1,PDQDSNNO                                         DASD 41260000
         MH    R1,=AL2(PDILEN)                                     DASD 41270000
         LA    R14,PDITERM1(R1)                                    DASD 41280000
         B     EISMARK9                                            DASD 41290000
EISNMVS5 DS    0H                                                  DASD 41300000
         LA    R14,PDQTERM(R1)                                     DASD 41310000
EISMARK9 DS    0H                                                  DASD 41320000
         NI    0(R14),X'0F'     TURN OFF TOP 4 BITS                DASD 41330000
         CLI   DDDISP+1,C'L'   LAST USE,IE OLD,KEEP ?              DASD 41340000
         BNE   EISPASS                                             DASD 41350000
         OI    0(R14),B'01000000' OLD,KEEP                         DASD 41360000
         NI    0(R14),B'11000000'  INDICATE RECIEVED               DASD 41370000
         B     EISMARKD                                            DASD 41380000
EISPASS  OI    0(R14),B'11100000' OLD,PASS                         DASD 41390000
EISMARKD DS    0H                                                  DASD 41400000
         CLI   VS,C'2'    MVS AGAIN?????                           DASD 41410000
         BNE   EISNMVS6                                            DASD 41420000
         SH    R14,=H'44'         BACKUP TO DSNAME                 DASD 41430000
         MVI   0(R14),C' '        WIPE OUT THE NAME IN PDQ         DASD 41440000
         PUTJOBQ  PDQDECB2                                         DASD 41450000
         B     EISRETN0                                            DASD 41460000
EISNMVS6 DS    0H                                                  DASD 41470000
         PUTJOBQ PDQDECB                                           DASD 41480000
         SPACE 3                                                   DASD 41490000
EISRETN0 DS    0H                                                  DASD 41500000
         CLI   ICOMMAND,C'K'   IS THIS A KEEP INSTRUCTION?         DASD 41510000
         BNE   EISAGN       NO,SO NO MESSAGE,JUST RETURN           DASD 41520000
         JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            * :41530000
               ''' KEPT ON VOL(S) ',#VOL                           DASD 41540000
EISAGN   CLI   VS,C'2'        MVS                                  DASD 41550000
         BE    EISAGNVS       YEP                                  DASD 41560000
         CLI   ISINPDQ,3        ARE WE ALL DONE HERE               DASD 41570000
         BE    EISRTN           .....YOU BETCHYA                   DASD 41580000
         MVI   ISINPDQ,3        SET SERCH TO DSN # 3               DASD 41590000
         B     EISTRYA        GO BACK TO GET EM                    DASD 41600000
EISAGNVS CLI   ISINPDQ,2        ARE WE ALL DONE HERE               DASD 41610000
         BE    EISRTN           .....YOU BETCHYA                   DASD 41620000
         MVI   ISINPDQ,2        SET SERCH TO DSN # 2               DASD 41630000
         B     EISTRYA        GO BACK TO GET EM                    DASD 41640000
EISRTN   MVI   ISINPDQ,C'1'     SET THIS GUY BACK TO A ONE         DASD 41650000
         JOLRETN RC=0                                              DASD 41660000
EISR14   DS    F                                                   DASD 41670000
EISDSN   DS    1C                                                  DASD 41680000
         LTORG                                                     DASD 41690000
.X8500   ANOP                                                           41700000
         AIF   (&X8).X8520                                              41710000
     TITLE 'UJEDEVNM:SEARCH DEVNAMET'                              DASD 41720000
          JOLSAVE CSECT=UJEDEVNM                                   DASD 41730000
*******************************************************************DASD 41740000
*  SEARCH THE SYSTEMS DEVICE NAME TABLE TO OBTAIN THE             *DASD 41750000
*  THE DEVICE TYPE NEEDED FOR A CAMLST FOR A SCRATCH              *DASD 41760000
*  OR  KEEP                                                       *DASD 41770000
*                                                                 *DASD 41780000
*  SEARCH ARGUMENT = DDUNIT IN INSTRUCT FILE                      *DASD 41790000
*  DEVNAMET FORMAT                                                *DASD 41800000
*  EACH ENTRY IS 12 BYTES                                         *DASD 41810000
*  BYTES 1-8 = UNIT NAME  ECT '3330-1' OR 'TAPE'                  *DASD 41820000
*  BYTES 9-12 = CODE    X'3070200D'                               *DASD 41830000
*                                                                 *DASD 41840000
*******************************************************************DASD 41850000
          LOAD EP=DEVNAMET   LOAD THE KNOW IT ALL                  DASD 41860000
          LTR  R1,R0         GET ADDRESS OF HIM                    DASD 41870000
          BZ   EDVDEAD       SORRY                                 DASD 41880000
          L    R15,0(R1)     LOAD NUMBER OF ENTRIES IN TABLE       DASD 41890000
          MH   R15,=H'12'    MULT BY TABLE ENTRRY SIZE             DASD 41900000
          LA   R1,4(R1)      ADD 4 TO START ADDRESS OF TABLE       DASD 41910000
          AR   R15,R1        CALC ENDD OF TABLE                    DASD 41920000
          LA   R14,12        INCREMENT                             DASD 41930000
          CLC  DDUNIT,0(R1)  HOPE ITS HERE                         DASD 41940000
          BE   EDVALIVE      GO DO THE SCRATCH NOW                 DASD 41950000
          BXLE R1,R14,*-10   ROUND ROBIN                           DASD 41960000
EDVDEAD   JOLRETN RC=4                                             DASD 41970000
EDVALIVE DS    0H                                                  DASD 41980000
          MVC  SCTUTYPE,8(R1) MOVE IN THE DEVICE TYPE              DASD 41990000
          JOLRETN RC=0                                             DASD 42000000
.X8520   ANOP                                                           42010000
         AIF   (NOT &X8).X8S4501                                        42020002
         COPY   UJS45AER                                                42030000
.X8S4501 ANOP                                                           42040002
       TITLE 'UJELOCAT:LOCATE CATALOGUED DATASETS'                 DASD 42050000
         JOLSAVE CSECT=UJELOCAT                                    DASD 42060000
*        AIF   (&X8).X8540                                              42070000
         L     R15,=V(E05VOLS)         LOAD CAMLIST ADDRESS        DASD 42080000
         USING VOLINFO,R15                                         DASD 42090000
         ST    R15,ELOLOCAT+12         POINT TO LOCATE AREA        DASD 42100000
         LA    R6,300(R15)             GO UP A FEW AND SAVE POINTERDASD 42110000
         MVC   0(44,R6),DSNAME         MOVE TO LOCATE AREA         DASD 42120000
         MVC   DSNAME,0(R6)            MOVE DSNAME IN              DASD 42130000
         LOCATE ELOLOCAT                                           DASD 42140000
         LTR   R15,R15                 DID LOACTE FIND ANYTHING ?? DASD 42150000
         BNZ   ELORETN4                NOPE                        DASD 42160000
         JOLRETN RC=0  WE FOUND OUR STIFF LETS LEAVE               DASD 42170000
ELORETN4 DS    0H                                                  DASD 42180000
         MVC  DSNAME,0(R6)            MOVE BACK ORGINAL DATA SET NADASD 42190000
         B    RETN4                   TELL THE CALLER WE FAILED    DASD 42200000
ELOLOCAT CAMLST NAME,DSNAME,,0                                     DASD 42210000
.X8540   ANOP                                                           42220000
*        B    RETN4                                                     42230000
         DC C'COMPILE DATE=&SYSDATE.,TIME=&SYSTIME.'               DASD 42240000
         LTORG                                                     DASD 42250000
         DS    0D                                                       42260000
         PRINT GEN,NODATA                                               42270000
         AIF  (NOT &X8).NOX8MAC                                         42280000
         TITLE 'FIXED LOW CORE'                                         42290000
         XAMFLC  DSECT=YES                                              42300000
PSA      EQU   FLC                                                      42310000
PSATOLD  EQU   FLCTOLD            FOR MVS,F4 COMPATIBILITY              42320000
         TITLE 'COMMUNICATIONS VECTOR TABLE'                            42330000
         XAMCVT  DSECT=YES                                              42340000
         TITLE 'TASK CONTROL BLOCK    '                                 42350000
         XAMTCB  DSECT=YES                                              42360000
TCBFLGS1 EQU   TCBFLAG1       EQUIVALENT FIELDS ON F4,X8                42370000
         TITLE 'REQUEST BLOCK         '                                 42380000
         XAMRB   DSECT=YES                                              42390000
         TITLE 'FILE CONTROL TABLE    '                                 42400000
         XDDFCT                                                         42410000
         TITLE 'JOB-STEP CONTROL BLOCK'                                 42420000
         XDDJSCB                                                        42430000
JSCBLEN  EQU   *-JSCB         MY NAME FOR ITS LENGTH                    42440000
JSCBDISP EQU   0              MVS,F4 NAME FOR DISPLACEMENT TO START     42450000
JSCBOPTS EQU   JSCBSTS                                                  42460000
         TITLE 'COMMAND SCHEDULER CONTROL BLOCK'                        42470000
         XDDCSCB                                                        42480000
.NOX8MAC ANOP                                                           42490000
           END                                                          42500000
