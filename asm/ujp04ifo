* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1971,1972,1973,1974            00010000
* JOL COPYRIGHT CCS-JOL PTY LTD          1986                           00020000
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-C001.           00030000
           SPACE 3                                                      00040000
*                   J             000000            L                   00050000
*                   J            0      0           L                   00060000
*                   J           0        0          L                   00070000
*                   J          0          0         L                   00080000
*                   J         0            0        L                   00090000
*                   J         0            0        L                   00100000
*                   J         0            0        L                   00110000
*                   J         0            0        L                   00120000
*                   J         0            0        L                   00130000
*                   J         0            0        L                   00140000
*                   J         0            0        L                   00150000
*        J          J         0            0        L                   00160000
*         J        J           0          0         L                   00170000
*          J      J             0        0          L                   00180000
*           J    J               0      0           L                   00190000
*            JJJJ                 000000            LLLLLLLLLLL         00200000
           SPACE 3                                                      00210000
           JOLSAVE CSECT=UJP04IF                                        00220000
  TITLE 'UJP04IF:-PREPROCESSOR IF STATEMENT HANDLER'                    00230000
* THIS MODULE IS GIVEN CONTROL WHEN AN IF STATEMENT HAS BEEN FOUND      00240000
*    WHILE PERFORMING THE PREPROCESSOR FUNCTION.                        00250000
           SPACE 2                                                      00260000
* IT WILL HANDLE THE FOLLOWING TYPES OF STATMENT:-                      00270000
*    IF (%A=1 |%C ='A' | '%D'='D' | ERROR & A=0 | B^=10)                00280000
*       & X.RECFM='VB' THEN .....                                       00290000
           SPACE 2                                                      00300000
* ON ENTRY,R1 POINTS TO A PARAMETER LIST CONTAINING                     00310000
*    1. ADDRESS OF JOLCOM                                               00320000
*    2. ADDRESS OF TOKEN DESCRITOR DSECT                                00330000
           SPACE 2                                                      00340000
* THE RETURN CODES ARE                                                  00350000
*    0 IF THE STATEMENT WAS TRUE                                        00360000
*    4 IF THE STATEMENT WAS FALSE                                       00370000
*    8 IF THE STATEMENT WAS COMPLEX AND STILL HAS INFORMATION TO BE     00380000
*              TESTED,EG A RETURN CODE.THE STATEMENT IS THE PUSHED      00390000
*              OUT TO THE MAIN COMPILER PHASE TO BE DEALT WITH THERE.   00400000
*    12 NOT USED                                                        00410000
*    16 IF AN ERROR CONDITION AROSE                                     00420000
           USING JOLCOM,R2                                              00430000
           USING TKNX,R3                                                00440000
           SR  R1,R1                           COUNTER OF BRACKETS      00450000
           LH  R7,TKNNO                        NO. OF TKNS              00460000
           SLL R7,2                            * 4                      00470000
           LA R5,TKNDESC                       START ADDRESS FOR LOOP   00480000
*                                              LOOP.                    00490000
           LA  R15,0(R5,R7)                    STOP ADDR FOR LOOP       00500000
           LA  R14,4                           LENGTH OF DESCRIPTOR     00510000
*                                              FIELD                    00520000
P04BRAC1   LH  R4,2(R5)                        GET TOKEN OFFSET   74303 00530000
           LA  R4,TKNSTRG(R4)                  GET ADDRESS OF THE TOKEN 00540000
           CLI 0(R4),C'('                      RIGHT BRACKET ?          00550000
           BNE P04TLEFT                        NO,SEE IF ')'      74303 00560000
         A     R1,ONE         ADD 1 TO BRACKET COUNTER OF '('     75128 00570000
           B   P04BRAXL                         -> BXLE           74303 00580000
P04TLEFT   CLI 0(R4),C')'                       ')' ?             74303 00590000
           BNE P04BRAXL                        NO,DO BXLE         74303 00600000
         S     R1,ONE         -1 FOR ')'                          75128 00610000
P04BRAXL   BXLE R5,R14,P04BRAC1                CONTINUE CHECKING  74303 00620000
*                                              BRACKETS.                00630000
           LTR R1,R1                                                    00640000
           BZ  P04BRACS                        THERE WERE AN = NUM74303 00650000
*                                              OF LEFT AND RIGHT        00660000
*                                              BRACKETS OR SUBFIELDS    00670000
*                                              OR MAYBE NONE AT ALL     00680000
         BM    P04TOOMR                                           75128 00690000
         JOLERR 401,'TOO MANY ''('''                              75128 00700000
         JOLRETN RC=16                                            75128 00710000
P04TOOMR JOLERR 402,'TOO MANY '')'''                              75128 00720000
           JOLRETN RC=16                                          74303 00730000
           TITLE 'REPLACE SYMBOLIC PARAMETERS'                          00740000
P04BRACS   EQU *                                                  74303 00750000
* NOW WHAT I INTEND TO DO HERE IS TO COPY TO THE AREA 'WORK' THE TOKEN  00760000
*    STRING PRETTY WELL AS IS EXCEPT THAT ANY SYMBOLIC PARAMETER        00770000
*    IS GOING TO HAVE QUOTES DROPPED AROUND IT                          00780000
*    IF %A ='A' WILL THEN LOOK LIKE IF'%A'^ 'A'.THIS IS NECESSARY       00790000
* BECAUSE I DON'T WANT THE PROGRAMMER TO BE FORCED TO SAY IF '%A'='A'   00800000
*** NOTE THAT THIS DOES LIMIT THE IF STATMENT A LITTLE BECAUSE          00810000
*    BY RIGHT HE SHOULD BE ABLE TO SAY'IF %X' WHERE %X='X ^=0' BUT      00820000
*    THIS MINOR PROBLEM WILL BE FIXED UP IN A LATER RELEASE             00830000
           MVC #WORK,=H'2'                                              00840000
           LA  R1,WORK                                          80290   00850002
           USING  WORK,R1                                       80290   00860002
           CLEAR WORK                                                   00870000
           DROP R1                                                      00880002
           MVC TKNCURR,=H'2'                   START AT TKN(2) TO DROP  00890000
*                                              THE 'IF' WHICH IS NO     00900000
*                                              LONGER REQUIRED          00910000
           SPACE 2                                                      00920000
* NOW SET UP A FEW INITAL VALUES                                        00930000
           SR  R6,R6                           USED AS A TEMPORARY      00940000
*                                              HOLDING AREA FOR THE     00950000
*                                              PREVIOUS TKNTYPE SO      00960000
*                                              THAT WHEN CONCATENATING  00970000
*                                              I CAN CHECK THAT IF      00980000
*                                              EITHER TOKEN IS A SPECIA 00990000
*                                              L CHARACTER NO INTERVEN- 01000000
*                                              ING BLANKS ARE REQUIRED  01010000
           SR R6,R6                            SET INITIALLY TO SPECIAL 01020000
*                                              FOR THE ABOVE REASON.    01030000
           LA  R7,WORK                         R7 IS USED TO CONTAIN    01040000
*                                              THE ADDRESS OF THE       01050000
*                                              NEXT POSITION TO MOVE    01060000
*                                              A TOKEN TO IN WORK STRIN 01070000
*                                              -G                       01080000
           LA  R8,L'WORK(R7)                   R8 IS THE STOP ADDR      01090000
P04QELUP   CLC TKNCURR,TKNNO                   DONE THEM ALL?     74303 01100000
           BH  P04QUEND                        YEP,ADJUST #WORK OR74303 01110000
*                                              LENGTH OF WORK           01120000
           GETTKN LOCN=TKNCURR                                          01130000
           STH R1,TKNCURR                                               01140000
           CH  R6,=H'1'                        PREVIOUS TOKEN A SPECIAL 01150000
*                                              CHARACTER ?              01160000
           BE  P04SPEC1                                           74303 01170000
           CLI TKNTYPE,1                       IS THIS ONE A SPECIAL ?  01180000
           BE  P04SPEC1                                           74303 01190000
* WELL I THINK WE HAD BETTER MOVE A BLANK IN TO BE SAFE                 01200000
           MVI 0(R7),C' '                                               01210000
           LA  R7,1(R7)                                                 01220000
P04SPEC1   EQU *                                                  74303 01230000
           IC  R6,TKNTYPE                      SAVE THIS TOKENS TYPE    01240000
           CLI TKN,C'%'                        SYMBOLIC PARM ?          01250000
           BNE P04CONTK                        NO,SO MERELY ||    74303 01260000
*                                              IT INTO WORK AFTER TEST- 01270000
*                                              ING THAT IT WILL FIT OK  01280000
           MVI 0(R7),C''''                                              01290000
           LA  R7,1(R7)                                                 01300000
P04CONTK   LH  R14,#TKN                        LENGTH OF TKN      74303 01310000
           LA  R15,0(R7,R14)                   ADDR AREA NEXT + L'TKN   01320000
           CR  R15,R8                           WILL IT FIT             01330000
           BH  P04TOOB                         -NO,GIVE ERROR     74303 01340000
           BCTR R14,0                          -1 FOR MOVE              01350000
           EX  R14,P04MUV2                     MOVE OR ||         74303 01360000
*                                              #TKN TO #WORK            01370000
           LR  R7,R15                                                   01380000
           CLI TKN,C'%'                        SYMBOLIC PARM ?          01390000
           BNE P04QELUP                                           74303 01400000
* NOW WE MUST SEE IF THIS SYMBOLIC IS A %LIST,AND IF SO                 01410000
*     TAKE SPECIAL ACTION                                               01420000
           CLC =C'%LIST',TKN                                            01430000
           BE  P04LIST1                                           75311 01440000
           CLC =C'%CARD ',TKN                                     75311 01450000
           BNE P04NLIST                        NO,SHIFT IN QUOTE        01460000
P04LIST1   EQU *                                                  75311 01470000
           GETTKN TKNCURR                      GET THE '('              01480000
           CLI TKN,C'('                                                 01490000
           BNE P04NLIST                                                 01500000
           MVI 0(R7),C'('                                               01510000
***************************************************                     01520000
***** TAKING A CHANCE THAT STRING WONT GET TOO BIG                      01530000
***************************************************                     01540000
           LA R7,1(R7)                                                  01550000
           GETTKN (1)                                                   01560000
P04SIGNC   EQU *                                                  75311 01570000
           STH R1,TKNCURR                                               01580000
           LH R14,#TKN                                                  01590000
           LA  R15,0(R7,R14)                   ADDR AREA NEXT + L'TKN   01600000
           CR  R15,R8                           WILL IT FIT             01610000
           BH  P04TOOB                         -NO,GIVE ERROR     74303 01620000
           BCTR R14,0                          -1 FOR MOVE              01630000
           EX  R14,P04MUV2                     MOVE OR ||         74303 01640000
*                                              #TKN TO #WORK            01650000
           LR  R7,R15                                                   01660000
           GETTKN TKNCURR                                               01670000
            STH R1,TKNCURR                                              01680000
           CLI  TKN,C')'                                                01690000
           BE  P04ELIST        END OF LIST | CARD ITEM            75311 01700000
           CLI TKN,C'+'                                           75311 01710000
           BE  P04SIGN                                            75311 01720000
           CLI TKN,C'-'                                           75311 01730000
           BNE P04NLIST                                           75311 01740000
P04SIGN    MVC 0(1,R7),TKN                                        75311 01750000
           LA  R7,1(R7)                                           75311 01760000
           GETTKN (R1)                                            75311 01770000
           B   P04SIGNC                                           75311 01780000
P04ELIST   EQU *                                                  75311 01790000
           BNE P04NLIST                                                 01800000
           MVI 0(R7),C')'                                               01810000
           LA R7,1(R7)                                                  01820000
P04NLIST   EQU *                                                        01830000
           MVI 0(R7),C''''                                              01840000
           LA  R7,1(R7)                                                 01850000
           B   P04QELUP                                           74303 01860000
P04MUV2    MVC 0(*-*,R7),TKN                   *** EXECUTED ***   74303 01870000
           SPACE 3                                                      01880000
P04TOOB  JOLERR 403,'IF TOO LONG WHILE PUTTING '' '' ROUND SYMBOLICS'   01890000
           JOLRETN RC=16                                          74303 01900000
P04QUEND   LA  R8,WORK                                            74303 01910000
           SR R7,R8                                                     01920000
           STH R7,#WORK                                                 01930000
           MVC #TKNSTRG(256),#WORK                                      01940000
           MVC #TKNSTRG+256(256),#WORK+256                              01950000
           MVC #TKNSTRG+512(256),#WORK+512                              01960000
           MVC #TKNSTRG+768(232),#WORK+768                              01970000
          $CALL UJS20REP,(#TKNSTRG)                               74303 01980000
           LTR R15,R15                                                  01990000
           BZ  P04DOSYM                                           74303 02000000
         JOLERR 405,'ERROR AFTER REPLACING SYMBOLICS'                   02010000
           JOLRETN RC=16                                          74303 02020000
           TITLE 'PERFORM SYMBOLIC PARAMETER TESTS'                     02030000
P04DOSYM   EQU *                                                  74303 02040000
* NOW CALL THE TOKEN SPLITTER AGAIN AFTER MOVING #WORK BACK TO #TKNSTRG 02050000
           MVC #TKNSTRG(256),#WORK                                      02060000
           MVC #TKNSTRG+256(256),#WORK+256                              02070000
           MVC #TKNSTRG+512(256),#WORK+512                              02080000
           MVC #TKNSTRG+768(232),#WORK+768                              02090000
           FIX  'MAKE MOVE 3000 OR AS LONG AS STRING IS'                02100002
          $CALL UJSPLIT                                           74303 02110000
         LTR   R15,R15                                            76200 02120000
           BZ  P04DOREP                                           74303 02130000
         JOLERR 404,'ERROR AFTER REPLACING SYMBOLICS'                   02140000
           JOLRETN RC=16                                          74303 02150000
P04DOREP   EQU *                                                  74303 02160000
           XC #OP,#OP                                                   02170000
           CLEAR OP                                                     02180000
           MVC TKNCURR,=H'1'   SKIP THE 'IF'                            02190000
         LH    R4,TKNCURR                                         75128 02200000
           CLC TKNCURR,TKNNO   HAVE WE REACHED THE END OF THE STACK ?   02210000
           BH  P04ENDP1        YES,NOW GO TO THE EVALUATE ROUTINES.     02220000
           GETTKN LOCN=TKNCURR GET A TOKEN                              02230000
           STH R1,TKNCURR                                               02240000
P04MAINB EQU   *                                                  75128 02250000
         SR    R5,R5          SET ^ FUNCTION INDICATOR TO 0       86014 02260003
           CLI TKN,C'&&'       AND ?                                    02270000
         BE    P04OPEN        OPEN OF SUB-EXPRESSION              75128 02280000
           CLI TKN,C'|'                                                 02290000
         BE    P04OPEN        OPEN OF SUB-EXPRESSION              75128 02300000
           CLI TKN,C'('                                                 02310000
         BE    P04OPEN        OPEN OF SUB-EXPRESSION              75128 02320000
           CLI TKN,C')'                                                 02330000
         BNE   P04TIDNT       TEST IF IT IS AN IDENTIFIER THEN    75128 02340000
* HERE IT IS A ')'                                                75128 02350000
         BAL   R10,P04CONC    MOVE IT INTO THE WORK STRING        75128 02360000
         MVC   #WORK(4),#TKN  SAVE FOR ERROR MESSAGES             75128 02370000
P04MAINA SR    R5,R5          SET ^ FUNCTION INDICATOR TO 0       86014 02380002
         GETTKN TKNCURR       GET NEXT TOKEN                      75128 02390002
         STH   R1,TKNCURR                                         75128 02400000
* NOW AFTER A ')' WE CAN ONLY HAVE                                75128 02410000
*  1. ' ' END                                                     75128 02420000
*  2. '&' MORE                                                    75128 02430000
*  3. '|' MORE                                                    75128 02440000
*  4. ')' ANOTHER CLOSE                                           75128 02450000
         CLI   TKN,C' '       END OF 'IF'                         75128 02460000
         BE    P04ENDP1       YES                                 75128 02470000
         CLI   TKN,C'&&'      MORE ?                              75128 02480000
         BE    P04MAINB       YES                                 75128 02490000
         CLI   TKN,C'|'       MORE ?                              75128 02500000
         BE    P04MAINB       YES                                 75128 02510000
         CLI   TKN,C')'       ANOTHER CLOSE ?                     75128 02520000
         BE    P04MAINB       YES, OK TOO                         75128 02530000
P04ERR24 JOLERR 320,'AFTER ''',#WORK,''' ''',#TKN,''' IS INVALID' 75128 02540000
         B     P04MAINA       IGNORE AND CONTINUE                 75128 02550000
         SPACE 1                                                  75128 02560000
P04OPEN  EQU   *                                                  75128 02570000
P04MUV1    BAL R10,P04CONC   MOVE ()|& INTO STRING                      02580000
         MVC   #WORK(4),#TKN  SAVE FOR AN ERROR MESSAGE MAYBE     75128 02590000
         GETTKN TKNCURR       GET NEXT TOKEN                      75128 02600000
         STH   R1,TKNCURR                                         75128 02610000
* NOW AFTER A '(' | '|' | '&' WE CAN ONLY HAVE                    75128 02620000
*  1. '('                                                         75128 02630000
*  2. LITERAL                                                     75128 02640000
*  3. IDENTIFIER                                                  75128 02650000
*  4. NUMBER                                                      75128 02660000
*  5. FUNCTION START (EOF ONLY NOW)                               86009 02670000
*  6. ^ FUNCTION START (EOF ONLY NOW)                             86009 02680000
* ANYTHING ELSE IS INVALID                                        75128 02690000
           CLI   TKN,C'('       ANOTHER SUB-EXPRESSION START?     75128 02700000
         BE    P04MAINB       YES, OK                             75128 02710000
         CLI   TKN,C'^'       START OF NOT FUNCTION NAME ?        86009 02720003
         BE    P04MAINB       YES, OK                             86014 02730003
* NOW IF IT IS A BLANK, IT'S AN ERROR, AND IF IT IS A SPECIAL     75128 02740000
*  CHARACTER OTHER THAN '(' OR '^' IT IS ALSO AN ERROR, BUT       86009 02750000
*  ANYTHING ELSE IS ACCEPTABLE HERE                               86009 02760000
         CLI   TKN,C' '       ' '                                 75128 02770000
         BE    P04ERR24       YEP -> ERROR                        75128 02780000
         CLI   TKNTYPE,1      SPECIAL CHAR ?                      75128 02790000
         BE    P04ERR24       ERROR                               75128 02800000
P04TIDNT DS    0H                                                 86014 02810002
         CLI   TKN,C'^'       START OF NOT FUNCTION NAME ?        86009 02820002
         BNE   P04TIDXX       NO, TEST IF AN <IDENTIFIER>         86014 02830002
         LA    R5,1           SET THE NOT INDICATOR ON            86014 02840002
         MVC   #WORK(4),#TKN  SAVE FOR AN ERROR MESSAGE MAYBE     86014 02850002
         GETTKN TKNCURR       GET NEXT TOKEN                      86014 02860002
         STH   R1,TKNCURR                                         86014 02870002
* NOW AFTER A '^' WE CAN ONLY HAVE  THE FUNCTION 'EOF'            86014 02880002
         CLC   =C'EOF ',TKN    IS IT EOF?                         86009 02890002
         BNE   P04ERR24        ERROR FOR NOW                      86014 02900002
         GETTKN (R1)          GET NEXT TOKEN                      86014 02910002
         CLI   TKN,C'('        IF YES, ARRAY OR FUNCTION START    86009 02920002
         BNE   P04ERR24        ERROR FOR NOW                      86014 02930002
         B     P04EOF2         YES, DO FUNCTION PROCESSING        86009 02940002
P04TIDXX CLI   TKNTYPE,2       <IDENTIFIER> ?                           02950002
         BNE   P04NIDNT        NO                                       02960002
         LH    R4,TKNCURR                                         75128 02970002
             BCTR  R4,0        BACK OFF ONE TOKEN                 75128 02980000
           GETTKN LOCN=TKNCURR GET THE NEXT TOKEN                       02990000
* TEST FOR EOF FUNCTION NOW                                       86009 03000000
         CLI   TKNTYPE,1      SPECIAL CHAR ?                      86009 03010000
         BNE   P04NOP1         NO, CAN'T BE OPERATOR, BRANCH      86009 03020000
         CLI   TKN,C'('        IF YES, ARRAY OR FUNCTION START    86009 03030002
         BNE   P04TOP09        NO, TEST IF OPERATOR               86009 03040002
         GETTKN (R4)           GET PREVIOUS TOKEN, SEE IF EOF     86009 03050002
         CLC   =C'EOF ',TKN    IS IT EOF?                         86009 03060002
         BE    P04EOFFN        YES, DO FUNCTION PROCESSING        86009 03070002
         GETTKN LOCN=TKNCURR   GET THE OLD TOKEN WE HAD           86009 03080000
         B     P04NOP1         BRANCH TO NOT OPERATOR PROCESSING  86009 03090002
P04EOFFN DS    0H                                                 86009 03100002
* GET TO RIGHT TOKEN AGAIN                                        86009 03110002
         GETTKN LOCN=TKNCURR   GET THE OLD TOKEN WE HAD - '('     86009 03120000
P04EOF2  DS    0H                                                 86009 03130002
         GETTKN (R1)           GET THE NEXT ONE                   86009 03140000
         STH   R1,TKNCURR      SAVE OUR POSITION                  86009 03150002
         $CALL P18TEOF,(TKN)   TEST IF THAT FILE AT EOF           86009 03160002
         LR    R4,R15          SAVE RETURN CODE                   86009 03170002
         GETTKN TKNCURR        GET NEXT, SHOULD BE A BRACKET      86009 03180002
         STH   R1,TKNCURR      SAVE OUR POSITION                  86009 03190002
         CLI   TKN,C')'                                                 03200002
         BE    P04FNCOK        ALL OK                             86009 03210002
         JOLERR 321,'INVALID FUNCTION CALL'                       86009 03220002
         B     P04MAINB                                           86014 03230002
P04FNCOK DS    0H                                                 86009 03240002
         LTR   R5,R5           SEE IF NOT EOF CODED               86009 03250002
         BZ    P04EOFTR        NO, NORMAL PROCESSING              86014 03260002
         LTR   R4,R4           TEST RETURN CODE FROM FUNCTION     86014 03270002
         BZ    P04SYMT         IS TRUE, SET IT UP                 86014 03280002
         B     P04SYMF         NOT TRUE, SET UP FALSE             86014 03290002
P04EOFTR LTR   R4,R4           TEST RETURN CODE FROM FUNCTION     86009 03300002
         BZ    P04SYMF         NOT TRUE, SET UP FALSE             86009 03310002
         B     P04SYMT         IS TRUE, SET IT UP                 86009 03320002
P04TOP09 BAL   R10,P04TOP      TEST IF IT IS AN OPERATOR                03330000
           LTR  R15,R15                                                 03340000
           BNZ P04NOP1         NOT AN OPERATOR                          03350000
           STH R1,TKNCURR                                         74303 03360000
* HERE <IDENTIFIER> <OPERATOR>                                          03370000
           GETTKN REG=R1                                                03380000
           STH R1,TKNCURR                                               03390000
           CLI TKNTYPE,0       <NUMBER> ?                               03400000
           BE  P04RTOK1        RETURN CODE TEST OK 1                    03410000
           CLI TKNTYPE,2       <IDENTIFIER> ?                           03420000
           BE P04RTOK1                                                  03430000
* HERE IT IS INVALID BECAUSE HE SAID SOMETHING LIKE IF A^='B' WHICH     03440000
*    JUST ISN'T VALID.                                                  03450000
         JOLERR 306,'SYMBOL ''',#TKN,''' INVALID AFTER AN OPERATOR'     03460000
           MVC #TKN(4),=XL4'0002C640'  'F'                              03470000
           BAL R10,P04CONC                                              03480000
           B   P04MAINA        GET THE NEXT TOKEN ETC                   03490000
P04RTOK1    EQU *              <IDENTIFIER> <OPERATOR> <IDENTIFIER> OR  03500000
*                              <IDENTIFIER> <OPERATOR> <NUMBER>         03510000
*                              <NUMBER> <OPERATOR> <IDENTIFIER>         03520000
           STH R1,TKNCURR                                               03530000
           STH R4,TKN                                                   03540000
           MVI TKN,3                                                    03550000
           MVC #TKN,=H'2'                                               03560000
           BAL R10,P04CONC                                              03570000
           B  P04MAINA                                                  03580000
*END OF RETURN CODE TESTING AT PRESENT                                  03590000
P04NIDNT   EQU *                                                        03600000
* HERE FIRST TOKEN OF GROUP NOT ()|& OR <IDENTIFIER>                    03610000
           CLI TKNTYPE,0       <NUMBER> ?                               03620000
           BE  P04NUM1         CHECK IF <NUMBER> <OPERATOR> <IDENT>     03630000
*                            OR<NUMBER> <OPERATOR> <NUMBER>             03640000
           CLI TKNTYPE,3       <LITERAL> ?                              03650000
           BE P04SYM1                                                   03660000
         JOLERR 307,'SYMBOL ''',#TKN,''' IGNORED'                       03670000
           B   P04MAINA        BACK INTO THE LOOP                       03680000
            SPACE 3                                                     03690000
P04NOP1   EQU *                                                         03700000
           STH R4,TKN         <IDENT> NOT FOLLOWED BY <OPRTR>           03710000
           MVI TKN,1                                                    03720000
           BAL R10,P04CONC                                              03730000
           B  P04MAINA                                                  03740000
           SPACE 3                                                      03750000
P04NUM1    EQU *                                                        03760000
           MVC #WORK(L'TKN),#TKN                                        03770000
           GETTKN REG=R1                                                03780000
           STH R1,TKNCURR                                               03790000
           BAL R10,P04TOP      TEST IF <OPERATOR>                       03800000
           LTR R15,R15                                                  03810000
           BZ  P04TNUM2                                                 03820000
         JOLERR 408,'NUMBER ',#WORK,' NOT FOLLOWED BY AN OPERATOR BUT '*03830000
               ,OPERATOR                                                03840000
           B   P04MAINA        REJOIN THE MAIN LOOP                     03850000
           SPACE 3                                                      03860000
P04TNUM2   GETTKN REG=R1                                                03870000
           CLI TKNTYPE,0       <NUMBER> ?                               03880000
           BE  P04EVAL1        <NUMBER> <OPERATOR> <NUMBER> WE CAN      03890000
*                              PROCESS IN THIS MODULE                   03900000
           CLI TKNTYPE,2       <IDENTIFIER>                             03910000
           BE P04RTOK1         <IDENTIFIER> <OPERATOR> <IDENTIFIER>     03920000
         JOLERR 409,'SYMBOL ''',#TKN,''' INVALID AFTER AN OPERATOR'     03930000
           B P04MAINA                                                   03940000
P04SYM1    MVC #WORK(120),#TKN SAVE TKN COS WE WILL BE NEEDING IT       03950000
           GETTKN LOCN=TKNCURR GET THE OPERATOR HOPEFULLY               03960000
           BAL R10,P04TOP                                               03970000
           LTR R15,R15                                                  03980000
           BZ  P04SYMOP        IT IS AN OPERATOR                        03990000
* NOT AN OPERATOR HERE THOUGH                                           04000000
           CLI WORK+1,0        WAS IT AN IF %X AND IT WASN'T DECLARED   04010000
*                              AND THE REPLACE SYMBOLIC ROUTINE SET IT  04020000
*                              TO HEX 0??                               04030000
* IF IT WAS TRUE,IE THE SYMBOLIC PARM HAD A VALUE,THIS TEST WOULDN'T    04040000
* WORK UNLESS HE CODED HEX 0 IN HIS SYMBOLIC PARM ********************* 04050000
*********************************************************************** 04060000
           BE P04SYMF          FALSE                                    04070000
* HERE IT IS TRUE                                                       04080000
P04SYMT    EQU *                                                        04090000
TRUE       EQU *                                                        04100000
           MVC #TKN(4),=XL4'0002E340'          MOVE 'T' IN              04110000
           BAL R10,P04CONC                                              04120000
           B   P04MAINA                                                 04130000
P04SYMF    MVC #TKN(4),=XL4'0002C640'          MOVE 'F' IN              04140000
           BAL R10,P04CONC                                              04150000
           B  P04MAINA                                                  04160000
           SPACE 3                                                      04170000
P04EVAL1   STH R1,TKNCURR                                               04180000
           B   P04SYMTX        DO THE COMPARISONS,ETC             74303 04190000
P04SYMOP   EQU *               <SYMBOLIC PARM><OPERATOR>                04200000
           STH R1,TKNCURR                                               04210000
           GETTKN LOCN=TKNCURR   GET THE OTHER END OF THE COMPARE       04220000
           CLI TKNTYPE,0     <NUMBER> ?                                 04230000
           BE   P04EVAL1       YES GO AND STORE R1 AND DO THE EVALUATN  04240000
           CLI  TKNTYPE,3      <LITERAL> ?                              04250000
           BE   P04EVAL1       YES GO AND STORE R1 AND DO THE EVALUATN  04260000
           CLI TKNTYPE,2       <IDENTIFIER> ?                           04270000
           BE  P04INVID                                                 04280000
* HERE <SYMBOLIC> <OPERATOR> <?> SO MARK IT FALSE AND GIVE ERROR        04290000
           BCTR  R1,0          BACKTRACK 1 TOKEN SO THIS ONE CAN        04300000
*                              BE VETTED MORE FULLY                     04310000
           STH R1,TKNCURR                                               04320000
         JOLERR 410,'SYMBOL ''',#TKN,''' INVALID AFTER AN OPERATOR'     04330000
           JOLRETN RC=16                                          74303 04340000
P04INVID   STH  R1,TKNCURR                                              04350000
         JOLERR 118,'SYMBOL ''',#TKN,''' SHOULD BE IN QUOTES'           04360000
           TITLE 'PROCESS OPERATORS ETC'                                04370000
P04SYMTX   EQU *                                                  74303 04380000
*                                                                 74303 04390000
* NOW FIX UP THE OPERATORS,IE LOAD THE ADDRESS OF A BE OR BNH ETC TYPE  04400000
*    INSTRUCTION THAT IS TO BE EXECUTED AFTER THE COMPARE               04410000
           LA  R1,OPS                                                   04420000
           LA  R15,OPS+OPSLEN                                           04430000
           LA  R14,8                                                    04440000
P04TSTOP   CLC OPERATOR(2),0(R1)                                  74303 04450000
           BE  VALIDOP                                                  04460000
           BXLE R1,R14,P04TSTOP                                   74303 04470000
         JOLERR 411,'''',OPERATOR,''' IS AN INVALID OPERATOR'           04480000
           JOLRETN RC=16                                          74303 04490000
OPS        DS  0F                                                       04500000
           DC  CL4'= ',A(EQ)                                            04510000
           DC  CL4'^=',A(NE)                                            04520000
           DC  CL4'> ',A(GT)                                            04530000
           DC  CL4'< ',A(LT)                                            04540000
           DC  CL4'^>',A(NG)                                            04550000
           DC  CL4'^<',A(NL)                                            04560000
           DC  CL4'>=',A(GE)                                            04570000
           DC  CL4'<=',A(LE)                                            04580000
OPSLEN     EQU *-OPS                                                    04590000
EQ         BE  TRUE                                                     04600000
NE         BNE TRUE                                                     04610000
GT         BH  TRUE                                                     04620000
LT         BL  TRUE                                                     04630000
NG         BNH TRUE                                                     04640000
NL         BNL TRUE                                                     04650000
GE         BNL TRUE            SAME AS ^<                               04660000
LE         BNH TRUE            SAME AS ^>                               04670000
VALIDOP    L   R4,4(R1)        ADDRESS OF INSTRUCTION TO EXECUTE AFTER  04680000
*                              THE COMPARE                              04690000
           SPACE 2                                                      04700000
* NOW TEST IF WE ARE DEALING WITH A NUMBER OR NOT                       04710000
           CLI TKN,C''''       CHARACTER STRING ?                       04720000
           BE  P04CHCMP                                           74303 04730000
           CLI WORK,C''''                                               04740000
           BE  P04CHCMP                                           74303 04750000
           SR R10,R10                                                   04760000
           TNUM #WORK                          CONVERT TO NUMERIC ?     04770000
         LR    R10,R1         SAVE CONVERTED VALUE                75128 04780000
         LTR   R15,R15        DID IT CONVERT ?                    75128 04790000
         BNZ   P04CHCMP       NO, DO A CHARACTER COMPARISON       75128 04800000
           TNUM #TKN                                                    04810000
* NOW R10 CONTAINS THE CONVERTED '#WORK'                                04820000
*      AND R15 THE CONVERTED '#TKN'                                     04830000
           SPACE                                                        04840000
           LTR R15,R15                                                  04850000
         BNZ   P04CHCMP       DIDN'T CONVERT -> CHAR COMPARISON   75128 04860000
******************************************************                  04870000
* NOW WE HAVE TWO NUMBERS TO TEST                                       04880000
P04NUMCO   EQU *                                                  74303 04890000
         CR    R10,R1                                             75128 04900000
           EX R0,0(R4)         ****** BRANCH ON CONDITION TRUE          04910000
           B   P04SYMF         MARK IT FALSE IN THE #STRING             04920000
           SPACE 3                                                      04930000
         AGO   .NOP0401                                                 04940000
ONENOT     EQU *                                                        04950000
* TKN(I) WAS NOT A NUMBER SO NOW WE SHALL TRY TKN(I+2)                  04960000
           TNUM #TKN                                                    04970000
           LTR R15,R15                                                  04980000
           BM  P04CHCMP        NEITHER A NUMBER SO DO             74303 04990000
*                                              A CHARACTER STRING COMPR 05000000
TWONOT     EQU *                                                        05010000
           SR R15,R15                                                   05020000
           CLC WORK(L'BLANKS),BLANKS                                    05030000
           BE  P04NUMCO                                           74303 05040000
           MVC #TKN(L'TKN),#WORK                                        05050000
*          B   NUMERR                          T NUMERIC                05060000
NUMERR   JOLERR 415,'CANNOT CONVERT ''',#TKN,''' TO NUMERIC'            05070000
           B  P04SYMF                                                   05080000
.NOP0401 ANOP                                                           05090000
P04CHCMP   EQU *                                                  74303 05100000
* NOW WE COULD RIGHT JUSTIFY THE CHARACTER STRINGS                      05110000
***********BUT NOT NOW                                                  05120000
           CLI TKN,C''''                                                05130000
           BNE P04TKNOK                                                 05140000
           LH R1,#TKN                                                   05150000
           LA R15,TKN-1(R1)                                             05160000
           MVI 0(R15),C' '                                              05170000
           SH R1,=H'2'                                                  05180000
           STH R1,#TKN                                                  05190000
           MVC TKN(L'TKN-1),TKN+1                                       05200000
P04TKNOK   EQU   *                                                      05210000
           CLI WORK,C''''                                               05220000
           BNE P04WKOK                                                  05230000
           LH R1,#WORK                                                  05240000
           LA R15,WORK-1(R1)                                            05250000
           MVI 0(R15),C' '                                              05260000
           SH R1,=H'2'                                                  05270000
           STH R1,#WORK                                                 05280000
           MVC WORK(L'TKN-1),WORK+1                                     05290000
P04WKOK    EQU  *                                                       05300000
           CLC =X'0040',TKN    UNDEFINED SYM PARM?                      05310000
           BNE P04TKNNU        NU =NOT UNDEFINED                        05320000
           MVI TKN,C' '                                                 05330000
P04TKNNU   EQU  *                                                       05340000
           CLC =X'0040',WORK                                            05350000
           BNE P04WKNU                                                  05360000
           MVI WORK,C' '                                                05370000
P04WKNU    EQU  *                                                       05380000
           TNUM #WORK                                                   05390000
         LTR   R15,R15        DID IT CONVERT ?                    75128 05400000
         BNZ   P04CLC         NO -> CLC                           75128 05410000
         LR    R10,R1         YES, SAVE CONVERTED NUMBER          75128 05420000
           TNUM #TKN                                                    05430000
           LTR R15,R15                                                  05440000
         BZ    P04NUMCO       CR                                  75128 05450000
P04CLC    EQU  *                                                        05460000
           CLC WORK(100),TKN                                            05470000
           EX R0,0(R4)         ******* BRANCH ON CONDITION TRUE         05480000
           B   P04SYMF         MARK IT FALSE IN THE #STRING             05490000
*                                                                 74303 05500000
           SPACE 3                                                      05510000
P04TOP     EQU *                                                        05520000
*THIS LITTLE ROUTINE IS CALLED WHEN I SUSPECT A THING COULD BE AN       05530000
*    OPERATOR                                                           05540000
           MVC OPERATOR,TKN                                             05550000
           CLC TKN(2),=C'= '                                            05560000
           BE  P04ISOP                                                  05570000
           CLC TKN(2),=C'^='                                            05580000
           BE  P04ISOP                                                  05590000
           CLC TKN(2),=C'> '                                            05600000
           BE  P04ISOP                                                  05610000
           CLC TKN(2),=C'< '                                            05620000
           BE  P04ISOP                                                  05630000
           CLC TKN(2),=C'>='                                            05640000
           BE  P04ISOP                                                  05650000
           CLC TKN(2),=C'<='                                            05660000
           BE  P04ISOP                                                  05670000
           CLC TKN(2),=C'^<'                                            05680000
           BE  P04ISOP                                                  05690000
           CLC TKN(2),=C'^>'                                            05700000
           BE  P04ISOP                                                  05710000
           LA R15,4                                                     05720000
           BR R10                                                       05730000
P04ISOP    EQU *                                                        05740000
           SR  R15,R15                                                  05750000
           BR R10                                                       05760000
P04CONC    EQU *                                                        05770000
* CONCATENATE TWO BYTES FROM #TKN TO #STRING                            05780000
           LH  R15,#OP    CURRENT LENGTH                                05790000
           LR R14,R15                                                   05800000
           LA  R15,2(R15) +2 BYTES                                      05810000
           CH  R15,=AL2(L'OP) WILL IT BE TOO LONG ?                     05820000
           BH  P04IFCOM PLEX                                            05830000
           STH R15,#OP    NEW LENGTH STORED                             05840000
           LA R15,OP(R14) GET ABSOLUTE ADDRESS OF WHERE THESE TWO       05850000
*                                BYTES ARE GOING TO GO                  05860000
           MVC 0(2,R15),TKN    THEY ARE NOW IN                          05870000
           BR  R10             GO BACK TO WHERE I CAME FROM             05880000
P04IFCOM   EQU *                                                        05890000
         JOLERR 412,'IF TOO COMPLEX TO EVALUATE'                        05900000
           JOLRETN RC=16                                          74303 05910000
P04ENDP1   EQU *                                                        05920000
           TITLE 'SIMPLIFY IF AND ATTEMP TO DETERMINE IF TRUE OR FALSE' 05930000
* AT THIS STAGE WE HAVE REAL IDEA HOW COMPLEX THE IF STATEMENT IS       05940000
* DISREGARDING BRACKETS THOUGH IT CANNOT HAVE MORE THAN                 05950000
*    F|T TYPE INFORMATION                                               05960000
           SPACE 3                                                      05970000
* NOW THE STRING WE HAVE BUILT UP LOOKS SOMETHING LIKE THIS:-           05980000
*    (T|NO) & (F&T|NO)                                                  05990000
*    THE 'NO' FIELD IS A TWO BYTE FIELD CONTAINING THE TKN NUMBER.      06000000
*          THIS IS USED LATER TO PICK UP THE 3 TOKENS REQUIRED          06010000
*          TO RECONSTRUCT THE 'IF' STATEMENT SHOULD WE BE UNABLE        06020000
*          TO DETERMINE IF THE STATEMENT WAS TRUE OR FALSE              06030000
*          THE FIRST HAS VALUES 0,1,2,3 INDICATING THE NUMBER           06040000
*          OF TOKENS IN THAT SEGMENT,AND THE SECOND BYTE CONTAINS       06050000
*          THE TOKEN NUMBER.                                            06060000
* NOW THE BASIC IDEA OF THIS SECTION OF CODE IS TO REPLACE ANY          06070000
*    F & T WITH AN F(ETC) THEN REDUCE THE STRING SIZE UNTIL WE          06080000
*    FINALLY END UP WITH AN 'F','T' OR A NUMBER WHICH INDICATES         06090000
*    THAT THE'IF' HAS TO BE RE-BUILT AND SENT OF TO THE NEXT            06100000
*    MODULE                                                             06110000
           SPACE 3                                                      06120000
* NOW :-                                                                06130000
*          F & T = F                                                    06140000
*          F & F = F                                                    06150000
*          F & ? = F                                                    06160000
*                                                                       06170000
*          T & T = T                                                    06180000
*          T & F = F                                                    06190000
*          T & ? = ?                                                    06200000
*                                                                       06210000
*          ? & T = ?                                                    06220000
*          ? & F = F                                                    06230000
*          ? & ? = ? & ? UNTOUCHED                                      06240000
*                                                                       06250000
*          F | T = T                                                    06260000
*          F | F = F                                                    06270000
*          F | ? = ?                                                    06280000
*                                                                       06290000
*          T | T = T                                                    06300000
*          T | F = T                                                    06310000
*          T | ? = T                                                    06320000
*                                                                       06330000
*          ? | T = T                                                    06340000
*          ? | F = ?                                                    06350000
*          ? | ? = ? | ? UNTOUCHED                                      06360000
*                                                                       06370000
* AS AND'S USUALLY HAVE PRECEDENCE I'LL GO FOR THEM FIRST               06380000
* BRACKETED EXPRESSIONS CAN ALSO BE REDUCED AS ABOVE                    06390000
*    EG IF TRUCE | (X=0 | Y=0) CAN BE REDUCE TO'TRUE'                   06400000
*    OR IF FALSE | (X=0 | Y=0) CAN BE REDUCE TOIF X=0 | Y=0             06410000
* OK,I THINK WE SHALL START                                             06420000
REDUCL0    EQU  *                                                       06430000
           LA R1,OP                                                     06440000
           LH R15,#OP                                                   06450000
           LA R15,OP(R15)                                               06460000
           MVC 0(6,R15),BLANKS                                          06470000
           LA  R14,2                                                    06480000
           USING XDSECT,R1                                              06490000
REDUCL     CLC X(2),=C'    '   DON'T DO ANYTHING IF ANY                 06500000
           BE ENDREDCL         SYMBOLS ARE BLANK                        06510000
           CLC X+2(2),=C'  '                                            06520000
           BE ENDREDCL                                                  06530000
           CLC X+4(2),=C'  '                                            06540000
           BE ENDREDCL                                                  06550000
           CLC FANDT,X                         F & T =F                 06560000
           BE  MAKEF                                                    06570000
           CLC FANDF,X                         F & F =F                 06580000
           BE  MAKEF                                                    06590000
           CLC TANDT,X                         T & T =T                 06600000
           BE  MAKET                                                    06610000
           CLC TANDF,X                         T & F =F                 06620000
           BE MAKEF                                                     06630000
           CLC FORT,X                          F | T =T                 06640000
           BE  MAKET                                                    06650000
           CLC FORF,X                          F | F =F                 06660000
           BE  MAKEF                                                    06670000
           CLC TORT,X                          T | T =T                 06680000
           BE  MAKET                                                    06690000
           CLC TORF,X                          T | F =T                 06700000
           BE  MAKET                                                    06710000
* NOW DO THE F | ? TYPE ONES,PROVIDED THAT EITHER SIDE OF WHERE         06720000
*    WE ARE AT THE MOMENT DOESN'T CONTAIN A LEFT OR A RIGHT BRACKET     06730000
********* NOTE *** THE ONLY SYMBOLS THAT CAN BE IN THE STRING ARE:-     06740000
*    1. T                                                               06750000
*    2. F                                                               06760000
*    3. &                                                               06770000
*    4. |                                                               06780000
*    5. (                                                               06790000
*    6. )                                                               06800000
*    7. THE TWO BYTE INDICATORS (WHICH CANNOT BE CONFUSED WITH THE      06810000
*              ABOVE).                                                  06820000
           SPACE 3                                                      06830000
           CLI X,C'('                                                   06840000
           BE  TX4CLOSE                                                 06850000
*          CLI X,C')'                                                   06860000
*        BNE   TX4CLOSE       TEST IF X+4=')'                     75128 06870000
* HERE X HAS A ')' IN IT.                                         75128 06880000
* LETS SEE IF THE NEXT 4 BYTES ARE  |T,|F,&T OR &F AND GO TO      75128 06890000
*  'TESTFQ' IF SO                                                 75128 06900000
         CLI   X+2,C'|'       NEXT CHAR '|' ?                     75128 06910000
         BE    P04TX4FT       YES,NOW TEST 'F' | 'T'              75128 06920000
         CLI   X+2,C'&&'      NEXT CHAR '&' ?                     75128 06930000
         BNE   ENDREDCL       NOPE, IGNORE THIS                   75128 06940000
P04TX4FT CLI   X+4,C'F'       3RD BYTE 'F'                        75128 06950000
         BE    TESTFQ         YES, SO WE HAVE ') | F' OR ') & F'  75128 06960000
         CLI   X+4,C'T'       3RD BYTE 'T'                        75128 06970000
         BE    TESTFQ         YES, SO WE CAN REDUCE IT TOO        75128 06980000
           BE  ENDREDCL                                                 06990000
           CLI X+4,C')'                                                 07000000
           BE  ENDREDCL                                                 07010000
          CLI X+4,C'('                                                  07020000
         BNE   TESTFQ         NOPE -> GO TO TESTFQ                      07030000
* HERE X+4 ='('                                                         07040000
* LETS SEE IF WE HAVE T|(,T&(,F|( OR F&(                                07050000
         CLI   X,C'T'         1ST CHAR =T ?                             07060000
         BE    P04TX2OR       YES                                       07070000
         CLI   X,C'F'         1ST CHAR =F THEN ?                        07080000
         BNE   ENDREDCL       NOPE, CAN DO NOTHING                      07090000
P04TX2OR CLI   X+2,C'|'       T OR F AND | ?                            07100000
         BE    TESTFQ         YES                                       07110000
         CLI   X+2,C'&&'      T OR F AND & ?                            07120000
         BNE   ENDREDCL       NOPE CAN DO NOTHING                       07130000
           B   TESTFQ                                                   07140000
TX4CLOSE   CLI X+4,C')'                        (  ) SPECIAL CASE,       07150000
           BNE ENDREDCL                        WE CAN REDUCE IT         07160000
           MVI X,C' '                                                   07170000
           MVI X+4,C' '                                                 07180000
           B   ENDREDCL                                                 07190000
TESTFQ     CLC X(2),=C'  '     DON'T DO ANYTHING IF ANY                 07200000
           BE ENDREDCL         SYMBOLS ARE BLANK                        07210000
           CLC X+2(2),=C'  '                                            07220000
           BE ENDREDCL                                                  07230000
           CLC X+4(2),=C'  '                                            07240000
           BE ENDREDCL                                                  07250000
           CLC X(4),FANDF                                         74303 07260000
           BE  MAKEF                                                    07270000
           CLC X+2(4),FANDF+2                  ? & F                    07280000
           BE  MAKEF                                                    07290000
           CLC X(4),TANDT                      T & ?                    07300000
           BE  MAKEQ2                                                   07310000
           CLC X+2(4),TANDT+2                  ? & T                    07320000
           BE  MAKEQ1                                                   07330000
           CLC X(4),FORF                       F | ?                    07340000
           BE  MAKEQ2                                                   07350000
           CLC X(4),TORT                       T | ?                    07360000
           BE  MAKET                                                    07370000
           CLC X+2(4),TORT+2                   ? | T                    07380000
           BE  MAKET                                                    07390000
           CLC X+2(4),FORF+2                   ? | F                    07400000
           BE  MAKEQ1                                                   07410000
* WELL THAT ABOUT WRAPS UP THIS SET  OF TRIPLES                         07420000
ENDREDCL   BXLE R1,R14,REDUCL                                           07430000
* IF WE FELL OUT HERE WE HAVE BEEN ALONG THE STRING (OR DOWN THE STACK  07440000
*              IF YOU WANT TO THINK OF IT THAT WAY)                     07450000
           SPACE                                                        07460000
* NOW WE SHALL COMPRESS THE BLANK SPOTS OUT OF THE STRING               07470000
*    IF THE LENGTH DOESN'T CHANGE,THAT MEANS AS FAR AS WE ARE           07480000
*          CONCERNED WE CANNOT REDUCE THE STRING ANY MORE.              07490000
*    THE FIRST POSITION SHOULD CONTAIN A 'T' | 'F' OR ELSE WE           07500000
*    HAVE TO PUMP THE'IF' OUT TO BE EVALUTED AT RUN TIME.               07510000
           LA R1,OP                                                     07520000
           LA R14,2                                                     07530000
           LH R15,#OP                                                   07540000
           LA R15,OP(R15)                                               07550000
           LR  R12,R1                                                   07560000
REDUCL2    CLC X(2),=C'  '                                              07570000
           BNE REDCNOTB                                                 07580000
REDUCL3    BXLE R1,R14,REDUCL2                                          07590000
* END LOOP                                                              07600000
           LA R0,OP                                                     07610000
           LR R1,R12                                                    07620000
           SR  R1,R0                                                    07630000
           STH R1,#OP                                                   07640000
           LTR R1,R1                                                    07650000
           BM  P04ERR1                                                  07660000
           CLC #OP,=AL2(L'OP-4)                                         07670000
           BH P04ERR2                                                   07680000
           CR  R12,R15                                                  07690000
           BE EVALUATE                         NO REDUCTION             07700000
           B   REDUCL0                                                  07710000
REDCNOTB   MVC 0(2,R12),X                                               07720000
           LA  R12,2(R12)                                               07730000
           B   REDUCL3                                                  07740000
EVALUATE   EQU *                                                        07750000
* THE MOMENT OF TRUTH                                                   07760000
           CLC #OP,=H'2'                                                07770000
           BNE P04RETN8        BLAST,COULDN'T EVALUATE IT               07780000
           CLI OP,C'T'                                                  07790000
           BE  P04RETN0        GOOD                                     07800000
           CLI OP,C'F'                                                  07810000
           BNE P04RETN8                                                 07820000
           B   P04RETN4        GOOD                                     07830000
           DS  0H                                                       07840000
FANDT      DC  CL6'F && T '                                             07850000
FANDF      DC  CL6'F && F '                                             07860000
TANDT      DC  CL6'T && T '                                             07870000
TANDF      DC  CL6'T && F '                                             07880000
FORF       DC  CL6'F | F'                                               07890000
TORF       DC  CL6'T | F '                                              07900000
TORT       DC  CL6'T | T '                                              07910000
FORT       DC  CL6'F | T '                                              07920000
MAKET    BAL   R10,P04DRPEP                                       75128 07930000
         MVC   X,=CL6'T'                                          75128 07940000
           B   ENDREDCL                                                 07950000
MAKEF    BAL   R10,P04DRPEP                                       75128 07960000
         MVC   X,=CL6'F'                                          75128 07970000
           B   ENDREDCL                                                 07980000
MAKEQ1     MVC X+2(4),=CL4' '                                           07990000
           B   ENDREDCL                                                 08000000
MAKEQ2     MVC X(4),=CL4' '                                             08010000
           B   ENDREDCL                                                 08020000
         SPACE 1                                                        08030000
P04DRPEP EQU   *                                                        08040000
* WE HAVE TO SEE IF EITHER SIDE IS A BRACKETD EXP                       08050000
*  EG  T | (A7=0 & C=10)                                                08060000
*  IF SO, WE MUST BLANK OUT EVERYTHING INSIDE, AND INCLUDING,           08070000
*  THE BRACKETS                                                         08080000
         CLI   X,C')'                                             75128 08090000
         BE    P04DRPCL       DROP CLOSING SUB-EXPRESSION         75128 08100000
         CLI   X+4,C'('       OPEN EXPRESSION TO BE DELETED ?     75128 08110000
         BNE   0(R10)         NO,RETURN TO CALLER THEN            75128 08120000
* HERE WE HAVE TO DROP ANYTHING IN AN OPENING EXPRESSION          75128 08130000
         SPACE 1                                                  75128 08140000
         SR    R8,R8          COUNTER OF BRACKETS OUTSTANDING     75128 08150000
         LA    R7,X+4         POINT TO START                      75128 08160000
P04DOPN1 CLI   0(R7),C'('                                         75128 08170000
         BNE   P04DOPN2       TEST ')'                            75128 08180000
         LA    R8,1(R8)       ADD 1 TO '(' OUTSTANDING            75128 08190000
P04DOPN3 MVC   0(2,R7),BLANKS BLANK OUT THAT FIELD                75128 08200000
         BXLE  R7,R14,P04DOPN1 DO NEXT ITEM                       75128 08210000
         BR    R10            BACK TO CALLER                      75128 08220000
         SPACE 1                                                  75128 08230000
P04DOPN2 CLI   0(R7),C')'     CLOSE TO MATCH OPENS ?              75128 08240000
         BNE   P04DOPN3       NO,MUST BE SOMETHING INSIDE THE     75128 08250000
*                             SUB-EXPRESSION, JUST DELETE IT      75128 08260000
         S     R8,ONE         ')', -1 TO SEE IF WE HAVE ENDED     75128 08270000
         BP    P04DOPN3       NO, CLEAR OUT ')'                   75128 08280000
* HERE IS THE END                                                 75128 08290000
         MVI   0(R7),C' '     CLEAR ')'                           75128 08300000
         BR    R10            BACK TO CALLER NOW                  75128 08310000
         SPACE 3                                                  75128 08320000
P04DRPCL EQU   *                                                  75128 08330000
* HERE WE HAVE TO GO BACKWARDS DOWN THE STRING TO FIND THE        75128 08340000
* BEGINNING OF THE SUB-EXPRESSION JUST CLOSED BY THE ')'          75128 08350000
* 'X' -> ')'                                                      75128 08360000
* SO WHAT WE MUST DO IS LOOP ROUND, BLANKING OUT EVERYTHING       75128 08370000
*  UNTIL WE FIND THE '(' THAT CORRESPONDS TO THE ')'              75128 08380000
         SR    R8,R8          NUMBER OF '(' OUTSTANDING           75128 08390000
         LA    R7,X                                               75128 08400000
         LA    R9,OP          (SO WE CAN CHECK WHEN WE HAVE REACHE75128 08410000
*                             -D THE START OF THE STRING          75128 08420000
         SPACE 1                                                  75128 08430000
P04DCL1  CLI   0(R7),C')'     ')' ?                               75128 08440000
         BNE   P04DCL3        NOPE, TRY '('                       75128 08450000
         S     R8,ONE         -1                                  75128 08460000
P04DCL2  MVC   0(2,R7),BLANKS CLEAR IT OUT                        75128 08470000
         SR    R7,R14         -2                                  75128 08480000
         CR    R7,R9          REACHED START OF STRING MAYBE ?     75128 08490000
         BNL   P04DCL1        NO,SO CONTINUE TO LOOP              75128 08500000
         BR    R10            BACK TO CALLER, WE'VE FINISHED      75128 08510000
         SPACE 1                                                  75128 08520000
P04DCL3  CLI   0(R7),C'('     OPEN ?                              75128 08530000
         BNE   P04DCL2        NO, JUST SHIFT BLANKS IN            75128 08540000
         A     R8,ONE         ADD 1 TO BRACKET COUNTER            75128 08550000
         BNZ   P04DCL2        GOT MATCH YET ? NO, GO CLEAR,CONTINU75128 08560000
         MVI   0(R7),C' '     SHIFT A BLANK IN                    75128 08570000
         BR    R10            BACK TO CALLER                      75128 08580000
         SPACE 3                                                  75128 08590000
P04RETN0   JOLRETN                                                      08600000
P04RETN4   JOLRETN RC=4                                                 08610000
P04ERR1  JOLERR 513,'#OP -VE'                                           08620000
           JOLRETN RC=16                                          74303 08630000
P04ERR2  JOLERR 514,'#OP TOO BIG'                                       08640000
           JOLRETN RC=16                                          74303 08650000
P04RETN8   EQU *                                                        08660000
* NOW HERE WE WERE NOT ABLE TO DETERMINE IF THE IF WORKED OUT           08670000
*     TO BE TRUE OR FALSE                                               08680000
* WHAT WE HAVE TO DO NOW IS FORM UP THE TOKEN STRING AGAIN SO           08690000
*     THAT THE MODULE THAT CALLED US CAN OUTPUT IT (IF IT WANTS         08700000
*     TO) TO THE NEXT PHASE                                             08710000
      SPACE                                                             08720000
* SO WHAT WE HAVE TO DO OF COURSE IS SKIP DOWN THE STRING               08730000
*     CALLED'OP' AND OUTPUT BRACKETS,OPERATORS ETC UNTIL                08740000
*     WE FIND A TOKEN AND THEN GET IT AND CONCATENATE IT TO THE         08750000
*     WORK STRING AND FINALLY RESPLIT THE TOKENS.WOW WHAT A             08760000
*     SENTENCE.                                                         08770000
           DROP R1                                                      08780000
         MVC #WORK,=H'3'                                                08790000
           LA  R1,WORK                                          80290   08800000
           USING  WORK,R1                                       80290   08810000
           CLEAR WORK                                                   08820000
           DROP R1                                                      08830000
           MVC WORK(3),=C'IF '                                          08840000
           LA  R5,#OP+2                                                 08850000
           LR  R7,R5                                                    08860000
           AH  R7,#OP                                                   08870000
           LA  R6,2                                                     08880000
           SR  R7,R6           SO LOOP WON'T GO TO FAR                  08890000
           USING XDSECT,R5                                              08900000
* NOW STEP DOWN AND RECONSTRUCT THE TOKENS IN #WORK                     08910000
P04TRYXX   LA R1,=C'( ) | && = ^=> < >=<='                              08920000
           LA R15,18(R1)                                                08930000
           LA R14,2                                                     08940000
P04RECX1   CLC X(2),0(R1)                                               08950000
           BE  P04REC01                                                 08960000
           BXLE R1,R14,P04RECX1                                         08970000
* NOW HERE THIS IS SUPPOSEDLY A TOKEN DESCRIPTOR NUMBER                 08980000
*     AND WE ARE SUPPOSED TO GET THE TOKEN WHOSE NUMBER IS              08990000
*     REPRESENTED IN THE LOWER BYTE OF X,IN FACT GET THE                09000000
*     NUMBER REPRESENTED IN THE TOP BYTE.                               09010000
           CLI X,C'F'          ANY F'S LEFT,IE INVALID 'PARSE'          09020000
           BE  P04ERSYN                                                 09030000
           CLI X,C'T'          ANY T'S LEFT,IE INVALID 'PARSE'          09040000
           BE  P04ERSYN                                                 09050000
           SR R1,R1                                                     09060000
           IC R1,X+1      GET START TOKEN NUMBER                        09070000
           CH R1,=H'150'  IS IT >150                                    09080000
           BH P04ER419    ERROR                                         09090000
            SR R10,R10         NOW PICK UP NUMBER OF TOKENS             09100000
           IC R10,X            GOT IT                                   09110000
           CH R10,=H'4'        >4 (SHOULDN'T BE)                        09120000
           BH P04ER420    ERROR                                         09130000
           AR R10,R1           CALC STOP                                09140000
P04GETMR   EQU  *                                                       09150000
           GETTKN REG=R1  GET A TOKEN                                   09160000
           LH R14,#WORK   LENGTH OF WORK                                09170000
           LR R15,R14      SAVED                                        09180000
           LA R14,WORK(R14) ADDRESS TO MOVE TOKEN TOO                   09190000
           AH R15,#TKN    CALC NEW LENGTH OF TOKEN                      09200000
           CH R15,=AL2(L'WORK) TOO LONG ?                               09210000
           BH P04ER421    YES,ERROR                                     09220000
           STH R15,#WORK  NO,STORE NEW LENGTH                           09230000
           LH R15,#TKN    LOAD LENGTH OF TOKEN                          09240000
           BCTR R15,0     -1 FOR MOVE                                   09250000
           EX R15,P04MUV20 MOVE THE TOKEN IN.                           09260000
           CR R1,R10           SEE IF MORE                              09270000
           BE  P04CONTR        CONTINUE RECONSTRUCTION            74303 09280000
           B   P04GETMR                                                 09290000
           SPACE 3                                                      09300000
P04REC01   LH R1,#WORK                                                  09310000
           LA R1,2(R1)                                                  09320000
           STH R1,#WORK                                                 09330000
           LA  R1,WORK-2(R1)   ABSOLUTE ADDRESS-2(COS WE JUST ADDED)303 09340000
           MVC 0(2,R1),X                                                09350000
P04CONTR   BXLE R5,R6,P04TRYXX                                          09360000
P04END8  EQU   *                                                  75128 09370000
           LH R14,#WORK   LENGTH OF WORK                                09380000
           LR R15,R14      SAVED                                        09390000
           LA R14,WORK(R14) ADDRESS TO MOVE TOKEN TOO                   09400000
         LA    R15,6(R15)     (=L'=C' THEN '                      75128 09410000
           CH R15,=AL2(L'WORK) TOO LONG ?                               09420000
           BH P04ER421    YES,ERROR                                     09430000
           STH R15,#WORK  NO,STORE NEW LENGTH                           09440000
         MVC   0(6,R14),=C' THEN '                                75128 09450000
           MVC #TKNSTRG(256),#WORK                                      09460000
           MVC #TKNSTRG+256(256),#WORK+256                              09470000
           MVC #TKNSTRG+512(256),#WORK+512                              09480000
           MVC #TKNSTRG+768(232),#WORK+768                              09490000
           JOLRETN RC=8                                                 09500000
P04ER419 JOLERR 515,'> 150 TOKENS'                                      09510000
           JOLRETN RC=16                                                09520000
P04ER420 JOLERR 516,'> 3 TOKENS TO RE-CREATE'                           09530000
           JOLRETN RC=16                                                09540000
P04ER421 JOLERR 517,'RE-CREATED STRING TOO LONG'                        09550000
           JOLRETN RC=16                                                09560000
P04ERSYN   EQU   *                                                      09570000
         JOLERR 519,'INVALID PARSE ''',#OP,''''                         09580000
           JOLRETN RC=16                                                09590000
P04MUV20   MVC 0(*-*,R14),TKN                                           09600000
P04ZAPS    DC S(*),S(*),S(*),S(*)                                       09610000
           DC S(*),S(*),S(*),S(*)                                       09620000
           DC S(*),S(*),S(*),S(*)                                       09630000
           DC S(*),S(*),S(*),S(*)                                       09640000
           DC S(*),S(*),S(*),S(*)                                       09650000
           DC S(*),S(*),S(*),S(*)                                       09660000
           DC S(*),S(*),S(*),S(*)                                       09670000
           DC S(*),S(*),S(*),S(*)                                       09680000
           DC S(*),S(*),S(*),S(*)                                       09690000
EZAP       DC S(*)                                                      09700000
           LTORG                                                        09710000
XDSECT     DSECT                                                        09720000
X          DS  CL6                                                      09730000
           DROP R5                                                74303 09740000
***** END P04IF MODULE ******                                     74303 09750000
         EJECT                                                          09760000
