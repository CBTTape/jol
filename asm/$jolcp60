$JOLCP50   TITLE 'JOL MAIN LINE CODE'                                   00010003
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1971,1972,1973,1974            00020000
* COPYRIGHT CCS 1975,1976,1980                                          00030000
* COPYRIGHT CCS 1981,1982.                                              00040000
* COPYRIGHT CLEM CLARKE 1983.                                           00050000
* COPYRIGHT CCS-JOL 1986,1987.                                          00051000
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-C001.           00060000
           SPACE 3                                                      00070000
*                   J             000000            L                   00080000
*                   J            0      0           L                   00090000
*                   J           0        0          L                   00100000
*                   J          0          0         L                   00110000
*                   J         0            0        L                   00120000
*                   J         0            0        L                   00130000
*                   J         0            0        L                   00140000
*                   J         0            0        L                   00150000
*                   J         0            0        L                   00160000
*                   J         0            0        L                   00170000
*                   J         0            0        L                   00180000
*        J          J         0            0        L                   00190000
*         J        J           0          0         L                   00200000
*          J      J             0        0          L                   00210000
*           J    J               0      0           L                   00220000
*            JJJJ                 000000            LLLLLLLLLLL         00230000
         SPACE 3                                                        00240000
*                                                                       00250000
*                                                                       00260000
*                                                                       00270000
******************************************************************      00280000
*                                                                       00290000
* MODIFIED BY C. V. CLARKE JAN, 1984                                    00300000
*    JOL NOW PRINTS THE JOL COMPILER LISTING WITH THE GENERATED         00310003
*    CONTROL STATEMENTS AT EXECUTION TIME.                              00320000
*                                                                       00330000
******************************************************************      00340000
*                                                                       00350000
******************************************************************      00360000
*                                                                       00370000
*                                                                       00380000
* MODIFIED BY C. V. CLARKE TO INCLUDE XA SUPPORT DEC, 1983              00390000
*    THIS SUPPORT MERELY STOPS THE LOADING OF DEVNAMET IF               00400000
*    WE ARE RUNNING ON AN XA SYSTEM.                                    00410000
*                                                                       00420000
*                                                                       00430000
******************************************************************      00440000
*                                                                       00450000
* FOLLOWING CHANGES MADE 3.0 -> 3.1                                     00460000
*                                                                       00470000
* JOL30013:-                                                            00480000
* JOL30014:-                                                            00490000
* JOL30082:-   TYPRUN='H' GENERATED INSTEAD OF 'HOLD'                   00500000
* 82049  FIX 014 ON X8 CLOSING NON-EXISTANT JOLLOAD                     00510000
* 830810 FIX ERROR MESSAGE FORMAT TO REMOVE MESSAGE TRUNCATION          00520000
*                                                                       00530000
******************************************************************      00540000
         SPACE 3                                                        00550000
*        PUNCH ' ALIAS $JOLCP35'                                        00560000
*        PRINT OFF                                                      00570000
         COPY JOLCOM                                                    00580000
*        PRINT ON,DATA                                                  00590000
         TITLE 'JOL COMPILER MAINLINE INITIALISATION'                   00600000
M00SAVE  DSECT                                                          00610000
         DS    18F                                                      00620000
TEMPDCBA DS    A                                                        00630000
TEMPWORK DS    CL8                                                      00640000
         JOLSAVE CSECT=UJM00MN                                          00650000
JOL      EQU   UJM00MN                                                  00651000
         ENTRY JOL                                                      00652000
* THIS IS THE MAIN CONTROL MODULE OF 'JOL'                              00660000
*    ITS DUTIES ARE NOT TERRIBLY COMPLEX AS WE SHALL SEE.               00670000
*                                                                 75128 00680000
*OSAVES  EQU  11                                                  75128 00690000
* ROOM FOR 18 CONCURRENT SAVE AREAS S/B ENOUGH                    75128 00700000
*                                                                 75128 00710000
SAVESIZE EQU   4096  (USED TO BE -NOSAVES*18*4)                         00720000
NOSAVES  EQU   SAVESIZE/72     APPROX NUMBER OF SAVES (REDUCED IF 87150.00721000
                               PEOPLE WANT WORK AREAS TOO         87150 00722000
*                                                                 75128 00730000
         ORG UJM00MN                                                    00740000
         SAVE (14,12),,JOL/XA.COMPILER.COPYRIGHT.CCS.DATE.&SYSDATE.&SYS*00750000
               TIME                                                     00760000
         USING UJM00MN,R11                                        74303 00770000
         LR    R11,R15         SWAP BASE REGISTER                 74303 00780000
         LR    R8,R1           SAVE REGISTER 1                    74303 00790000
         GETMAIN R,LV=SAVESIZE                                          00800000
         ST    R13,4(R1)                                          74303 00810000
         ST    R1,8(R13)                                          74303 00820000
         LR    R13,R1          SET UP NEW SAVE REGISTER           74303 00830000
         MVC   0(4,R13),=F'84' SET UP LENGTH OF 1ST SAVE AREA     87150 00840000
         SPACE 3                                                        00850000
         USING M00SAVE,R13                                              00910000
         SPACE 3                                                        00920000
* NOW WE MUST GET SOME CORE FOR THE 'JOLLOAD' DCB, AND SHIFT IT TO      00930000
* THE CORE OBTAINED, THEN OPEN IT NICELY, SO THAT BEFORE WE             00940000
* ATTEMPT TO LOAD ANY ROUTINES ETC, WE CAN ACTUALLY GET TO THE          00950000
* DATA SET THAT CONTAINS THEM.                                          00960000
****NOTE, THIS HAPPENS EVEN BEFORE WE CALL UJI00MN TO CHANGE DDNAMES,   00970000
* THEREFORE THE ONLY WAY TO CHANGE THIS DDNAME IS BY A ZAP (LATER, WE   00980000
* MAY CHANGE THIS)                                                      00981000
         SPACE                                                          00990000
         LA    R0,LJOLDCB                                               01000000
         GETMAIN R,LV=(0)                                               01010000
         ST    R1,TEMPDCBA                                              01020000
         MVC   0(LJOLDCB,R1),JOLLOAD    SHIFT DCB AWAY                  01030000
* NOW ALTER DDNAME TO '$$JLOAD' IF PRESENT.                             01040000
*        DEVTYPE =CL8'$$JLOAD',80(R13)                                  01050000
         FINDDD =CL8'$$JLOAD',   USE NEW FAST SRCHTIOT ROUTINE    J50  .01051008
               ERRET=M00NJLOA                                           01052008
         USING IHADCB,R1                                                01090000
         L     R1,TEMPDCBA    RESTORE ADDRESS OF THE DCB                01091008
         MVC   DCBDDNAM,=CL8'$$JLOAD'                                   01100000
M00NJLOA EQU *                                                          01110000
         L     R1,TEMPDCBA    RESTORE ADDRESS OF THE DCB                01111008
         MVI   TEMPDCBA,X'80' OPEN FOR INPUT                            01120000
* NEW CODE--- CHECK IF THERE IS A LOAD DCB AT ALL, IF NOT, DON'T OPEN   01130000
*  AND ATTEMPT TO LOAD THE MODULES FROM THE LINK PACK AREA OR           01140000
*  SYS1.LINKLIB.                                                        01150000
*        DEVTYPE DCBDDNAM,80(R13) D WHATEVER DCB NAME WE ARE USING      01160000
         FINDDD DCBDDNAM            USE NEW FAST SRCHTIOT ROUTINE 87150 01161009
         LTR   R15,R15       IS '$$JLOAD' OR 'JOLLOAD' DDNAME THERE?    01170000
         BZ    M00LOAD       YES, TRY TO OPEN IT                        01180000
* NO DCB , SO  DO A LOAD FOR JOLCOM                                     01190000
         LOAD  EP=UJCOMMON                                              01200000
         LR    R2,R0         SAVE ITS ADDRESS FOR THE LIFE       75128  01210000
*                            OF THE JOL COMPILE                  75128  01220000
         ST    R2,AJOLLOAD-4 FOR LINK MACRO                             01230000
         MVC   AJOLLOAD,ZERO CLEAR DCB ADDRESS SO THAT $LINK WORKS      01240000
         B     M00FXSVE      FIX UP SAVE AREA ADDRESS                   01250000
         DROP  R1                                                       01260000
M00LOAD  LA    R1,TEMPDCBA   THERE IS A DCB, SO TRY TO OPEN IT          01270000
         OPEN  MF=(E,(1)) OPEN                                          01280002
         SPACE 3                                                        01290000
         L     R1,TEMPDCBA   DCB ADDR IN R1                             01300000
         USING IHADCB,R1                                                01310000
         TM    DCBOFLGS,X'10' CHECK IF DCB OPEN                         01320000
         DROP  R1                                                       01330000
         BO    OPENOK        OPEN OK SO CONTINUE                        01340000
         ABEND 16                                                       01350000
OPENOK   DS    0H                                                       01360000
         SPACE 3                                                        01370000
* NOW LOAD JOLCOM *********                                             01380000
         SPACE 3                                                        01390000
         MVC   TEMPWORK,=CL8'UJCOMMON'                                  01400000
         LA    R0,TEMPWORK                                              01410000
         MVI   TEMPDCBA,0     SET A POINTER TO 0                        01420000
         L     R1,TEMPDCBA                                              01430000
         SVC   8              LOAD JOLCOM                               01440000
         LR    R2,R0          SAVE ITS ADDRESS FOR THE LIFE       75128 01450000
*                             OF THE JOL COMPILE                  75128 01460002
         ST    R2,AJOLLOAD-4  FOR LINK MACRO                            01470002
         MVC   AJOLLOAD,TEMPDCBA SHIFT DCB ADDRESS TO PROPER HOME       01480002
* NOW WE MUST SET UP THE LAST SAVE AREA ADDRESS FOR THE SAVE RTNS       01500002
M00FXSVE DS    0H                                                       01510002
         L     R1,=A(SAVESIZE)                                    87150 01520002
         ALR   R1,R13                                             87150 01530002
*        LA    R1,SAVESIZE(R13) CALC END ADDRESS                  87150 01540002
         ST    R1,ASAVEND     AND STORE THE RESULT                      01550002
* SEE IF DYNAMIC JOLGEN IS BEING USED.                            76200 01560002
         L     R0,AJOLGEN     LOAD(WILL BE 0 | ADDR)              76200 01570002
         LTR   R0,R0          =0?                                 76200 01580002
         BNZ   M00NLOAD       NO,DON'T LOAD UJGENDET THEN         76200 01590002
         $LOAD UJGENDET       LOAD GENERATION DETAILS             75128 01600003
         ST    R0,AJOLGEN                                               01610002
M00NLOAD EQU   *                                                  76200 01620002
         LR    R10,R0          SAVE ADDRESS OF JOLGEN DETAILS           01630002
         USING GENDETS,R10                                              01640002
         SPACE 3                                                        01650002
         SR    R0,R0          SET ADDRESS OF DEVNAMET TO ZERO FOR A MO  01660002
         L     R1,16          GET CVT ADDRESS                       XA  01670002
*        L     R1,0(R1)       R1-> CVT NOW  REALLY, CLEM            XA  01680001
         TM    116(R1),X'80'      MVS/XA ?                          XA  01690001
         BO    M00STDEV       YES, DON'T LOAD DEVNAMET THEN         XA  01700002
         LOAD  EP=DEVNAMET                                              01710002
M00STDEV ST    R0,ADEVNAME                                              01720002
         DROP  R10                                                      01730002
         MVC   UJSPRINT,=V(UJSPRNT)  SET UP ADDRESS FOR OTHER RTN 75128 01740002
         MVC   ATNUM,=V(UJTNUM)                                   75311 01750002
         MVC   ATNUMV,=V(UJTNUMV)                                 75311 01760002
         MVC   VSAMOPN(8),=V(UJA01OPN,UJA03CLS)                   J50   01761004
         MVC   ASRGETKN,=V(UJCGETKN) SHIFT VCON FOR UJCGETKN      J60   01762018
         MVC   ASRERROR,=V(UJS13ER)                               J60   01763018
         SPACE 3                                                  J60   01764018
         MVC   AUJS30OP,=V(UJS30OP)                                     01765018
         MVC   AUJS98QU,=A(UJS98QU)  SHIFT IN QUOTE ROUTINE HANDLER J60 01766018
         $LOAD UJI00MN        LOAD TO INITIALISATION ROUTINES     J60   01770018
         LR    R15,R0                                                   01780002
         BALR  R14,R15                                                  01790002
         LR    R10,R15        SAVE RETURN CODE FOR TESTING       75311  01800002
         $DELETE UJI00MN      UJI00MN IS RE-ENTRANT, AND I WANT TO      01810002
*                             MAKE SURE IT GOES FROM CORE               01820002
         LTR   R10,R10        TEST RETURN CODE OF INITIALISATION  75311 01830002
         BC  0,UJMRET16       WAS BNZ                             74303 01840002
         SPACE 3                                                        01850002
         L     R8,ADCBS                                           75128 01860002
         USING DCBS,R8                                            75128 01870002
         L     R9,AJOLGEN                                         75128 01880002
         USING GENDETS,R9                                         75128 01890002
         L     R10,ACATCNTL                                             01900002
         USING ACATBUF,R10                                              01910002
         USING JOLCOM,R2                                          74303 01920002
         L     R4,ASYSPRIN                                        75128 01930002
         USING SYSPRINT,R4                                        75128 01940002
*                                                                       01950002
* BECAUSE THE DATA FILE IS KEPT OPEN MOST OF THE TIME, THE              01960002
* CORE OBTAINED FOR THE BUFFER SHOULD BE OBTAINED FIRST SO              01970002
*THAT IT WILL NOT FRAGMENT THE CORE, SO WE'LL OPEN IT HERE              01980002
*                                                                       01990002
         MVI   ADATA,X'8F'    OPEN AS OUTPUT                            02000002
         LA    R1,ADATA                                                 02010002
         SVC   19             OPEN THE FILE AS OUTPUT                   02020002
         SPACE 3                                                        02030002
*                                                                       02040002
* GET STORAGE FOR THE COPY OF THE JOL COMPILER LISTING FILE.            02050002
*                                                                       02060002
         LA    R0,2660       LENGTH OF PRINT BUFFER               84022 02070002
         STH   R0,LP$BUFF    STORE IT AS A DEFAULT LENGTH         84022 02080002
         GETMAIN R,LV=(0)    GET STORAGE                          84022 02090002
         ST    R1,P$CNTL     STORE THE ADDRESS OF THE BUFFER      84022 02100002
         SPACE 3                                                        02110002
*                                                                       02120002
* X8 ***************** CANNOT OPEN MULTIPLE DATA SETS AT ONCE.          02130002
* THEREFORE .....                                                       02140002
         IFOS ^=X8,MULTIOPN                                             02150002
         MVI   ASYSIN,X'80'     OPEN AS INPUT              X8 ******    02160002
         LA    R1,ASYSIN     POINT TO FIRST ENTRY IN LIST               02170002
         SVC   19             OPEN THE FILES                            02180002
         MVI   ASYSIN,X'00'     RESET TO ZEROS             X8 ******    02181002
         MVI   ASYSPRIN,X'8F'  OPEN AS OUTPUT                           02182002
         LA    R1,ASYSPRIN   POINT TO FIRST ENTRY IN LIST               02183002
         SVC   19             OPEN THE FILES                            02190000
         MVI   ASYSPRIN,X'00'  OPEN AS OUTPUT                           02200000
         MVI   AJCL,X'8F'       OPEN AS OUTPUT                          02210000
         LA    R1,AJCL       POINT TO FIRST ENTRY IN LIST               02220000
         SVC   19             OPEN THE FILES                            02230000
         MVI   AJCL,X'00'       RESET TO ZEROES                         02240000
         MVI   APROCLIB,X'80'   OPEN AS INPUT                           02250000
         LA    R1,APROCLIB   POINT TO FIRST ENTRY IN LIST               02260000
         SVC   19             OPEN THE FILES                            02270000
         MVI   APROCLIB,X'00'   RESET TO ZEROES                         02280000
         MVI   AMACRODC,X'80'   OPEN AS INPUT                           02290000
         LA    R1,AMACRODC   POINT TO FIRST ENTRY IN LIST               02300000
         SVC   19             OPEN THE FILES                            02310000
         MVI   AMACRODC,X'00'   RESET TO ZEROES                         02320000
         MVI   AWORKFIL,X'87' OPEN AS OUT/IN                            02330000
         LA    R1,AWORKFIL   POINT TO FIRST ENTRY IN LIST               02340000
         SVC   19             OPEN THE FILES                            02350000
         MVI   AWORKFIL,X'00'   RESET TO ZEROES                         02360000
         MVI   AWORK2DC,X'8F' OPEN AS OUT/IN                            02370000
         LA    R1,AWORK2DC   POINT TO FIRST ENTRY IN LIST               02380000
         SVC   19             OPEN THE FILES                            02390000
         MVI   AWORK2DC,X'00'   RESET TO ZEROES                         02400000
*        DEVTYPE =CL8'SYSTERM',CALLAREA                                 02410000
         LA    R1,=CL8'SYSTERM'     USE NEW FAST SRCHTIOT ROUTINE 87150 02411000
         L     R15,=V(SRCHTIOT)                                   87150 02412000
         BALR  R14,R15                                            87150 02413000
         LTR   R15,R15        IS SYSTERM THERE?                         02420000
         BNZ   X8NSYSTM                                                 02430000
         MVI   ASYSTERM,X'8F' SET LAST PARAMETER ADDRESS, AND OUTPUT    02440000
         LA    R1,ASYSTERM   POINT TO FIRST ENTRY IN LIST               02450000
         SVC   19             OPEN THE FILES                            02460000
         MVI   ASYSTERM,X'00' RESET TO ZEROES                           02470000
X8NSYSTM B     M00JDETS       ALL OPEN, GET JOBDETS NOW                 02480000
*** END X8 SPECIAL OPEN CODE * ************************                 02490000
        SPACE 3                                                         02500000
MULTIOPN DS    0H                                                       02510000
*        MVC   WORK2DCB+40(8),WORKFILE+40    COPY DDNAME          88010 02520000
*                                MOVED INTO UJI00MN JCS           88010 02521000
*        FIX   'ALTER ABOVE SOMETIME'                                   02530000
         MVI   ASYSIN,X'00'   OPEN AS INPUT FOR ORDINARY OS ******      02540000
         MVI   ASYSPRIN,X'0F' OPEN AS OUTPUT                            02550000
         MVI   AJCL,X'0F'     OPEN AS OUTPUT                            02560000
         MVI   APROCLIB,X'00' OPEN AS INPUT                             02570000
         MVI   AMACRODC,X'00' OPEN AS INPUT                             02580000
         MVI   AWORKFIL,X'07' OPEN AS OUT/IN                            02590000
*        DEVTYPE =CL8'SYSTERM',CALLAREA                                 02600000
         LA    R1,=CL8'SYSTERM'     USE NEW FAST SRCHTIOT ROUTINE 87150 02601000
         L     R15,=V(SRCHTIOT)                                   87150 02602000
         BALR  R14,R15                                            87150 02603000
         LTR   R15,R15        IS SYSTERM THERE?                         02610000
         BNZ   M00NOTRM                                                 02620000
         MVI   ASYSTERM,X'8F' SET LAST PARAMETER ADDRESS, AND OUTPUT    02630000
         B     M00OPENA       DO OS STANDARD OPEN                       02640000
M00NOTRM OI    AJCL,X'80'     LAST ENTRY                                02650000
M00OPENA LA    R1,ASYSPRIN    POINT TO FIRST ENTRY IN LIST              02660000
         SVC   19             OPEN THE FILES                            02670000
* TEST IF FILES ARE OPEN.  NEED TO DO THIS ON Z/OS ?  WHY?          J60 02671020
         SPACE 3                                                        02672020
         L     R1,ASYSIN      DCB ADDR IN R1                        J60 02673020
         USING IHADCB,R1      SYSIN                                     02674020
         TM    DCBOFLGS,X'10' CHECK IF DCB OPEN                         02675020
         BO    M00SYSIN      OPEN OK SO CONTINUE                        02677020
         WTO  'JOL/UJM00MN: SYSIN FAILED TO OPEN',                     +02677120
               ROUTCDE=(2,11)                                           02677220
         ABEND 30,DUMP                                                  02677520
M00SYSIN L     R1,ASYSPRIN    DCB ADDR IN R1                        J60 02677620
         TM    DCBOFLGS,X'10' CHECK IF DCB OPEN                         02677720
         BO    M00SYSPR      OPEN OK SO CONTINUE                        02677820
         WTO  'JOL/UJM00MN: SYSPRINT FAILED TO OPEN',                  +02677920
               ROUTCDE=(2,11)                                           02678020
         ABEND 30,DUMP                                                  02678120
M00SYSPR L     R1,AJCL        DCB ADDR IN R1                        J60 02678220
         TM    DCBOFLGS,X'10' CHECK IF DCB OPEN                         02678320
         BO    M00JCLOK      OPEN OK SO CONTINUE                        02678420
         WTO  'JOL/UJM00MN: JCL FAILED TO OPEN',                       +02678520
               ROUTCDE=(2,11)                                           02678620
         ABEND 30,DUMP                                                  02678720
M00JCLOK L     R1,APROCLIB    DCB ADDR IN R1                        J60 02678820
         TM    DCBOFLGS,X'10' CHECK IF DCB OPEN                         02678920
         BO    M00PRCOK      OPEN OK SO CONTINUE                        02679020
         WTO  'JOL/UJM00MN: PROCLIB FAILED TO OPEN',                   +02679120
               ROUTCDE=(2,11)                                           02679220
         ABEND 30,DUMP                                                  02679320
M00PRCOK L     R1,AMACRODC    DCB ADDR IN R1                        J60 02679420
         TM    DCBOFLGS,X'10' CHECK IF DCB OPEN                         02679520
         BO    M00MACOK      OPEN OK SO CONTINUE                        02679620
         WTO  'JOL/UJM00MN: MACRO   FAILED TO OPEN',                   +02679720
               ROUTCDE=(2,11)                                           02679820
         ABEND 30,DUMP                                                  02679920
M00MACOK L     R1,AWORKFIL    DCB ADDR IN R1                        J60 02680020
         TM    DCBOFLGS,X'10' CHECK IF DCB OPEN                         02680120
         BO    M00WRKOK      OPEN OK SO CONTINUE                        02680220
         WTO  'JOL/UJM00MN: MACRO   FAILED TO OPEN',                   +02680320
               ROUTCDE=(2,11)                                           02680420
         ABEND 30,DUMP                                                  02680520
M00WRKOK DS    0H                                                       02680620
         MVI   AWORK2DC,X'8F' SET LAST PARAMETER ADDRESS, AND OUTPUT    02680720
         DROP  R1                                                       02681020
         LA    R1,AWORK2DC    OPEN WORK FILE                            02690000
         SVC   19             OPEN THE FILES                            02700000
         MVI   AWORK2DC,X'00' SET LAST PARAMETER ADDRESS, AND OUTPUT    02710000
         AGO   .NOOS1                                                   02720000
           OPEN (SYSIN,(INPUT),              INPUT CARD FILE           *02730000
               JCL,(OUTPUT),                   JCL PRODUCED            *02740000
               PROCLIB,(INPUT),                                        *02750000
               SYSPRINT,(OUTPUT),                                 75128*02760000
               MACRODCB,(INPUT),                                  74303*02770000
               WORKFILE,(OUTIN),                                  75128*02780000
               JOLLOAD,(INPUT)),                                  75128*02790000
               MF=(E,CALLAREA)                                    75128 02800000
.NOOS1    ANOP                                                          02810000
         MVI   ASYSIN,X'00'   RESET TO ZEROES            X8 ******      02820000
         MVI   ASYSPRIN,X'00'                                           02830000
         MVI   AJCL,X'00'                                               02840000
         MVI   APROCLIB,X'00'                                           02850000
         MVI   AMACRODC,X'00'                                           02860000
         MVI   AWORKFIL,X'00'                                           02870000
         MVI   ASYSTERM,X'00'                                           02880000
         SPACE 3                                                  75128 02890000
M00JDETS L     R12,AJOBDETS   STORE ADDRESS                       75128 02900000
         USING JOBDETS,R12                                              02910000
         SPACE 3                                                        02920000
         USING TKNX,R3                                                  02980000
         FIX 'THIS NEXT CODE TO SAVE RECOMPILING JOLCOM'                02990000
         MVC   DROPQUOT(XXXECODE-XXXCODE),XXXCODE                       03000000
         B     NOTE1                                                    03010000
XXXCODE  LR    R0,R1          SAVE R1                                   03020000
         ST    R14,USER5       SAVE R14                                 03030000
         LA    R1,#TKN                                                  03040000
         ST    R1,CALLAREA+20                                           03050000
         LA    R1,CALLAREA+20                                           03060000
         L     R15,AUJS98QU                                             03070000
         BALR  R14,R15                                                  03080000
         LR    R1,R0         RELOAD R1                                  03090000
         L     R14,USER5         AND R14                                03100000
         BR    R14                                                      03110000
XXXECODE EQU   *                                                        03120000
         SPACE 3                                                        03130000
NOTE1    NOTE WORKFILE        NOTE FIRST OUTPUT POSN                    03140000
*                                  OF THE WORK FILE                     03150000
         ST    R1,SYS1NOTE                                              03160000
         SR    R5,R5           # JOBS SUCCESSFULLY COMPILED       74303 03170000
         SPACE 3                                                        03180000
* PREVIOUSLY IN THIS AREA WE USED TO READ THE FIRST CARD.         75311 03190000
* NOW WE MERELY SET THE 'CP' INDICATOR HIGH, AND LET THE PREPROC 75311  03200000
* WORRY ABOUT IT.                                                 75311 03210000
         SPACE 1                                                  75311 03220000
         MVI   CP,X'7F'                                           75311 03230000
         TITLE 'PROCESS NEW JOB'                                        03240000
NEWJOB   EQU *                                                          03250000
         CLEAR RUNINDIC,ERRCNT                                    75311 03260000
* NOW CLEAR OUT ALL THE FILE CONTROL BLOCKS                             03270000
         CLEAR CATBLKN,WORKBLKN,WORK2BLK,PRBLKN,INSTBLKN,P$BLKN         03280000
         XC    CATTTR1(256),CATTTR1                               80290 03290000
         XC    CATTTR1(CATTTRE-CATTTR1-256),CATTTR1               80290 03300000
         XC    WORKTTR1(256),WORKTTR1 CLEAR FIRST PART            76200 03310000
         XC    WORKTTR1+256(256),WORKTTR1+256                     86200 03320000
         XC    WORKTTR1+512(256),WORKTTR1+512                     86200 03320100
         XC    WORKTTR1+768(WORKTTRE-WORKTTR1-768),WORKTTR1+768   86200 03321000
         XC    PRTTR1(256),PRTTR1 CLEAR FIRST PART                76200 03330000
         XC    PRTTR1+256(256),PRTTR1+256                         86200 03340000
         XC    PRTTR1+512(256),PRTTR1+512                         86200 03340100
         XC    PRTTR1+768(PRTTRE-PRTTR1-768),PRTTR1+768           86200 03341000
         XC    INSTTTR1(256),INSTTTR1 CLEAR FIRST PART            76200 03350000
         XC    INSTTTR1+256(256),INSTTTR1+256                     86200 03360000
         XC    INSTTTR1+512(256),INSTTTR1+512                     86200 03360100
         XC    INSTTTR1+768(INSTTTRE-INSTTTR1-768),INSTTTR1+768   86200 03361000
         XC    P$TTTR1(256),P$TTTR1                               80290 03370000
         XC    P$TTTR1(P$TTTRE-P$TTTR1-256),P$TTTR1               80290 03380000
         MVC   SYS1NEXT,SYS1NOTE MOVE IN FIRST TTR WE WILL WRITE TO     03390000
         IFVALUE SYS1NEXT,M00FINDX IF A VALUE PASSED, DO A POINT  86210 03391000
         B     M00NOPNT          DON'T POINT MVS PROBLEM SEP 87   87150 03391101
         MVC   SYS1NEXT,=X'00000100' SET A VALID TTR              86210 03392000
M00FINDX POINT WORKFILE,SYS1NOTE      POINT IT BACK TO THE              03400000
*                                     BEGINNING OF THE WORK             03410000
*                                     DATA SET.                         03420000
         SPACE 3                                                        03430000
M00NOPNT DS    0H                                                 87150 03431001
         MVC   AUJSPLIT,=V(UJSPLIT)                               87150 03440000
         SPACE 3                                                  75128 03460000
* NOW CALCULATE HOW MUCH STORAGE TO GET FOR THE PRE-PROCESSOR     75128 03470000
         L     R0,=A(TKNSIZE+P52DCBL+BLDLL)  FIRST AREA IS TKNX   80290 03480000
* FIX FOR SYMBOLIC TABLES >32K IN LENGTH                          87150 03480100
         SR    R1,R1           CLEAR R1                           87150 03481000
         ICM   R1,3,SYMLEN     LENGTH OF SYMBOLIC TABLE.          75128 03490000
         AR    R0,R1           ADD WHAT MAY BE A MINUS NUMBER     87150 03491000
         LA    R1,PROCLIB     GET A(PROCLIB) DCB                  75128 03500000
         USING IHADCB,R1      USING SET FOR IT                    75128 03510000
         LH    R15,DCBBLKSI   GET INCLUDE BLOCKSIZE               75128 03520001
         LA    R1,MACRODCB    NOW SWITCH TO MACRO-LIB             75128 03530001
         CH    R15,DCBBLKSI   WHICH DATA SET HAS THE BIGGER BLK ? 75128 03540001
         BH    M00PROCB       GET BIGGEST                         75128 03550001
         LH    R15,DCBBLKSI                                       75128 03560001
M00PROCB EQU   *                                                  75128 03570001
         STH   R15,LREADBUF                                       75128 03580001
         AR    R0,R15         THAT'S SYMBOLIC+BLKSIZE CALC'D      75128 03590001
* NOW TKN WORK AREA                                               75128 03600001
         AH    R0,LPRBUF                                          75128 03610001
         MVC   LMACBUF,=H'1004' LENGTH OF WORK BUFFER FOR         75128 03620001
*                               INSTREAM MACROS AND DYNAM RTNS    75128 03630001
         AH    R0,LMACBUF     ADD SIZE FOR GET MAIN               75128 03640001
         ST    R0,LGOTTEN     SAVE LENGTH FOR FREE-MAIN LATER     75128 03650001
         GETMAIN R,LV=(0)                                         75128 03660001
         ST    R1,AGOTTEN     SAVE ADDRESS FOR FREEMAIN           75128 03670001
         ST    R1,ATKN1       STORE IN TKNX ADDRESS HOLE                03680001
         AH    R1,=AL2(TKNSIZE) CALCULATE NEXT SPOT               80290 03690001
         ST    R1,AP52DCBS                                              03700001
         LA    R1,P52DCBL+BLDLL(R1) CALC NEXT HOLE                      03710001
         ST    R1,ASYMTBL     1ST PART = SYMBOLIC TABLE           75128 03720001
* FIX FOR SYMBOLIC TABLES >32K IN LENGTH                          87150 03730001
         SR    R0,R0           CLEAR R0                           87150 03740001
         ICM   R0,3,SYMLEN     LENGTH OF SYMBOLIC TABLE.          75128 03750001
         AR    R1,R0           ADD WHAT MAY BE A MINUS NUMBER     87150 03760001
*        AH    R1,SYMLEN      + L'SYMBOLIC                        75128 03770001
         ST    R1,APRBUF      2ND PART  PREP TEXT BUF             75128 03780001
         AH    R1,LPRBUF      + L'PREP TEXT                       75128 03790001
         ST    R1,AREADBUF    3RD PART BUF FOR INCLUDE/MACROS     75128 03800001
         AH    R1,LREADBUF         4 TH AREA USED FOR BUFFER      75128 03810001
         ST    R1,AMACBUF            FOR INLINE MACROS + DYNAMRTNS75128 03820001
         NOP   M00NCLR                                                  03830001
         L     R0,AGOTTEN     CLEAR CORE (TEST ONLY ***)          ***** 03840001
         LR    R1,R0                                              ***** 03850001
         L     R15,LGOTTEN                                        ***** 03860001
         S     R15,=F'8'                                          ***** 03870001
         STH   R15,0(R1)                                          ***** 03880001
         MVI   2(R1),C' '                                         ***** 03890001
         LA    R1,1(R1)                                           ***** 03900001
         BAL   R14,MOVEDATA                                       ***** 03910001
M00NCLR  EQU   *                                                        03920001
         LH    R0,MAXSYMS     MAXIMUM NUMBER OF SYMBOLICS ALLOWED 87150 03930001
         MH    R0,=Y(15*2)    15 LEVELS * TWO BYTES FOR POINTERS  87150 03940001
*                                                                       03950001
* MAIN TABLES ALLOCATED AND INITIALISED                                 03960001
*                                                                       03970001
         MVI   ADATA,X'8F'    OPEN DATA AS OUTPUT                       03980001
         LA    R1,ADATA       SET R1                                    03990001
         SVC   19             OPEN FILE AS OUTPUT                       04000001
         SPACE 2                                                  75128 04010001
         L     R1,APRBUF     ADDRESS OUTPUT PREPROCESSOR BUFFER   75128 04020001
         MVC   0(4,R1),=AL2(4,0) INITIALISE BUFFER FOR OUTPUT     75128 04030001
         SPACE 3                                                        04040001
         L     R1,P$CNTL     ADDRESS OUTPUT COPY OF LISTING BUFFER84022 04050001
         MVC   0(4,R1),=AL2(4,0) INITIALISE BUFFER FOR OUTPUT     84022 04060001
         SPACE 3                                                        04070001
* NOW CLEAR ERROR INDICATORS                                            04080001
         MVI   JOLERRIN,0     CLEAR JOLERR INDICATORS             75128 04090001
         CLEAR TITLE2                                                   04100001
         L     R1,AJOBDETS    GET A(JOBDETS)                      75128 04110001
         USING JOBNAME,R1     USE IT                              75128 04120001
         LA    R0,JOBNAME      CLEAR JOB DETAILS                  87150 04130001
         LA    R1,JOBDETSE-JOBNAME  GET LENGTH TO CLEAR           87150 04140001
         LA    R15,C' '        FILL CHARACTER                     87150 04150001
         SLL   R15,24                                                   04160001
         MVCL  R0,R14          CLEAR IT ALL                             04170001
         CLEAR JOBPERFO,JOBLIB#,JOBCAT#  SPECIAL BINARY CLEAR     75128 04180001
         DROP  R1                                                 75128 04190001
         TIME  DEC                                                      04200001
         ST    R0,UJPSTART    STORE START TIME                   75311  04210001
         SRL   R0,4           DROP HUNDREDTHS OF A SECOND               04220001
         ST    R0,DBL                                                   04230001
         OI    DBL+3,X'0F'    SIGN IT  (SIGNATURE?)                     04240001
         UNPK  STARTIME,DBL(4) UNPACK IT                                04250001
         OI    STARTIME+7,X'F0' FOR UNPACKING LATER                     04260001
         MVI   LINECNT,X'7F'  SET LINECNT VERY HIGH               75128 04270001
         MVC   TITLE1,BLANKS                                      87150 04280001
         MVI   PHASE,C'P'     TELL US PREPROCESSOR FOR ERROR RTN  75311 04290001
         $LINK UJP00MN        LINK TO PREPROCESSOR                75128 04300001
         LR    R7,R15         SAVE RETURN CODE                    75128 04310001
         L     R1,AGOTTEN                                         75128 04320001
         L     R0,LGOTTEN                                         75128 04330001
         FREEMAIN R,LV=(0),A=(1)                                  75128 04340001
         CH    R7,=H'16'                                          75128 04350001
         BE    M00P00FL       P00 FAILED                          87080 04360001
         CH    R7,=H'20'      DID WE EXECUTE AN 'EXIT' INSTRUCTION87080 04370001
         BE    TEND           YES, SKIP AND TEST IF WE HAVE FINISHED080 04380001
         B     M00C00         CONTINUE AT UJC00MN NOW             87080 04390001
M00P00FL $DELETE UJSPLIT                                          75311 04400001
         BAL   R6,M00NRNM     OUTPUT 'JOB NOT RUN' IF TEST NOT ON.75128 04410001
         B     TEND                                               75128 04420001
M00C00   EQU   *                                                  75128 04430001
*        L     R1,AWORKFIL                                              04440001
*        MVI   AWORKFIL,X'90'                                           04450001
*        SVC   20                                                       04460001
* NOW CALCULATE STORAGE FOR COMPILE PHASE                               04470001
         LH    R0,=AL2(TKNSIZE)                                         04480001
         AH    R0,LWORKBUF    LENGTH OF 1 WORK BUFFER             75128 04490001
         AH    R0,LWORKBUF    + L'2ND WORK BUFFER                 75128 04500001
         AH    R0,LPRBUF      +L'PREPROCESOOR BUFFER              75128 04510001
         AH    R0,LINSTBUF    +L'INSTRUCTION BUFFER               75128 04520001
         AH    R0,IDLEN       +L'TABLE FOR NAMES                        04530001
         AH    R0,LPROGWRK         FOR PROGRAM DECLARE ROUTINES         04540001
* FOR REAL JCL WE HAVE TO GET EXTRA STORAGE TO STORE THE          75311 04550001
*  CONDITION CODES AND THE 'DO' EXTRA STEPS WE HAVE GENERATED.    75311 04560001
* ALSO, WE NEED A TABLE FOR THE STEPNAMES WE HAVE BEEN OUTPUTTING 75311 04570001
*    SO WE DONT OUTPUT DUPLICATE STEPS                            75311 04580001
         AH    R0,=AL2((200*8)+(18*8)) 200 REAL STEP NAMES        77300 04590001
*                                     18 LEVELS OF DO AND MACROS  75311 04600001
         SPACE 1                                                  75311 04610001
         ST    R0,LGOTTEN     SAVE LENGTH FOR NOW                       04620001
         GETMAIN R,LV=(0)     GET STORAGE                               04630001
         ST    R1,AGOTTEN     FOR FREEMAIN                              04640001
         ST    R1,ATKN1       FIRST AREA FOR TKNX                       04650001
         AH    R1,=AL2(TKNSIZE) CALC NEXT HOLE                          04660001
         ST    R1,AWORKBUF    2ND AREA FOR WORK BUFFER 1                04670001
         L     R1,AGOTTEN                                         75128 04680001
         NOP   M00NCLR2        *************                            04690001
         LR    R0,R1                                              ***** 04700001
         L     R15,LGOTTEN                                        ***** 04710001
         S     R15,=F'8'                                          ***** 04720001
         STH   R15,0(R1)                                          ***** 04730001
         MVI   2(R1),C' '                                         ***** 04740001
         LA    R1,1(R1)                                           ***** 04750001
         BAL   R14,MOVEDATA                                       ***** 04760001
M00NCLR2 EQU   *                                                        04770001
         L     R1,AWORKBUF                                        75128 04780001
         MVC   0(4,R1),=AL2(4,0)   INITIALISE BUFFER FOR OUTPUT   75128 04790001
         AH    R1,LWORKBUF                                              04800001
         ST    R1,AWORK2BF    2ND AREA FOR INPUT WORK BUFFER            04810001
         MVC   0(4,R1),=AL2(4,0)   INITIALISE BUFFER FOR OUTPUT   75128 04820001
         AH    R1,LWORKBUF                                              04830001
         ST    R1,APRBUF                                                04840001
         AH    R1,LPRBUF                                                04850001
         ST    R1,AINSTBUF                                              04860001
         MVC   0(4,R1),=AL2(4,0) INITIALISE BUFFER FOR OUTPUT     75128 04870001
         AH    R1,LINSTBUF                                              04880001
         ST    R1,APROGWRK       FOR PROGRAM DECLARE RTN                04890001
         AH    R1,LPROGWRK                                              04900001
         ST    R1,AIDTBL                                                04910001
         SR    R15,R15        SET R15=0  (A REAL TABLE)           75311 04920001
         ST    R15,AREALTBL   SET ADDRESS=0                       75311 04930001
         AH    R1,IDLEN       ADD LENGTH OF LAST TABLE            75311 04940001
         ST    R1,ASTEPTBL    STORE ADDRESS IN ASTEPTBL           75311 04950001
         LA    R1,200*8(R1)   SKIP STEP NAME OUTPUT TABLE         77300 04960001
         ST    R1,AREALTBL    STORE ADDRESS IN AREALTBL           75311 04970001
*                                                                       04980001
* MAIN TABLES ALLOCATED AND INITIALISED                                 04990001
*                                                                       05000001
         MVI   PHASE,C'C'     TELL ERROR RTN COMPILER PHASE NOW   75311 05010001
         TIME  DEC            GET START TIME OF-                  75311 05020001
         ST    R0,UJCSTART      COMPILER PHASE                    75311 05030001
         $LOAD UJUEXIT                                            75128 05040001
         ST    R0,ACOMPEXI                                        75128 05050001
         $LINK UJC00MN                                            75128 05060001
         LR    R7,R15                                             75128 05070001
         $DELETE UJUEXIT                                          75128 05080001
         L     R0,LGOTTEN                                         75128 05090001
         L     R1,AGOTTEN                                         75128 05100001
         FREEMAIN R,LV=(0),A=(1)                                  75128 05110001
         SPACE 3                                                        05120001
         $DELETE UJSPLIT                                          75128 05130006
         CH    R7,=H'16'      SEVERE ERRORS FOUND ?               75128 05140001
         BNE   M00V00         NO CATASTROPHIC ERRORS, CALL V00    75128 05150001
         BAL   R6,M00NRNM     OP NO RUN MSSG IF 7 TEST            75128 05160001
         B     TEND           GO SEE IF MORE JOBS                 75128 05170001
M00V00   EQU   *                                                  75128 05180001
         MVI   PHASE,C'O'      TELL US WE ARE IN OPTIMISE PHASE   75311 05190001
         TIME  DEC                                                75311 05200001
         ST    R0,UJOSTART                                        75311 05210001
         $LOAD UJUVALID                                           75128 05220001
         ST    R0,AUVALID                                         75128 05230001
         $LINK UJV00RD        READ TEXT INTO STORAGE              84100 05240001
         LTR   R7,R15         DID WE READ IT OR NOT?              84100 05250001
         BNE   M00VRDER       ERRORS, DON'T CALL NEXT PHASE       84100 05260001
         $LINK UJV00MN                                            75128 05270001
         LR    R7,R15         SAVE RETURN CODE                    75128 05280001
M00VRDER $DELETE UJUVALID                                         75128 05290001
         CH    R7,=H'16'      ALL GO WELL ?                       75128 05300001
         BNE   M00G00T        NO ERRORS (MAJOR),TEST,CALL G00     75128 05310001
         BAL   R6,M00NRNM     OP NO RUN MESSAGE                   75128 05320001
         B     FREEV00        GO FREE V00 GOTTEN STORAGE          75128 05330001
M00G00T  EQU   *                                                  75128 05340001
         TM     THISSYS,X'08' LET ON ?                            75311 05350001
         BO    GENERATE       YES, SO GENERATE JCL                75128 05360001
* NOW SEE IF ANY MAJOR ERRORS THAT COULD STOP EXECUTION                 05370001
         TM    JOLERRIN,B'00000100' ANY HOLD TYPE ERRORS          75128 05380001
         BZ    M00NOHLD                                           75128 05390001
         MVC   JOBHOLD,=C'HOLD' TURN ON HOLD             JOL30082 76200 05400001
*****************************************************************       05410001
**     SHUT OFF ANY POSSIBLE EXECUTION OF HOLD TYPE ERRORS     **       05420001
*****************************************************************       05430001
         B     M00HOLD        BRANCH TO SHUT OFF GENERATE PHASE         05440001
M00NOHLD TM    JOLERRIN,B'00011000' TEST FOR SEVERE ERRORS        75128 05450001
         BZ    GENERATE       NO, SO GO GENERATE JCL              75128 05460001
M00HOLD  BAL   R6,M00NRNM     OP NO RUN MESSAGE                   75128 05470001
         B     FREEV00        GO SEE IF MORE JOBS TO COMPILE      75128 05480001
GENERATE EQU   *                                                        05490001
****                                                              84023 05500001
* NOW, TELL THE OUTPUT ROUTINES TO FLUSH THE 'PRINT' BUFFER       84023 05510001
****                                                              84023 05520001
         LA    R0,P$CNTL      GET THE ADDRESS OF THE COMPILER 'PRINT'   05530001
         LA    R1,=H'-1'      NEGATIVE RECORD JUST FLUSHES BUFFERS84022 05540001
         $CALL UJS30OP        OUTPUT DATA TO THE WORK FILE        84022 05550001
****                                                              84023 05560001
* DONE .......                                                    84023 05570001
****                                                              84023 05580001
         MVI   PHASE,C'G'     TELL US WE ARE IN GENERATE PHASE    75311 05590001
         TIME  DEC                                                75311 05600001
         ST    R0,UJGSTART                                        75311 05610001
         LA    R5,1(R5)       ADD 1 TO COUNTER OF GOOD JOBS       74303 05620001
         $LOAD UJG90OP        LOAD JCL OUTPUT ROUTINE             75128 05630001
         ST    R0,AUJG90      STORE ADDRESS FOR OTHERS            75128 05640001
         $LINK UJG01JOB       GENERATE JOB DETAILS                75128 05650001
         $LINK UJG00MN                                            74303 05660001
         $DELETE UJG90OP      DELETE OP RTN                       75128 05670001
         TM    JOLERRIN,B'00000100' ANY TYPE 3 ERRORS?            75128 05680001
         BZ    FREEV00        FREE V00 CORE                       75128 05690001
         TM    THISSYS,X'08'  LET  TURNED ON ?                    75128 05700001
         BNZ   FREEV00        YES, NO ERROR MESSAGE THEN          75128 05710001
         BAL   R6,M00MRNM     OP MAY RUN-ON HOLD QUEUE MESSAGE    75128 05720001
*FREEV00  IFNULL AGOTTEN,TEND  (NO CORE TO FREE)                  7SOCO 05730001
FREEV00  CLC   AGOTTEN,ZERO AMOUNT GOTTEN=0 ??  (ELIMINATE RC=8    SOCO 05740001
         BE    TEND   IF YES, GO TO TEND          IN THE ASSEMBLY) SOCO 05750001
         FREEMAIN  V,A=AGOTTEN,MF=(E,CALLAREA),SP=0               75128 05760001
TEND     EQU   *                                                  75128 05770001
         $LINK UJF00MN                                            75128 05780001
         CLI EOFSYSIN,C' '                                              05790001
         BE  NEWJOB                                                     05800001
         TM    UJFLAG1,UF1DBOPN                                   J50   05801016
         BZ    ZZ                                                 J50   05802016
         L     R6,VSAMCBS                                         J50   05803016
         USING VSAMINFO,R6                                        J50   05804016
         VSCLOSE (JOLDSDB),                                            .05805016
               MF=(E,CALLAREA)                                          05806016
         DROP  R6                                                 J50   05807016
ZZ       DS    0H                                                 J50   05808016
* THERE USED TO BE AN OS CLOSE HERE BUT THE MF VERSION DOESN'T WORK     05810001
         MVI   ASYSIN,0                                                 05820001
         MVI   AJCL,0                                                   05830001
         MVI   APROCLIB,0                                               05840001
         MVI   AMACRODC,0                                               05850001
         MVI   AWORKFIL,0                                               05860001
         MVI   ASYSPRIN,0                                               05870001
         MVI   ASYSTERM,0                                JOL30014 80290 05880001
         MVI   ADATA,X'80' LAST ENTRY - DATA (SYSUT1)    JOL30014 80290 05890001
*                                                                 J50   05890113
*        LA    R1,=C'CLOSING SYSPRINT'                            J50   05891017
*        TPUT  (1),16                                             J50   05891117
*        LA    R1,CALLAREA                                        J50   05891217
*        TGET  (1),4                                              J50   05892017
         CLOSE MF=(E,ASYSPRIN) CLOSE FILES                              05900014
*        STM   R0,R1,DBL                                          J50   05900117
*        ST    R15,CALLAREA+4                                     J50   05900217
         MVI   AWORK2DC,X'80' OPEN AS OUT/IN                            05901010
         CLOSE MF=(E,AWORK2DC) CLOSE FILES                              05902010
*        ST    R15,CALLAREA+8                                     J50   05903017
*        LA    R1,=C'CLOSED SYSPRINT'                             J50   05912017
*        TPUT  (1),15                                             J50   05913017
*        LA    R1,CALLAREA                                        J50   05914017
*        TGET  (1),4                                              J50   05915017
         LA    R1,SYSTERM                                         80290 05920001
         BAL   R6,FREEPOOL                                        80290 05930001
         LA    R1,JCL                                             74303 05940001
         BAL   R6,FREEPOOL                                        74303 05950001
         LA    R1,SYSIN                                           74303 05960001
         BAL   R6,FREEPOOL                                        74303 05970001
         LA    R1,SYSPRINT                                        75128 05980001
         BAL   R6,FREEPOOL                                        75128 05990001
* NEW EXIT FOR STANDARD OIL AUGUST 26 1976                        76200 06000001
         ST    R2,CALLAREA                                        76200 06010001
         LR    R1,R2                                              76200 06020001
         $LINK UJM90EXT    LINK TO EXIT ROUTINE                   76200 06030001
         CH    R15,=H'9'                                          76200 06040001
         BL    M00TR15                                            76200 06050001
         LR    R9,R15                                             76200 06060001
         ABEND (9),DUMP                                           76200 06070001
M00TR15  B     *+4(R15)                                           76200 06080001
         B     M00TRDR                                            76200 06090001
         B     M00TLET4                                           76200 06100001
         B     UJMRET16                                           76200 06110001
M00TLET4 TM    THISSYS,X'08'   LET  ON?                           76200 06120001
         BNO   UJMRET16      NO,RETURN 16                         77200 06130001
M00TRDR  EQU   *                                                  76200 06140001
         SPACE 2                                                  75128 06150001
         TM    THISSYS,2       DO WE START A READER               74303 06160001
         BO    UJMSTRTR        YES                                74303 06170001
UJMRET0  SR    R9,R9                                              74303 06180001
UJMRETN  EQU   *                   SET UP CLOSE                         06190001
*                                                                       06200001
* FREE STORAGE OBTAINED FOR THE COPY OF THE JOL COMPILER LISTING FILE.  06210001
*                                                                       06220001
         LH    R0,LP$BUFF    LOAD LENGTH OF THE BUFFER            84022 06230001
         L     R1,P$CNTL     GET THE ADDRESS OF THE BUFFER        84022 06240001
         FREEMAIN R,LV=(0),A=(1)   AND FREE IT                    84022 06250001
         SPACE 3                                                        06260001
         OC    AJOLLOAD,AJOLLOAD   Q... A DCB TO CLOSE?           82049 06270008
         BZ    UJMRETNA            A... NO                        82049 06280001
         MVI   AJOLLOAD,X'80'      SET UP CLOSE                         06290001
*        LA    R1,AJOLLOAD         GET R1=AJOLLOAD                      06300001
         JOLCLOSE MF=(E,AJOLLOAD)  CLOSE THE FILE                       06310001
         L     R1,AJOLLOAD         GET A(DCB)                           06320001
         LA    R0,LJOLDCB          GET LENGTH OF DCB                    06330001
         FREEMAIN R,LV=(0),A=(1)   AND FREE IT                          06340001
UJMRETNA DS    0H                                                       06350001
         SPACE 3                                                        06360001
*************************************************************           06370001
**                                                         **           06380001
**  SETUP RETURN CODE BASED ON CONTENTS OF JOLERRIN        **           06390001
**                                                         **           06400001
** TERMINAL ERROR = 20                                     **           06410001
** SEVERE ERROR   = 16                                     **           06420001
** HOLD SEVERITY  = 12                                     **           06430001
** ERROR          = 08                                     **           06440001
** WARNING        = 04                                     **           06450001
** INFORMATION    = 00                                     **           06460001
**                                                         **           06470001
*************************************************************           06480001
          LTR  R9,R9          IS REG-9 SETUP ALREADY ?                  06490001
          BNZ  UJMRTNED       YEP ALL DONE HERE                         06500001
          LA   R9,20          SETUP RETURN CODE OF 20                   06510001
          TM   JOLERRIN,X'10'                                           06520001
          BO   UJMRTNED                                                 06530001
          LA   R9,16          SETUP RETURN CODE OF 16                   06540001
          TM   JOLERRIN,X'08'                                           06550001
          BO   UJMRTNED                                                 06560001
          LA   R9,12          SETUP RETURN CODE OF 12                   06570001
          TM   JOLERRIN,X'04'                                           06580001
          BO   UJMRTNED                                                 06590001
          LA   R9,08          SETUP RETURN CODE OF 08                   06600001
          TM   JOLERRIN,X'02'                                           06610001
          BO   UJMRTNED                                                 06620001
          LA   R9,04          SETUP RETURN CODE OF 04                   06630001
          TM   JOLERRIN,X'01'                                           06640001
          BO   UJMRTNED                                                 06650001
          LA   R9,0           SETUP RETURN CODE OF 0                    06660001
UJMRTNED  EQU   *                                                       06670001
* NOW GET RID OF  UJCOMMON,UJGENDET                                     06680001
         $DELETE    UJGENDET                                      75128 06690005
         CLC   ADEVNAME,ZERO                                         XA 06710005
         BE    M00TOOS                                            J50   06711001
         $DELETE DEVNAMET                                               06720001
M00TOOS  DS    0H                                                       06730006
         $DELETE    UJCOMMON     JCS WOZ HEREQ                    75128 06730106
         L     R10,4(R13)    GET PREVIOUS SAVE AREA ADDR          74303 06731006
         LR    R1,R13                                             74303 06740005
         FREEMAIN R,A=(1),LV=SAVESIZE                             74303 06750005
         LR    R13,R10                                            74303 06760005
         LR    R15,R9                                             74303 06770005
         RETURN (14,12),T,RC=(15)                                 74303 06780005
UJMSTRTR LTR   R5,R5           DID ANY JOBS WORK PROPERLY?        74303 06790005
         BZ    UJMRET0          NO->                              74303 06800005
         LA    R1,JCL                                             74303 06810005
         FIX   'DEC 1983. CHECK WHO ALTERED NEXT TWO LINES'             06820005
*        MVC   CALLAREA(8),=CL8'UJERDR'                           75128 06830001
*        MVC   CALLAREA+6(1),SPOOL  (H,A,1,2,3)                   75128 06840001
         $LINK UJERDRH                                                  06850005
         B     UJMRET0                                            74303 06860001
UJMRET16 LA    R9,16                                              74303 06870001
         B     UJMRETN                                            74303 06880001
         SPACE 3                                                  75128 06890001
M00NRNM  EQU   *                                                  75128 06900001
         MVI   RUNINDIC,C'N' TELL UJF00MN TO PRINT N0RUN MSSGE    75311 06910001
         BR    R6            RETURN                               75311 06920001
         SPACE 2                                                  75128 06930001
M00MRNM  MVI   RUNINDIC,C'M' TELL UJF00MN 'MAY' RUN               75311 06940001
         BR    R6             AND RETURN                          75128 06950001
         SPACE 3                                                  75128 06960001
FREEPOOL TM    23(1),1     DID SOMEONE DOIT ALREADY ????                06970001
         BOR   R6          OK THEN LETS GET OUT OF HERE                 06980001
         FREEPOOL (1)                                                   06990001
         BR    R6                                                 74303 07000001
         PRINT NOGEN                                                    07010001
JOLLOAD  DCB   DDNAME=JOLLOAD,MACRF=R,DSORG=PO                          07020001
         PRINT GEN,DATA                                                 07030001
LJOLDCB  EQU *-JOLLOAD                                                  07040001
         LTORG                                                          07050001
         DROP R13,R8,R9,R4,R12                                          07060001
         DC   42S(*,*,*,*)                                              07070001
         EJECT                                                          07080001
         TITLE 'JOL PRINT SUBROUTINE'                                   07090001
         JOLSAVE CSECT=UJSPRNT,SIZE=80+133                       75128  07100001
* THIS CSECT GETS CONTROL WHEN-EVER A LINE IS TO BE PRINTED       75128 07110001
* TITLE1 AND TITLE2 ARE TWO LINES TO BE PRINTED ON THE TOP              07120001
*    OF EVERY PAGE                                                      07130001
         USING JOLCOM,R2                                                07140001
         SPACE 1                                                  75311 07150001
         L     R9,AJOLGEN                                         75311 07160001
         USING GENDETS,R9                                         75311 07161001
         L     R10,ACATCNTL                                       84022 07162001
         USING ACATBUF,R10                                        84022 07163001
         SPACE 1                                                  75311 07164001
* NOW WE WANT TO SET R8=1 IF WE HAVE TO DO A 'WTO' FOR ANY        75311 07165001
*    ERROR MESSAGES, AS WELL AS PRINTING THEM.                    75311 07166001
* WE DO THIS IF CALLED FROM 'UJS13ER' AND THE 'NOPRINT' OPTION    75311 07167001
*    IS ON                                                        75311 07168001
         SR    R8,R8           SET=0 INITIALLY                    75311 07169001
         TM    PARMPRNT,B'00000010' NOPRINT OPTION ON?            75311 07169101
         BZ    UJSNWTO         NO, WE DO PRINT                    75311 07169201
* NOW SEE IF CALLED FROM UJS13ER                                  75311 07169301
         L     R15,4(R13)      GET OLD SAVE                       75311 07169401
         L     R15,(17-1)*4(R15) R15= OLD R11                     75311 07169501
         CLC   5(7,R15),=C'UJS13ER'                               75311 07169601
         BNE   UJSCLEAR        NOPE, JUST RETURN (NO PRINT)       75311 07170000
         TM    PARMPRNT,B'00001000' TEST OPTION ON?               75311 07180000
         BO    UJSNWTO              YES, NO WTO, DO PRINT               07190000
         LA    R8,1            YES, SET R8 NON ZERO               75311 07200000
UJSNWTO  EQU   *                                                  75311 07210000
         L     R7,ADCBS                                           75128 07220000
         USING DCBS,R7                                            75128 07230000
         TM    SYSPRINT+48,X'10'   SYSPRINT OPEN ?                      07240000
         BO    FILEOPEN                                                 07250000
         MVI   CALLAREA,X'80' OPEN DOESN'T SET HIGH ORDER BIT ...       07260000
         OPEN  (SYSPRINT,(OUTPUT)),MF=(E,CALLAREA)                      07270000
         TM    SYSPRINT+48,X'10'   OPEN YET ?                           07280000
         BO    FILEOPEN                                                 07290000
         L     R15,4(R13)      GET OLD SAVE                         J60 07291021
         L     R7,(17-1)*4(R15) R15= OLD R11                        J60 07292021
         DC    H'0' CVC FIX                                             07293021
         ABEND 16,DUMP                                                  07300000
FILEOPEN L     R4,APRINTLN    LOAD THE ADDRESS OF THE PRINT LINE  75128 07310000
         LA    R1,1           SET R1= 1 LINE WE ARE TO OUTPUT     75128 07320000
         CLI   4(R4),C'0'     DOUBLE SPACE ?                      75128 07330000
         BE    SDBLSP         YES, SO DO IT                        DASD 07340000
         CLI   4(R4),C'-'     TRIPLE SPACE ?                       DASD 07350000
         BE    STRPLSP        YES, SO DO IT                        DASD 07360000
         CLI   4(R4),C'1'     PAGE EJECT ?                         DASD 07370000
         BE    SPROFLO        YES, SO OVERFLOW THE PAGE            DASD 07380000
SPR1LINE AH    R1,LINECNT     ADD CURRENT LINE COUNT              75128 07390000
         STH   R1,LINECNT     AND STORE IT                        75128 07400000
         L     R15,AJOLGEN                                              07410000
         USING GENDETS,R15                                              07420000
         CLC   LINECNT,MAXLINE WILL WE OVER-FLOW THE PAGE ?       75128 07430000
         DROP  R15                                                      07440000
         BH    SPROFLO        YES                                 75128 07450000
         B     UJSOPREA      GO CHECK FOR REAL OUTPUT              DASD 07460000
SDBLSP   LA    R1,2          SET FOR DOUBLE SPACE                  DASD 07470000
         B     SPR1LINE      GO INCR LINECNT                       DASD 07480000
STRPLSP  LA    R1,3          SET FOR TRIPLE SPACE                  DASD 07490000
         B     SPR1LINE      GO INCR LINECNT                       DASD 07500000
         SPACE 2                                                   DASD 07510000
UJSOPREA EQU   *               REAL OUTPUT ?                      75311 07520000
* NOW SEE IF CALLED FROM UJS13ER                                        07530000
         L     R15,4(R13)        GET OLD SAVE                           07540000
         L     R15,(17-1)*4(R15) R15= OLD R11                           07550000
         CLC   5(7,R15),=C'UJS13ER'                                     07560000
         BNE   UJSOTRMO          NOPE, NOT A ERROR MESSAGE              07570000
******************************************************************      07580000
**                                                              **      07590000
**  SYSTERM OPTION IS ACTIVE ONLY IF DDCARD IS PRESENT          **      07600000
**                                                              **      07610000
******************************************************************      07620000
         TM    SYSTERM+48,X'10'    IS SYSTERM OPEN ??                   07630000
         BNO   UJSOTRMO      NO, JUST PRINT TO SYSPRINT                 07640000
         PUT   SYSTERM,(R4)  OUTPUT ERRORS ONLY                         07650000
UJSOTRMO EQU    *                                                       07660000
         PUT   SYSPRINT,(R4)  OUTPUT NON-OVERFLOW RECORD          75128 07670000
* IF WE ARE NOT IN THE GENERATE PHASE, WE SHALL COPY THE CONTENTS 84023 07680000
*  OF THIS PRINT LINE TO THE WORK FILE FOR SPOOLING TO THE        84023 07690000
*  GENERATED JCL LATER. THE GENERATE PHASE PRINT WE IGNORE.       84023 07700000
         CLI   PHASE,C'G'     GENERATE PHASE ?                          07710000
         BE    SPNO1                                                    07720000
**** OPERATIONAL CONSIDERATIONS SAY IGNORE PREPROCESSOR TOO!      84051 07730000
         CLI   PHASE,C'P'     PREPROCESSOR PHASE?                 84051 07740000
         BE    SPNO1                                              84051 07750000
         LA    R0,P$CNTL      GET THE ADDRESS OF THE COMPILER 'PRINT'   07760000
         LR    R1,R4          GET ADDRESS OF DATA TO GO OUT       84022 07770000
         $CALL UJS30OP        OUTPUT DATA TO THE WORK FILE        84022 07780000
SPNO1    LTR   R8,R8           DO WE ALSO HAVE TO DO A 'WT0'      75311 07790000
         BZ    UJSCLEAR        NOPE                               75311 07800000
         LH    R1,0(R4)        GET LENGTH OF RECORD               75311 07810000
         AR    R1,R4           NOW POINT TO END OF IT             75311 07820000
         MVC   0(4,R1),=X'04004020' DESC 6,ROUTE 11,2             75311 07830000
         MVI   2(R4),X'80'     INDICATE TO SVC 35 INFO AT RECORD  75311 07840000
*                              END                                75311 07850000
         MVI   4(R4),C' '   BLANK OUT LINE FEED BYTE              75311 07860000
         WTO   MF=(E,(R4))   WTO                                  75311 07870000
UJSCLEAR EQU   *                                                        07880000
         L     R1,APRINTLN   LOAD PRINT LINE ADDRESS              75128 07890000
         MVC   0(4,R1),=AL2(5,0) SET LENGTH                       75128 07900000
         MVI   4(R1),C' '                                         75128 07910000
         MVC   5(120,R1),4(R1)   CLEAR LINE                       75128 07920000
         JOLRETN RC=0        AND RETURN                           75128 07930000
         SPACE 3                                                  75128 07940000
SPROFLO  EQU   *                                                  75128 07950000
         AP    PAGENO,=P'1'                                             07960000
         LA    R5,80(R13)     POINT TO OUR WORK AREA(PAST SAVE)   75128 07970000
         MVI   4(R5),C'1'     JUMP TO NEW PAGE                    75128 07980000
         MVC   5(L'TITLE1,R5),TITLE1                              75128 07990000
         MVC   5+L'TITLE1(6,R5),=C' PAGE '                        75128 08000000
         UNPK  5+L'TITLE1+6(3,R5),PAGENO   SHIFT IN PAGENO        75128 08010000
         OI    5+L'TITLE1+6+2(R5),C'0' MAKE PRINTABLE             75128 08020000
         MVC   0(4,R5),=AL2(L'TITLE1+4+6+3+1,0)                   75128 08030000
         PUT   SYSPRINT,(R5)  OUTPUT FIRST BIT OF HEADING         75128 08040000
* IF WE ARE NOT IN THE GENERATE PHASE, WE SHALL COPY THE CONTENTS 84023 08050000
*  OF THIS PRINT LINE TO THE WORK FILE FOR SPOOLING TO THE        84023 08060000
*  GENERATED JCL LATER. THE GENERATE PHASE PRINT WE IGNORE.       84023 08070000
         CLI   PHASE,C'G'     GENERATE PHASE ?                    84023 08080000
         BE    SPNO2                                              84023 08090000
**** OPERATIONAL CONSIDERATIONS SAY IGNORE PREPROCESSOR TOO!      84051 08100000
         CLI   PHASE,C'P'     PREPROCESSOR PHASE?                 84051 08110000
         BE    SPNO2                                              84051 08120000
         LA    R0,P$CNTL      GET THE ADDRESS OF THE COMPILER 'PRINT'   08130000
         LR    R1,R5          GET ADDRESS OF DATA TO GO OUT       84022 08140000
         $CALL UJS30OP        OUTPUT DATA TO THE WORK FILE        84022 08150000
         SPACE 3                                                        08160000
SPNO2    L     R15,AJOLGEN                                              08170000
         USING GENDETS,R15                                              08180000
         PUT   SYSPRINT,OWNER                                           08190000
         L     R15,AJOLGEN    RELOAD R15 BEACUSE PUT DESTOYED IT  84022 08200000
* IF WE ARE NOT IN THE GENERATE PHASE, WE SHALL COPY THE CONTENTS 84023 08210000
*  OF THIS PRINT LINE TO THE WORK FILE FOR SPOOLING TO THE        84023 08220000
*  GENERATED JCL LATER. THE GENERATE PHASE PRINT WE IGNORE.       84023 08230000
         CLI   PHASE,C'G'     GENERATE PHASE ?                    84023 08240000
         BE    SPNO3                                              84023 08250000
**** OPERATIONAL CONSIDERATIONS SAY IGNORE PREPROCESSOR TOO!      84051 08260000
         CLI   PHASE,C'P'     PREPROCESSOR PHASE?                 84051 08270000
         BE    SPNO3                                              84051 08280000
         LA    R0,P$CNTL      GET THE ADDRESS OF THE COMPILER 'PRINT'   08290000
         LA    R1,OWNER       GET ADDRESS OF DATA TO GO OUT       84022 08300000
         $CALL UJS30OP        OUTPUT DATA TO THE WORK FILE        84022 08310000
         DROP  R15                                                      08320000
         SPACE 3                                                  75128 08330000
* NOW PRINT THE PHASE WE ARE IN                                         08340000
SPNO3    MVI   4(R5),C'0'     DOUBLE SPACE                              08350000
         MVC   5(L'TITLE2,R5),TITLE2                                    08360000
         MVI   1(R5),L'TITLE2+5                                         08370000
         PUT   SYSPRINT,(R5)  OUTPUT IT                                 08380000
* IF WE ARE NOT IN THE GENERATE PHASE, WE SHALL COPY THE CONTENTS 84023 08390000
*  OF THIS PRINT LINE TO THE WORK FILE FOR SPOOLING TO THE        84023 08400000
*  GENERATED JCL LATER. THE GENERATE PHASE PRINT WE IGNORE.       84023 08410000
         CLI   PHASE,C'G'     GENERATE PHASE ?                    84023 08420000
         BE    SPNO4                                              84023 08430000
**** OPERATIONAL CONSIDERATIONS SAY IGNORE PREPROCESSOR TOO!      84051 08440000
         CLI   PHASE,C'P'     PREPROCESSOR PHASE?                 84051 08450000
         BE    SPNO4                                              84051 08460000
         LA    R0,P$CNTL      GET THE ADDRESS OF THE COMPILER 'PRINT'   08470000
         LR    R1,R5          GET ADDRESS OF DATA TO GO OUT       84022 08480000
         $CALL UJS30OP        OUTPUT DATA TO THE WORK FILE        84022 08490000
         SPACE 3                                                        08500000
SPNO4    MVC   4(22,R5),=C'0JOL COMPILER VERSION '                75128 08510000
         MVC   26(80,R5),BLANKS  CLEAR REST OF LINE               75128 08520000
         MVC   26(L'VERSION,R5),VERSION                           75128 08530000
         MVC   32(9,R5),DAY   SHIFT IN 'MONDAY' ETC                     08540000
         MVC   42(9,R5),MONTH                                           08550000
         MVC   52(2,R5),DAYNO                                           08560000
         MVC   55(4,R5),YEAR                                            08570000
         MVC   0(4,R5),=AL2(4+59+L'VERSION,0)                     75128 08580000
         PUT   SYSPRINT,(R5)                                      75128 08590000
* IF WE ARE NOT IN THE GENERATE PHASE, WE SHALL COPY THE CONTENTS 84023 08600000
*  OF THIS PRINT LINE TO THE WORK FILE FOR SPOOLING TO THE        84023 08610000
*  GENERATED JCL LATER. THE GENERATE PHASE PRINT WE IGNORE.       84023 08620000
         CLI   PHASE,C'G'     GENERATE PHASE ?                    84023 08630000
         BE    SPNO5                                              84023 08640000
**** OPERATIONAL CONSIDERATIONS SAY IGNORE PREPROCESSOR TOO!      84051 08650000
         CLI   PHASE,C'P'     PREPROCESSOR PHASE?                 84051 08660000
         BE    SPNO5                                              84051 08670000
         LA    R0,P$CNTL      GET THE ADDRESS OF THE COMPILER 'PRINT'   08680000
         LR    R1,R5          GET ADDRESS OF DATA TO GO OUT       84022 08690000
         $CALL UJS30OP        OUTPUT DATA TO THE WORK FILE        84022 08700000
         SPACE 3                                                        08710000
SPNO5    MVI   4(R4),C'0'     MAKE REAL LINE WE WANTED TO PRINT   75128 08720000
*                             DOUBLE SPACE FIRST                  75128 08730000
         SPACE 1                                                  75128 08740000
         MVC   LINECNT,=AL2(9) RESET LINE-COUNT                   7DASD 08750000
         B     UJSOPREA        OUTPUT (PRINT)                     75311 08760000
         LTORG                                                          08770000
         DROP  R7,R9                                              75128 08780000
         DC    15S(*,*,*,*)                                             08790000
         TITLE 'JOL ERROR MESSAGE HANDLER'                              08800000
*********************************************************************** 08810000
*                                                                       08820000
* THIS IS A NEW CSECT FOR 'UJS13ER'                                     08830000
* PREVIOUSLY, ALL ERROR MESSAGES WERE PUT AT THE BACK OF THE            08840000
*  JOL COMPILE.                                                         08850000
* NOW, TO HELP WITH TSO USAGE, THE ALL APPEAR AS THE OCCUR ON           08860000
*  THE TERMINAL, OR IN THE PRINTED OUTPUT                               08870000
*                                                                       08880000
* TODAY IS JUNE 16, 1975                                                08890000
*                                                                       08900000
*********************************************************************** 08910000
S13PARM  DSECT                                                          08920000
S13CSECT DS    CL1            IF UJC03DS CALLED US, WOULD CONTAIN       08930000
*                             A 'C'                                     08940000
S13CNO   DS    AL1            AS ABOVE, WOULD CONTAIN (03)              08950000
S13SEV   DS    AL1            SEVERITY (0-5)                            08960000
S13ERRNO DS    AL1            ERROR NUMBER (0-99)                       08970000
S13STMT  DS    S              S(STMT NO VARIABLE)                       08980000
S13EPARM EQU   *                                                        08990000
         SPACE 3                                                        09000000
ERRTEXT  DSECT                                                          09010000
ERRLEN   DS    H                                                        09020000
         DS    H                                                        09030000
         DS    CL1                                                      09040000
ERRUJ    DS    CL2                                                      09050000
ERRCSECT DS    CL1                                                      09060000
ERRCNO   DS    CL2                                                      09070000
ERRDASH  DS    CL1                                                      09080000
ERRNO    DS    CL2                                                      09090000
         DS    CL1                                                      09100000
ERRTEXT1 DS    CL50                                                     09110000
S13SAVE  DSECT                                                          09120000
         DS    18F            REGISTER SAVE AREA FOR 'JOLPRINT'         09130000
OLDR11   DS    A              CALLERS R11 (NEEDED,BECAUSE MOST          09140000
*                             OF THE EXECUTES WILL USE R11 AS A         09150000
*                             BASE REGISTER, AND THEREFORE IT           09160000
*                             IS IMPORTANT TO RE-LOAD THIS BEFORE       09170000
*                             WE DO ANY 'EXECUTES'                      09180000
OLDR14   DS    A              THIS IS UPDATED, BUT ORIGINALLY           09190000
*                             POINTS TO THE PARAMETER LIST              09200000
S13BASE  DS    A              OUR BASE IS SAVED HERE (R11) WHEN         09210000
*                             WE DO AN EXECUTE MENTIONED ABOVE          09220000
*                             (SEE COMMENTS 'OLDR11').                  09230000
OLDDBL   DS    CL8            'DBL' OFTEN HAS PARTS OF THE ERROR        09240000
*                             TEXT TO BE PRINTED, AND AS WE MUST USE    09250000
*                             'DBL' FOR CVD, WE MUST SAVE CONTENTS      09260000
S13MVCEX DS    CL6            A MVC INSTRUCTION IS SET UP HERE          09270000
*                             AT ODD TIMES.                             09280000
S13SAVEL EQU   *-S13SAVE      LENGTH OF SAVE + WORK AREA                09290000
         SPACE 3                                                        09300000
         JOLSAVE CSECT=UJS13ER,SIZE=S13SAVEL                            09310000
* NOW THE PARAMETERS TO THIS CSECT ARE A LITTLE PECULIAR                09320000
* ON ENTRY,R14 (RETURN ADDRESS) POINTS TO THE FOLLOWING:-               09330000
*                                                                       09340000
*        DC    CL1            CONTAINS ALPHA CHAR (S FOR EXAMPLE)       09350000
*        DC    AL1            CSECT NUMBER (CALLER)                     09360000
*        DC    AL1            SEVERITY CODE (0-5)                       09370000
*        DC    AL1            ERROR NUMBER (0-99)                       09380000
*        DS    S(STMT)        STATEMENT NUMBER IN ERROR                 09390000
         USING JOLCOM,R2      R2 ALWAYS POINTS TO JOLCOM                09400000
         USING S13SAVE,R13    USE SAVE AREA+WORK AREA                   09410000
         ST    R14,OLDR14     SAVE R14                                  09420000
         ST    R11,S13BASE    SAVE OUR BASE REGISTER                    09430000
         MVC   OLDDBL,DBL     SAVE CONTENTS OF 'DBL' WHICH WE NEED      09440000
*                             FOR CVD INSTRUCTIONS                      09450000
         L     R15,4(R13)     GET OLD SAVE AREA ADDRESS                 09460000
         MVC   OLDR11,(17-1)*4(R15) SHIFT IN CALLERS R11                09470000
         MVC   S13MVCEX(4),=X'D2001000' SET UP PART OF MVC INSTRUCTION  09480000
         SPACE 3                                                        09490000
* NOW POP OUT ANYTHING THAT MAY ALREADY BE IN THE PRINT BUFFER.         09500000
         L     R1,APRINTLN                                              09510000
         CLC   0(2,R1),=AL2(5) ANYTHING THERE TO PRINT ?                09520000
         BNH   S13NOPRN       NOPE, DON'T CALL UJSPRINT           75311 09530000
         JOLPRINT             OUTPUT WHATEVER IS THERE                  09540000
S13NOPRN EQU   *                                                  75311 09550000
         SPACE 1                                                  75311 09560000
* NOW SEE IF WE HAVE TO CHECK IF THIS IS A SEVERE ERROR OR NOT,   75311 09570000
*  AND WHETHER WE HAVE TO IGNORE THIS ERROR BECAUSE OF FLAG SETTINGS    09580000
         SPACE 1                                                  75311 09590000
         L     R14,OLDR14                                         75311 09600000
         USING S13PARM,R14                                        75311 09610000
         L     R1,AJOLGEN                                         75311 09620000
         USING GENDETS,R1                                               09630000
         CLI   S13SEV,2        ERROR OR ABOVE?                          09640000
         BL    S13001                                                   09650000
         LH    R15,ERRCNT                                               09660000
         LA    R15,1(R15)      ADD TO ERROR COUNT                       09670000
         STH   R15,ERRCNT                                               09680000
S13001   EQU   *                                                        09690000
         CLC   S13SEV,PFLAG    ERROR TOO LOW TO PRINT             75311 09700000
         BL    S13SKIPE        YES                                75311 09710000
         CLI   PHASE,C'P'      PREPROCESSOR PHASE ?                     09720000
         BE    S13TSTMT        YES                                      09730000
         CLI   PHASE,C'C'      COMPILER PHASE ?                         09740000
         BNE   S13TEST         NO                                       09750000
* HERE PREPROCESSOR OR COMPILER PHASE                                   09760000
S13TSTMT EQU   *                                                        09770000
* CHECK IF STMT BEEN PRINTED, IF NOT, PRINT A BIT OF IT (IT MAY BE      09780000
*  A BIT GARBLED THO).                                                  09790000
         CLI   THISPRNT,C' '   THIS STATEMENT ALREADY BEEN PRINTED?     09800000
         BNE   S13TEST         YES, DON'T DO IT AGAIN.                  09810000
         MVI   THISPRNT,C'1'   MARK IT PRINTED                          09820000
* IF STOP ETC, DON'T PRINT THE STATEMENT                                09820100
         CLC   =C'STOP ',ICOMMAND                                87150  09821000
         BE    S13TEST                                           87150  09822000
         CLC   =C'SIGNAL ',ICOMMAND                              87150  09823000
         BE    S13TEST                                           87150  09824000
         USING TKNX,R3                                                  09830000
         LH    R15,#TKNSTRG                                             09840000
         S     R15,ONE                                                  09850000
         BNP   S13TEST                                                  09860000
         L     R1,APRINTLN     LOAD ADDRESS OF PRINT BUFFER.            09870000
         MVC   5(11,R1),=C'ERROR STMT '                                 09880000
         MVC   16(4,R1),STMT                                            09890000
         CH    R15,=H'96'                                JOL30013 76200 09900000
         BL    *+8                                       JOL30013 76200 09910000
         LA    R15,96                                    JOL30013 76200 09920000
         EX    R15,S13MVPRN                                             09930000
         MVI   1(R1),125                                                09940000
         JOLPRINT                                                       09950000
S13TEST  EQU   *                                                        09960000
         L     R14,OLDR14                                               09970000
         USING S13PARM,R14                                              09980000
         L     R1,APRINTLN                                              09990000
         USING ERRTEXT,R1                                               10000000
* INITIALISE THE FIRST LINE                                             10010000
         MVI   4(R1),C'0'     DOUBLE SPACE (FIX LATER)                  10020000
         MVC   ERRUJ,=C'UJ'   SET UP 'UJ'                               10030000
         MVI   ERRDASH,C'-'   SET UP '-'                                10040000
         MVC   ERRCSECT,S13CSECT SHIFT IN CSECT NO                      10050000
         SR    R15,R15        CLEAR R15                                 10060000
         IC    R15,S13ERRNO   GET ERROR NUMBER                          10070000
         CVD   R15,DBL        DEC PKD                                   10080000
         UNPK  ERRNO,DBL      EBCIDIC                                   10090000
         OI    ERRNO+L'ERRNO-1,C'0' MAKE PRINTABLE                      10100000
         IC    R15,S13CNO     GET CSECT NUMBER                          10110000
         CVD   R15,DBL                                                  10120000
         UNPK  ERRCNO,DBL                                               10130000
         OI    ERRCNO+L'ERRCNO-1,C'0'                                   10140000
* NOW PUT IN 'WARNING' ETC                                              10150000
         IC    R15,S13SEV     LOAD SEVERITY                             10160002
         MH    R15,=H'6'      LENGTH OF MVC INSTRUCTION TO BE 'EX'      10170002
         LA    R1,ERRTEXT1    RESET R1 A BIT                            10180002
         EX    R0,S13MSS(R15) SHIFT REQ'D INFO IN                       10190002
         IC    R15,S13SEV     RELOAD SEVERITY                           10200002
         SLL   R15,2          MULTIPLY BY 4                             10210002
         EX    R0,S13RESET(R15) ADD TO R1 L'MESSAGE JUST SHIFTED        10220002
         MVC   1(2,R1),=C'AT' AT (STMT)                                 10230002
         MVC   DBL(2),=X'41F0' LA R15                                   10240002
         MVC   DBL+2(2),S13STMT                                         10250002
         EX    R0,DBL         LA  R15,STMT                              10260002
         MVC   4(4,R1),0(R15) SHIFT IN STATEMENT NUMBER                 10270002
         LA    R1,10(R1)      RESET R1                                  10280002
         L     R15,APRINTLN   LOAD A(PRINTBUF)                          10290002
         SR    R1,R15         GET LENGTH OF LINE TO GO OUT              10300002
         STH   R1,0(R15)      SET LENGTH                                10310002
         LA    R14,S13EPARM   STEP TO END OF PARM LIST                  10320002
         ST    R14,OLDR14     SAVE ADDRESS FOR NOW                      10330002
         B     NOFIRST   ******************************                 10340002
         JOLPRINT             PRINT FIRST LINE OF ERROR TEXT            10350002
* OK, FIRST LINE GONE, GONE, GONE                                       10360002
         SPACE 3                                                        10370002
         DROP  R1,R14                                                   10380002
         SPACE 1                                                        10390002
NOFIRST  EQU  *     **********************************                  10400002
         MVC   DBL,OLDDBL     RESET DBL COS WE'VE FINISHED WITH IT      10410002
* LETS SEE IF THERE IS ANY ERROR TEXT                                   10420002
         L     R14,OLDR14                                               10430002
         CLI   0(R14),0                                                 10440002
         BNE   S13LOOP1       YES THERE IS SOME TEXT                    10450002
         L     R1,APRINTLN                                              10460002
         AH    R1,0(R1)        POINT TO NEXT HOLE               75128   10470002
         MVC   5(33,R1),=C'NO MESSAGE TEXT WITH THIS MESSAGE'           10480002
         MVI   1(R1),38                                                 10490002
         JOLPRINT                                                       10500002
S13RETN  L     R1,OLDR14                                                10510002
         LA    R1,2(R1)           SKIP 0 AT END OF LIST                 10520002
         L     R14,4(R13)     GET OLD SAVE AREA ADDRESS                 10530002
         ST    R1,12(R14)     STORE NEW R14 ADDRESS IN SAVE AREA        10540002
         JOLRETN              RC=0                                      10550002
         SPACE 3                                                        10560002
S13LOOP1 L     R14,OLDR14     LOAD CURRENT PARM POINTER                 10570002
         CLI   0(R14),0       END OF PARMS ?                            10580002
         BNE   S13TLA         NO,TEST IF LA INSTRUCTION                 10590002
         L     R1,APRINTLN                                              10600002
         CLI   1(R1),5        ANY THING TO PRINT ?                      10610002
         BE    S13RETN        NOPE, JUST RETURN                         10620002
         JOLPRINT             OUTPUT LINE                               10630002
         B     S13RETN                                                  10640002
S13TLA   CLI   0(R14),X'41'   LA INSTRUCTION ?                          10650002
         BNE   S13TMVC        NOPE -> TEST IF MVC INSTRUCTION           10660002
         SPACE 3                                                        10670002
* HERE TIS AN LA                                                        10680002
         SPACE 3                                                        10690002
         L     R11,OLDR11     RELOAD USERS BASE                         10700002
         EX    R0,0(R14)      R1 NOW -> VARYING STRING                  10710002
         L     R11,S13BASE    RELOAD OUR BASE REGISTER                  10720002
         LH    R15,2(R14)     LOAD BASE ADDRESS OF VARYING STRING       10730002
         AH    R15,=H'2'      ADD 2 (TO SKIP FIRST 2 BYTES OF           10740002
*                             VARYING CHARACTER STRING)                 10750002
         STH   R15,S13MVCEX+4 STORE IN DUMMY MVC INSRUCTION             10760002
* NOW RESET R14 TO POINT TO NEXT PARM                                   10770002
         LA    R14,4(R14)                                               10780002
         ST    R14,OLDR14                                               10790002
* DONE                                                                  10800002
         SPACE 1                                                        10810002
         LH    R1,0(R1)       GET LENGTH OF VARYING STRING        75128 10820002
         SH    R1,=H'1'       -1 FOR MVC (R1=CURRENT LENGTH OF STRING)  10830002
         BM    S13LOOP1       NO DATA TO MOVE,SO DON'T DO ANYTHING      10840002
         CH    R1,=H'255'          > 255                                10850002
         BL    *+8                 NOPE - BRANCH                        10860002
         LA    R1,255              YES, TOO BIG, REDUCE STRING SIZE     10870002
         STC   R1,S13MVCEX+1       SET LENGTH IN CREATED MVC            10880002
         B     S13DOMVC            OK, NOW DO MOVE                      10890002
         SPACE 3                                                        10900002
S13TMVC  CLI   0(R14),X'D2'        MVC ?                                10910002
         BNE   S13ABEND            HAVE TO ABEND,COS NOTHING ELSE       10920002
*                                  WE CAN DO.                           10930002
         MVC   S13MVCEX(6),0(R14)  SHIFT MVC TO AREA WE CAN PLAY WITH   10940002
         LA    R14,6(R14)          RESET R14                            10950002
         SPACE                                                          10960002
         ST    R14,OLDR14          DONE                                 10970002
S13DOMVC EQU   *                                                        10980002
* NOW, S13MVCEX CONTAINS AN MVC INSTRUCTION TO MOVE DATA TO THE         10990002
*  PRINT BUFFER                                                         11000002
* 1. IF THE DATA WILL FIT, MOVE IT                                      11010002
* 2. IF THE DATA WON'T FIT, DO DIFFICULT THINGS MY FRIEND               11020002
         SPACE 3                                                        11030002
         L     R15,APRINTLN   LOAD A(PRINTBUF)                          11040002
         LH    R1,0(R15)      LOAD CURRENT LINE LENGTH.                 11050002
         SR    R0,R0                                                    11060002
         IC    R0,S13MVCEX+1  LOAD MVC LENGTH                           11070002
         AR    R0,R1          R0=LENGTH IF MOVE DONE                    11080002
         CH    R0,=H'119'     WILL IT FIT ? TEST LENGTH  DJD            11090002
         BL    S13WILLG       OK, WILL FIT, GO DO THE MOVE              11100002
* HERE, IT WILL NOT FIT WITHOUT SPLITTING INTO SEVERAL LINES            11110002
* HOWEVER, LETS SEE IF IT WILL FIT ON A LINE BY ITSELF.                 11120002
         CLI   S13MVCEX+1,110 WILL IT FIT ON A LINE BY ITSELF?          11130002
         BH    S13SPLIT       NOPE                                      11140002
* THE INFO TO GO OUT WILL FIT ON A LINE BY ITSELF.                      11150002
         JOLPRINT             GET RID OF LINE IN BUFFER                 11160002
         B     S13DOMVC       BRANCH BACK TO DO THE MXC                 11170002
         SPACE 3                                                        11180002
S13SPLIT EQU   *                                                        11190002
* HERE WE HAVE TO SPLIT THE MVC INTO SEVERAL                            11200002
* R1 CONTAINS CURRENT LINE LENGTH, SO NOW CALCULATE HOW MUCH WE CAN     11210002
*  GET OUT ON THE CURRENT LINE.                                         11220002
         MVC   OLDDBL(1),S13MVCEX+1 SAVE AMOUNT THAT REALLY HAS TO GO   11230002
         LA    R0,119                                 DJD               11240002
         SR    R0,R1          RO=AMOUNT THAT CAN GO OUT                 11250002
         STC   R0,S13MVCEX+1  RESET LENGTH IN MVC INSTRUCTION           11260002
         MVI   1(R15),125     SET LINE LENGTH=125                       11270002
         AR    R1,R15         R1-> NEXT AVAILABLE HOLE NOW IN PRINTBUF  11280002
         L     R11,OLDR11     RESET R11                                 11290002
         EX    R0,S13MVCEX    SHIFT DATA                                11300002
         L     R11,S13BASE    RESET OUR BASE REGISTER                   11310002
         JOLPRINT             OUTPUT CURRENT LINE                       11320002
         SR    R1,R1                                                    11330002
         IC    R1,S13MVCEX+1  LOAD LENGTH THAT JUST WENT OUT            11340002
         LR    R15,R1         POP IN R15                                11350002
         AH    R15,S13MVCEX+4 ADD CURRENT DISPLACEMENT                  11360002
         STH   R15,S13MVCEX+4 RESTORE IN MVC(BASE REGISTER MAY GO       11370002
*                             UP BY 1,DOESN'T MATTER AS UJC03DS IS THE  11380002
*                             ONLY MULTI-BASE CSECT AND THE BASE REG-   11390002
*                             ISTERS ARE CONSEQECTIVE)                  11400002
         SR    R15,R15                                                  11410002
         IC    R15,OLDDBL     LOAD LENGTH THAT SHOULD HAVE GONE OUT.    11420002
         SR    R15,R1         - LENGTH THAT DID GO OUT                  11430002
         STC   R15,S13MVCEX+1 AND RESET LENGTH IN MVC                   11440002
         B     S13DOMVC       AND ROUND AGAIN.                          11450002
         SPACE 3                                                        11460002
S13WILLG EQU   *                                                        11470002
* HERE THE LINE WILL FIT ALL BY ITSELF, WITH NO SPLITTING.              11480002
         AR    R1,R15         R1-> NEXT HOLE IN PRINTLINE               11490002
         L     R11,OLDR11     GET USERS R11                             11500002
         EX    R0,S13MVCEX    SHIFT DATA                                11510002
         L     R11,S13BASE    GET OUR BASE AGAIN                        11520002
         SR    R1,R1                                                    11530002
         IC    R1,S13MVCEX+1  LOAD LENGTH THAT GOT MOVED                11540002
         L     R15,APRINTLN   POINT TO PRINTBUF                         11550002
         AH    R1,0(R15)      + LENGTH OF LINE BEFORE MOVE              11560002
         LA    R1,1(R1)       +1 COS MVC IS ONE LESS                    11570002
         STH   R1,0(R15)      RESET LINE LENGTH                         11580002
         B     S13LOOP1       BACK TO MAIN LOOP                         11590002
         SPACE 3                                                        11600002
S13SKIPE   EQU *                                                  75311 11610002
* HERE WE MUST SKIP THE PARAMETERS POINTED TO BY R14, COS WE      75311 11620002
*  AREN'T GOING TO PRINT THE ERROR MESSAGE BECAUSE THE SEVERITY   75311 11630002
*  IS TOO LOW TO PRINT.                                           75311 11640002
         SPACE 1                                                  75311 11650002
         USING S13PARM,R14                                              11660002
         LA    R14,S13STMT+L'S13STMT                              75311 11670002
         DROP  R14                                                      11680002
* NOW WE LOOP ROUND TILL R14 POINTS TO H'0', ADD 2 TO SKIP THE    75311 11690002
*  H'0', AND RETURN                                               75311 11700002
S13CLC0  CLC   0(2,R14),ZERO   END ?                              75311 11710002
         BE    S13EEND1        YES                                75311 11720002
         LA    R14,2(R14)      NO, ADD 2 TO R14                   75311 11730002
         B     S13CLC0         CHECK 0 AGAIN                      75311 11740002
         SPACE 1                                                        11750002
S13EEND1 ST    R14,OLDR14                                         75311 11760002
         B     S13RETN                                            75311 11770002
         SPACE 3                                                  75311 11780002
S13MSS   MVC   0(L'S13MSS0,R1),S13MSS0                                  11790002
         MVC   0(L'S13MSS4,R1),S13MSS4                                  11800002
         MVC   0(L'S13MSS8,R1),S13MSS8                                  11810002
         MVC   0(L'S13MSS12,R1),S13MSS12                                11820002
         MVC   0(L'S13MSS16,R1),S13MSS16                                11830002
         MVC   0(L'S13MSS20,R1),S13MSS20                                11840002
S13RESET LA    R1,L'S13MSS0(R1)                                         11850002
         LA    R1,L'S13MSS4(R1)                                         11860002
         LA    R1,L'S13MSS8(R1)                                         11870002
         LA    R1,L'S13MSS12(R1)                                        11880002
         LA    R1,L'S13MSS16(R1)                                        11890002
         LA    R1,L'S13MSS20(R1)                                        11900002
S13MSS0  DC    C'INFORMATION'                                           11910002
S13MSS4  DC    C'* WARNING *'                                           11920002
S13MSS8  DC    C'** ERROR **'                                           11930002
S13MSS12 DC    C'*** SEVERE ERROR ***'                                  11940002
S13MSS16 DC    C'**** TERMINAL ERROR ****'                              11950002
S13MSS20 DC    C'***** INTERNAL COMPILER ERROR *****'                   11960002
S13MVPRN MVC  21(*-*,R1),TKNSTRG                                        11970002
         DC    11S(*,*,*,*)                                             11980002
S13ABEND ABEND   19,DUMP                                                11990002
         TITLE 'JOL REPOINT-REREAD ROUTINE'                             12000002
         JOLSAVE CSECT=UJS30REP                                         12010002
* ALL THIS LITTLE GUY IS ABOUT TO DO IS                                 12020002
* REREAD THE WORK FILE BACK TO ITS READ POSITION                        12030002
* WHICH HAS CHANGED DO TO A WRITE TO IT                                 12040002
* THIS COULD HAVE BEEN DONE IN THE UJS30OP MODULE                       12050002
* BUT I DIDN'T WANT TO UPSET ANY REGISTERS                              12060002
*                                                                       12070002
*                                                                       12080002
* WRITING WHILE READING IS THE PROBLEM                                  12090002
*                                                                       12100002
*                                                                       12110002
         L      R8,ADCBS                                                12120002
         USING DCBS,R8                                                  12130002
         L      R4,AP52DCBS                                             12140002
         USING P52DCBS,R4                                               12150002
         L     R5,AREADBUF    LOAD BUFFER ADDRESS                       12160002
         L     R9,AWORKFIL    LOAD WORKFILE DCB ADDRESS                 12170002
         L     R3,0(R1)       LOAD PASSED TTRC ADDRESS                  12180002
         USING S3REPARM,R3                                              12190002
         IFVALUE S3REPTTR,S30FINDX IF A VALUE PASSED, DO A FIND  86210  12200002
         MVC   S3REPTTR,=X'00001000' SET A VALID TTR             86210  12210002
S30FINDX FIND  (9),S3REPTTR,C POINT BACK TO INPUT BLOCK                 12220002
         XC    CALLAREA(20),CALLAREA                                    12230002
         READ  CALLAREA,SF,(9),(5),MF=(E,CALLAREA)  DO A READ ON HIM    12240002
         CHECK CALLAREA       WAIT FOR OS                               12250002
         CLI   CALLAREA,X'7F' DID IT WORK OK ?                          12260002
         BE    UJS30RPE       YES, SO RETURN A ZERO               86210 12270002
         MVI   CP,X'7F'       WHAT DO I DO NOW? SET CP HIGH       86210 12280002
UJS30RPE NOP   *                                                        12290002
UJSREPOT JOLRETN RC=0         RETURN TO THE UJS30OP ROUTINE             12300002
         DC    3S(*,*,*,*)                                              12310002
         DC    3S(*,*,*,*)                                              12320002
S3REPARM DSECT                                                          12330002
S3REPTTR DS     F      TTRC LOCATION OF WORKFILE BEFORE WRITE           12340002
         TITLE 'JOL OUTPUT ROUTINE'                             74303   12350002
         JOLSAVE CSECT=UJS30OP,SIZE=84                            75128 12360002
* NEW MODULE, DEC 1,1974                                                12370002
* THIS CSECT RECEIVES CONTROL FROM VARIOUS AREAS AND IS RESPONSIBLE     12380002
*    FOR OUTPUTTING TO THE WORKFILE                                     12390002
* ALL THE FILES ARE SEQUENTIAL,WITH THE EXCEPTION OF THE FILE WHICH     12400002
*    CONTAINS THE DECODED DECLARES. THIS FILE IS DIRECT,AND             12410002
*    INFORMATION MAY BE READ AND WRITTEN.                               12411002
           SPACE 1                                                      12412002
* ON ENTRY, R0 -> CONTROL AREA                                    75128 12420000
*           R1 -> AREA TO GO OUT                                  75128 12430000
           SPACE 1                                                      12440000
* THE CONTROL AREA LOOKS LIKE:-                                         12450000
*          A(BUFFER)                                                    12460000
*          AL2(L'BUFFER)                                                12470000
*          AL2(CURRENT BLOCK NUMBER)                                    12480000
*          AL2(MAX NUMBER OF BLOCKS)                                    12490000
*          H'LENGTH OF BLOCK JUST WRITTEN'                              12500000
*          DC  MAX NUMBER OF BLOCKS TIMES A FULLWORD TO CONTAIN         12510000
*                              TTRS OF BLOCKS WRITTEN OUT.              12520000
         LR    R4,R0          SWAP CALLING REGISTERS              75128 12530000
         LR    R5,R1                                              75128 12540000
*NOW 1F WE ARE WRITING OUT 'INSTRUCTIONS' WHICH HAVE TO BE              12550000
*    READ BACK LATER AS A BIG TABLE, WE WANT TO MAKE SURE THAT          12560000
*    EVERY RECORD IS A MULTIPLE OF 2                                    12570000
         USING JOLCOM,R2                                                12580000
         USING S30PARM,R4                                               12590000
         USING S30OP,R5                                                 12600000
         USING S30SAVE,R13                                        75128 12610000
S30START L     R7,S30ABUF     LOAD ADDRESS OF THE BUFFER          75128 12620000
         MVC   S30WORK(2),#S30REC SHIFT REC SIZE SO NO 0C6        75128 12630000
         LH    R6,S30WORK     LOAD LENGTH OF REC TO GO OUT        75128 12640000
         LTR   R6,R6          IF NEG, MERELY -                    75128 12650000
         BM    S30EMPTY       *  OUTPUT THE BLOCK                 75128 12660000
         SPACE 1                                                  75128 12670000
         C     R4,AINSCNTL   OUTPUT FOR AN INSTRUCTION ?          75311 12680000
         BNE   S30NOTIN                                                 12690000
* HERE AN INSTRUCTION HAS TO GO OUT,SO ROUND UP IF NEC.                 12700000
         TM    #S30REC+1,1   RECORD LENGTH ODD ?                  75311 12710000
         BZ    S30NORND                                                 12720000
         LA    R6,1(R6)       ROUND UP                            75128 12730000
         STH   R6,S30WORK                                         75128 12740000
         MVC   #S30REC,S30WORK                                    75128 12750000
S30NORND EQU   *                                                        12760000
S30NOTIN EQU   *                                                        12770000
         CLC   S30LBUF,#S30REC IS RECORD TO GO OUT TOO LONG?            12780000
         BL    S30ERR1         YES,ABEND                                12790000
* LETS SEE IF THE RECORD WILL FIT IN THE CURRENT BLOCK.                 12800000
         LH    R8,0(R7)        LOAD CURRENT LENGTH OF BLOCK.            12810000
         AR    R8,R6           ADD LENGTH OF RECORD TO GO OUT.          12820000
         LA    R14,2(R8)       TO ALLOW FOR 2 BYTE RECORD LENGTH  75128 12830000
         CH    R14,S30LBUF      WILL THE RECORD FIT IN THE CURRENT75128 12840000
*                              BLOCK ?                                  12850000
         BH    S30OUTPT        NO -> OUTPUT BLOCK.                      12860000
         LH    R1,0(R7)        LOAD CURRENT BLOCK LENGTH                12870000
         LR    R9,R1           SAVE OFFSET IN BLOCK TO RETN TO CALLER   12880000
         AR    R1,R7           R1 -> NEXT LOCN IN BLOCK TO SHIFT        12890000
*                              RECORD TO.                               12900000
         STH   R8,0(R7)        SET NEW BLOCK LENGTH                     12910000
         LA    R0,#S30REC      R0-> RECORD                              12920000
         BAL   R14,MOVEDATA    SHIFT DATA (LOOKS AFTER>256 BYTES)       12930000
* WELL,THATS ABOUT IT                                                   12940000
         L     R1,4(R13)       LOAD OLD SAVE AREA                       12950000
         ST    R9,24(R1)       STORE OFFSET IN SAVE AREA                12960000
         MVC   24(2,R1),S30BLKNO                                        12970000
         JOLRETN RC=0                                                   12980000
         SPACE 3                                                        12990000
S30EMPTY EQU   *                                                        13000000
* OK,LET'S OUTPUT THE CURRENT BLOCK.                                    13010000
* HOWEVER, IF THE CURRENT BLOCK LENGTH IS 4,THEN THERE IS NO DATA       13020000
*    TO OUTPUT,SO WE WON'T                                              13030000
         CLC   0(2,R7),=H'4'                                            13040000
         BNE   S30OUTPT                                                 13050000
         L     R1,4(R13)                                                13060000
         SR    R0,R0                                                    13070000
         ST    R0,24(R1)                                                13080000
         JOLRETN RC=4                                                   13090000
         SPACE 3                                                        13100000
S30OUTPT EQU *                                                          13110000
         SPACE 1                                                        13120000
S30OK    EQU *                                                          13130000
* NOW R0=LENGTH OF RECORD                                               13140000
*     R14=BLOCK LENGTH                                                  13150000
*    R7=A(BLOCK)                                                  75128 13160000
* HERE WE WERE ASKED TO OUTPUT THE CURRENT BLOCK AND RETURN,            13170000
*    OR OUTPUT THE BLOCK BECAUSE THE NEXT RECORD WON'T FIT              13180000
* NOW WE MUST ALSO NOTE THE CURRENT POSITION OF THE WORK FILE           13190000
* IN CASE WE ARE READING FROM IT IN OUR READ ROUTINE                    13200000
* AND REPOSITION TO IT AGAIN AFTER THE CURRENT BLOCK GOES OUT           13210000
*THIS PROBLEM HAS CAUSED JOL TO GO CRAZY                                13220000
         CLI   PHASE,C'P'     IS THE PREPROCESSER RUNNING               13230000
         BNE   S30NOPE1       NOPE                                      13240000
         L     R14,AP52DCBS                                             13250000
         USING P52DCBS,R14                                              13260000
         L     R15,AWORKFIL   GET WORKFILE DCB ADDRESS                  13270000
         CLC   AWORKFIL+1(3),CURRDCB+1  Q/-READING FROM THE WORKFILE    13280000
         BNE   S30NOPE1       NOPE LET LEAVE                            13290000
         NOTE  (15)           GET CURRENT TTR POSITION                  13300000
         L     R14,AP52DCBS                                             13310000
         USING P52DCBS,R14                                              13320000
         ST    R1,S30TTRC     SAVE THIS GUY FOR LATER                   13330000
         DROP  R14                                                      13340000
*        L     R1,SYS1NEXT    GET CURRENT WORKFILE O/P TTR              13350000
*        LA    R1,256(R1)     UP IT BY 1 BLOCK                          13360000
*        ST    R1,SYS1NEXT    PUT IT BACK                               13370000
S30NOPE1 EQU   *                                                        13380000
         LR    R1,R7          SET R1 -> AREA TO BE WRITTEN        75128 13390000
         BAL   R14,OPBLOCK    OUTPUT THE BLOCK                    75128 13400000
         L     R15,AWORK2DC   LOAD DCB ADDRESS OF OUTPUT WORKFILE       13410000
         B     S30NOTE                                                  13420000
         IFOS  =X8,S30NOTE                                              13430000
         L     R15,AWORKFIL                                             13440000
S30NOTE  NOTE  (R15)          NOTE LAST POSITION JUST WRITTEN OUT 75128 13450000
         ST    R1,SYS1NEXT    RESET NEXT TTR LOCN                       13460000
* SET SYS1NOTE TO THE ADDRESS OF THE FIRST BLOCK OUTPUT           87150 13461001
*  +++++++ MVS PROBLEM, SPET 1987 ++++++++++++++++++++++++++++++  87150 13462001
         IFVALUE SYS1NOTE,S30TPREP                                87150 13463001
         ST    R1,SYS1NOTE                                        87150 13464001
* NOW REPOSITION THE WORK FILE BACK TO WHERE IT WAS BEFORE THE WRITE    13470000
S30TPREP CLI   PHASE,C'P'     IS PREPROCESSER RUNNING                   13480002
         BNE   S30NOPE2       NOPE                                      13490000
         L     R14,AP52DCBS                                             13500000
         USING P52DCBS,R14                                              13510000
         L     R15,AWORKFIL   GET WORKFILE DCB ADDRESS                  13520000
         CLC   AWORKFIL+1(3),CURRDCB+1  Q/-READING FROM THE WORKFILE    13530000
         BNE   S30NOPE2       NOPE LET LEAVE                            13540000
         DROP  R14                                                      13550000
         $CALL UJS30REP,(S30TTRC) OK GOOOOD CALL REPOSITITION MODULE    13560000
S30NOPE2 L     R1,SYS1NEXT    RELOAD CURRENT TTR                        13570000
* NOW STORE TTR IN BUFFER CONTROL BLOCK.                                13580000
         LH    R14,S30BLKNO   LOAD CURRENT NUMBER OF BLOCKS             13590000
         LA    R14,1(R14)     ADD 1                                     13600000
         CH    R14,S30MAXBL   TOO MANY ?                                13610000
         BH    S30ERR2        YES,ABEND                                 13620000
         STH   R14,S30BLKNO   RESET BLOCK NUMBER                  75128 13630000
         SLL   R14,2           * 4                                      13640000
         ST    R1,S30TTR1-4(R14)                                        13650000
         MVC   S30LASTL,0(R7) SHIFT LENGTH OF BLOCK JUST WRITTEN        13660000
*                             SO INPUT RTNS CAN KNOW LAST LENGTH        13670000
         MVC   0(4,R7),=AL2(4,0) RESET BLOCK LENGTH TO 4                13680000
         LTR   R6,R6                                                    13690000
         BP    S30START       RELOAD SOME REGISTERS                     13700000
         JOLRETN RC=0        (WE WERE CALLED TO MERELY EMPTY            13710000
*                              THE BUFFERS).                            13720000
S30ERR1  LA    R1,#S30REC                                               13730019
         WTO  'JOL/UJS30OP: INTERNAL ERROR: RECORD TOO LARGE',         +13730119
               ROUTCDE=(2,11)                                           13730219
         WTO  'SEE AREA WHERE REGISTER 1 IS POINTING TO',              +13730319
               ROUTCDE=(2,11)                                           13730419
         ABEND 20,DUMP                                                  13731019
S30ERR2  WTO  'JOL/UJS30OP: TOO MANY RECORDS IN INTERMEDIATE FILE',    +13732019
               ROUTCDE=(2,11)                                           13733019
         WTO  'SEE YOUR SYSTEM PROGRAMMER',                            +13734019
               ROUTCDE=(2,11)                                           13735019
         ABEND 21,DUMP                                                  13740019
         LTORG                                                          13750000
         DC    9S(*,*,*,*)                                              13760000
         SPACE 3                                                        13770000
S30SAVE  DSECT                                                          13780000
         DS    18F                                                      13790000
S30TTRC  DS    F                                                        13800000
S30WORK  DS    H                                                        13810000
         DS    H                                                        13820000
S30DSIZE EQU   *-S30SAVE                                                13830000
S30PARM  DSECT                                                          13840000
S30ABUF  DS    A               ADDRESS OF BUFFER                        13850000
S30LBUF  DS    H               LENGTH OF BUFFER                         13860000
S30BLKNO DS    H               CURRENT BLOCK NUMBER                     13870000
S30MAXBL DS    H               MAX NO OF BLOCKS                         13880000
S30LASTL DS    H               LAST BLOCK LENGTH                        13890000
S30TTR1  DS    A               TTRS OF BLOCKS                           13900000
S30OP    DSECT                                                          13910000
#S30REC  DS    H               LENGTH OF RECORD TO GO OUT               13920000
S30REC   DS    CL1             RECORD                                   13930000
         LTORG                                                          13940000
         JOLSAVE CSECT=UJS98QU                                    76200 13950000
* THIS CSECT HAS A PARAMETER -> VARYING CHARACTER STRING.         76200 13960000
* THE IDEA IS TO DROP QUOTES FROM EITHER END, THEN CHECK FOR      76200 13970000
* DOUBLE QUOTES IN THE MIDDLE AND MAKE THEM 1, IF ANY ARE FOUND.  76200 13980000
         SPACE 2                                                  76200 13990000
         L     R5,0(R1)       POINT TO PARM              JOL30027 76200 14000000
         CLC   0(2,R5),ZERO   ZERO LENGTH ?              JOL30027 76200 14010000
         BE    S98RETN                                   JOL30027 76200 14020000
         MVC   DBL(2),0(R5)   SHIFT LENGTH SO NO 0C6     JOL30027 76200 14030000
         LH    R6,DBL         LOAD ITS LENGTH.           JOL30027 76200 14040000
         CLI   2(R5),C''''    QUOTE ON START OF STRING ? JOL30027 76200 14050000
         BNE   S98FDBLQ       NO,SO JUMP INTO DBL QUOTE  JOL30027 76200 14060000
         SPACE 2                                         JOL30027 76200 14070000
         BCTR  R6,0           -1 FROM R6                 JOL30027 76200 14080000
         BCTR  R6,0           -1 FROM R6 =-2             JOL30027 76200 14090000
         LTR   R7,R6          SAVE NEW LENGTH            JOL30027 76200 14100000
         BZ    S98RETZ        IF ZERO NOW, STORE LEN, RET OL30027 82200 14110000
         BCTR  R6,0           -1 FOR MVC EXECUTE         JOL30027 76200 14120000
****************************************************************** DASD 14130000
* ABEND 002 OCCURED BY A MINUS VALUE IN REG-6 WHICH SHIFTED      * DASD 14140000
* THE BUFFER ADDRESS (WHICH IS GETMAINED AFTER THE TKN AREA)       DASD 14150000
* ONE BYTE WHICH LEFT A BIG RDW IN THE VB LENGTH                 * DASD 14160000
* A TEST HERE FOR A MINUS VALUE SHOULD DO IT                     * DASD 14170000
****************************************************************** DASD 14180000
         LTR   R6,R6   DID REGISTER 6 GO NEGATIVE  ??              DASD 14190000
         BM    S98RETN YEP   LETS NOT DO ANY MORE                  DASD 14200000
         EX    R6,S98MVC1     MOVE AND DROP 1ST QUOTE    JOL30027 76200 14210000
         LA    R8,3(R5,R6)    POINT TO LAST QUOTE-1      JOL30027 76200 14220000
         MVC   0(2,R8),BLANKS BLANK THEM OUT             JOL30027 76200 14230000
         STH   R7,DBL         RESET -                    JOL30027 76200 14240000
         MVC   0(2,R5),DBL    -STRING LENGTH NOW         JOL30027 76200 14250000
         SPACE 2                                         JOL30027 76200 14260000
S98FDBLQ EQU   *                                         JOL30027 76200 14270000
         LH    R6,0(R5)    LOAD STRING LENGTH                     76200 14280000
         SPACE 1                                         JOL30027 76200 14290000
         LA    R1,2(R5)       LOAD START ADDRESS OF STR. JOL30027 76200 14300000
         LA    R14,1          SET LOOP INCR=1            JOL30027 76200 14310000
         LA    R15,1(R5,R6)   POINT TO END-1             JOL30027 76200 14320000
S98LUP   CLC   0(2,R1),=C'''''' DOUBLE QUOTE PERHAPS?    JOL30027 76200 14330000
         BE    S98DBL         YES ->                     JOL30027 76200 14340000
         BXLE  R1,R14,S98LUP                             JOL30027 76200 14350000
S98RETZ  STH   R6,DBL         END --- RESET LENGTH       JOL30027 76200 14360000
         MVC   0(2,R5),DBL    DONE                       JOL30027 76200 14370000
S98RETN  JOLRETN RC=0                                    JOL30027 76200 14380000
         SPACE 2                                         JOL30027 76200 14390000
S98DBL   EQU   *                                         JOL30027 76200 14400000
* CALCULATE LENGTH TO SHIFT                              JOL30027 76200 14410000
         LR    R9,R15         LOAD END POINTER           JOL30027 76200 14420000
         SR    R9,R1          -CURRENT BYTE ADDRESS      JOL30027 76200 14430000
         EX    R9,S98MVC2     SHIFT BACK A BYTE          JOL30027 76200 14440000
         LA    R1,1(R1)       SKIP OVER THE SECOND OF THE TWO           14450000
*                             QUOTES WE HAVE JUST CONDENSED TO ONE.     14460000
         S     R6,ONE         -1 FOR LENGTH NOW          JOL30027 76200 14470000
         BP    S98LUP         STILL DATA THERE?->CONTINUEJOL30027 76200 14480000
         B     S98RETN        ELSE RETN                  JOL30027 76200 14490000
         SPACE 3                                         JOL30027 76200 14500000
S98MVC1  MVC   2(*-*,R5),3(R5)                           JOL30027 76200 14510000
S98MVC2  MVC   0(*-*,R1),1(R1)                           JOL30027 76200 14520000
         LTORG                                           JOL30027 76200 14530000
         CNOP  0,8                                       JOL30027 76200 14540000
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*)                JOL30027 76200 14550000
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*)                JOL30027 76200 14560000
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*)                JOL30027 76200 14570000
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*)                JOL30027 76200 14580000
         DCBD  DSORG=PS,DEVD=DA                                   75128 14590000
         END                                                            14600000
